gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (May 13 2013) (UNIX)
               00004 ; This file was generated Sat May 18 21:43:28 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _nbr_sec
               00016         global _message
               00017         global _AN0String
               00018         global _get_pool_el_ip
               00019         global _set_to_dhcp_ip
               00020         global _int_to_string
               00021         global _mac_cmp
               00022         global _ip_cmp
               00023         global _update_pool
               00024         global _send_release
               00025         global _extract_bootp_header
               00026         global _handle_server_msg
               00027         global _forgeBootpHeaderRequest
               00028         global _forgeBootpHeaderAck
               00029         global _transfer_msg_to_client
               00030         global _set_mac_to_dhcp_server
               00031         global _handle_client_msg
               00032         global _build_bootp
               00033         global _end_dhcp
               00034         global _discover_msg
               00035         global _request_msg
               00036         global _DisplayWORD
               00037         global _DisplayString
               00038         global _DisplayIPValue
               00039         global _strlcpy
               00040         global _AppConfig
               00041         global _GATEWAY_MACA
               00042         global _pool
               00043         global _LowISR
               00044         global _HighISR
               00045         global _init_pool_el
               00046         global _init_pool
               00047         global _is_free
               00048         global _add_to_pool
               00049         global _remove_from_pool
               00050         global _get_pool_el_mac
               00051         global _set_to_MAC
               00052         global _number_of_char
               00053         global _display_mac
               00054         global _display_ip
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         global _time_action
               00056         global _build_dhcp_header
               00057         global _send_request
               00058         global _wait_network_data
               00059         global _get_ack_lease_time
               00060         global _forgeBootpHeader
               00061         global _UDPPutArrayInvert
               00062         global _get_gateway_MAC
               00063         global _main
               00064 
               00065 ;--------------------------------------------------------
               00066 ; extern variables in this module
               00067 ;--------------------------------------------------------
               00068         extern __gptrput1
               00069         extern __gptrput4
               00070         extern __gptrput2
               00071         extern __gptrget1
               00072         extern __gptrput3
               00073         extern __gptrget2
               00074         extern _EBSTCONbits
               00075         extern _MISTATbits
               00076         extern _EFLOCONbits
               00077         extern _MACON1bits
               00078         extern _MACON2bits
               00079         extern _MACON3bits
               00080         extern _MACON4bits
               00081         extern _MACLCON1bits
               00082         extern _MACLCON2bits
               00083         extern _MICONbits
               00084         extern _MICMDbits
               00085         extern _EWOLIEbits
               00086         extern _EWOLIRbits
               00087         extern _ERXFCONbits
               00088         extern _EIEbits
               00089         extern _ESTATbits
               00090         extern _ECON2bits
               00091         extern _EIRbits
               00092         extern _EDATAbits
               00093         extern _SSP2CON2bits
               00094         extern _SSP2CON1bits
               00095         extern _SSP2STATbits
               00096         extern _ECCP2DELbits
               00097         extern _ECCP2ASbits
               00098         extern _ECCP3DELbits
               00099         extern _ECCP3ASbits
               00100         extern _RCSTA2bits
               00101         extern _TXSTA2bits
               00102         extern _CCP5CONbits
               00103         extern _CCP4CONbits
               00104         extern _T4CONbits
               00105         extern _ECCP1DELbits
               00106         extern _BAUDCON2bits
               00107         extern _BAUDCTL2bits
               00108         extern _BAUDCONbits
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _BAUDCON1bits
               00110         extern _BAUDCTLbits
               00111         extern _BAUDCTL1bits
               00112         extern _PORTAbits
               00113         extern _PORTBbits
               00114         extern _PORTCbits
               00115         extern _PORTDbits
               00116         extern _PORTEbits
               00117         extern _PORTFbits
               00118         extern _PORTGbits
               00119         extern _PORTHbits
               00120         extern _PORTJbits
               00121         extern _LATAbits
               00122         extern _LATBbits
               00123         extern _LATCbits
               00124         extern _LATDbits
               00125         extern _LATEbits
               00126         extern _LATFbits
               00127         extern _LATGbits
               00128         extern _LATHbits
               00129         extern _LATJbits
               00130         extern _DDRAbits
               00131         extern _TRISAbits
               00132         extern _DDRBbits
               00133         extern _TRISBbits
               00134         extern _DDRCbits
               00135         extern _TRISCbits
               00136         extern _DDRDbits
               00137         extern _TRISDbits
               00138         extern _DDREbits
               00139         extern _TRISEbits
               00140         extern _DDRFbits
               00141         extern _TRISFbits
               00142         extern _DDRGbits
               00143         extern _TRISGbits
               00144         extern _DDRHbits
               00145         extern _TRISHbits
               00146         extern _DDRJbits
               00147         extern _TRISJbits
               00148         extern _OSCTUNEbits
               00149         extern _MEMCONbits
               00150         extern _PIE1bits
               00151         extern _PIR1bits
               00152         extern _IPR1bits
               00153         extern _PIE2bits
               00154         extern _PIR2bits
               00155         extern _IPR2bits
               00156         extern _PIE3bits
               00157         extern _PIR3bits
               00158         extern _IPR3bits
               00159         extern _EECON1bits
               00160         extern _RCSTAbits
               00161         extern _RCSTA1bits
               00162         extern _TXSTAbits
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _TXSTA1bits
               00164         extern _PSPCONbits
               00165         extern _T3CONbits
               00166         extern _CMCONbits
               00167         extern _CVRCONbits
               00168         extern _ECCP1ASbits
               00169         extern _CCP3CONbits
               00170         extern _ECCP3CONbits
               00171         extern _CCP2CONbits
               00172         extern _ECCP2CONbits
               00173         extern _CCP1CONbits
               00174         extern _ECCP1CONbits
               00175         extern _ADCON2bits
               00176         extern _ADCON1bits
               00177         extern _ADCON0bits
               00178         extern _SSP1CON2bits
               00179         extern _SSPCON2bits
               00180         extern _SSP1CON1bits
               00181         extern _SSPCON1bits
               00182         extern _SSP1STATbits
               00183         extern _SSPSTATbits
               00184         extern _T2CONbits
               00185         extern _T1CONbits
               00186         extern _RCONbits
               00187         extern _WDTCONbits
               00188         extern _ECON1bits
               00189         extern _OSCCONbits
               00190         extern _T0CONbits
               00191         extern _STATUSbits
               00192         extern _INTCON3bits
               00193         extern _INTCON2bits
               00194         extern _INTCONbits
               00195         extern _STKPTRbits
               00196         extern _stdin
               00197         extern _stdout
               00198         extern _activeUDPSocket
               00199         extern _UDPSocketInfo
               00200         extern _UDPTxCount
               00201         extern _UDPRxCount
               00202         extern _LCDText
               00203         extern _MAADR5
               00204         extern _MAADR6
               00205         extern _MAADR3
               00206         extern _MAADR4
               00207         extern _MAADR1
               00208         extern _MAADR2
               00209         extern _EBSTSD
               00210         extern _EBSTCON
               00211         extern _EBSTCS
               00212         extern _EBSTCSL
               00213         extern _EBSTCSH
               00214         extern _MISTAT
               00215         extern _EFLOCON
               00216         extern _EPAUS
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPAUSL
               00218         extern _EPAUSH
               00219         extern _MACON1
               00220         extern _MACON2
               00221         extern _MACON3
               00222         extern _MACON4
               00223         extern _MABBIPG
               00224         extern _MAIPG
               00225         extern _MAIPGL
               00226         extern _MAIPGH
               00227         extern _MACLCON1
               00228         extern _MACLCON2
               00229         extern _MAMXFL
               00230         extern _MAMXFLL
               00231         extern _MAMXFLH
               00232         extern _MICON
               00233         extern _MICMD
               00234         extern _MIREGADR
               00235         extern _MIWR
               00236         extern _MIWRL
               00237         extern _MIWRH
               00238         extern _MIRD
               00239         extern _MIRDL
               00240         extern _MIRDH
               00241         extern _EHT0
               00242         extern _EHT1
               00243         extern _EHT2
               00244         extern _EHT3
               00245         extern _EHT4
               00246         extern _EHT5
               00247         extern _EHT6
               00248         extern _EHT7
               00249         extern _EPMM0
               00250         extern _EPMM1
               00251         extern _EPMM2
               00252         extern _EPMM3
               00253         extern _EPMM4
               00254         extern _EPMM5
               00255         extern _EPMM6
               00256         extern _EPMM7
               00257         extern _EPMCS
               00258         extern _EPMCSL
               00259         extern _EPMCSH
               00260         extern _EPMO
               00261         extern _EPMOL
               00262         extern _EPMOH
               00263         extern _EWOLIE
               00264         extern _EWOLIR
               00265         extern _ERXFCON
               00266         extern _EPKTCNT
               00267         extern _EWRPT
               00268         extern _EWRPTL
               00269         extern _EWRPTH
               00270         extern _ETXST
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _ETXSTL
               00272         extern _ETXSTH
               00273         extern _ETXND
               00274         extern _ETXNDL
               00275         extern _ETXNDH
               00276         extern _ERXST
               00277         extern _ERXSTL
               00278         extern _ERXSTH
               00279         extern _ERXND
               00280         extern _ERXNDL
               00281         extern _ERXNDH
               00282         extern _ERXRDPT
               00283         extern _ERXRDPTL
               00284         extern _ERXRDPTH
               00285         extern _ERXWRPT
               00286         extern _ERXWRPTL
               00287         extern _ERXWRPTH
               00288         extern _EDMAST
               00289         extern _EDMASTL
               00290         extern _EDMASTH
               00291         extern _EDMAND
               00292         extern _EDMANDL
               00293         extern _EDMANDH
               00294         extern _EDMADST
               00295         extern _EDMADSTL
               00296         extern _EDMADSTH
               00297         extern _EDMACS
               00298         extern _EDMACSL
               00299         extern _EDMACSH
               00300         extern _EIE
               00301         extern _ESTAT
               00302         extern _ECON2
               00303         extern _EIR
               00304         extern _EDATA
               00305         extern _SSP2CON2
               00306         extern _SSP2CON1
               00307         extern _SSP2STAT
               00308         extern _SSP2ADD
               00309         extern _SSP2BUF
               00310         extern _ECCP2DEL
               00311         extern _ECCP2AS
               00312         extern _ECCP3DEL
               00313         extern _ECCP3AS
               00314         extern _RCSTA2
               00315         extern _TXSTA2
               00316         extern _TXREG2
               00317         extern _RCREG2
               00318         extern _SPBRG2
               00319         extern _CCP5CON
               00320         extern _CCPR5
               00321         extern _CCPR5L
               00322         extern _CCPR5H
               00323         extern _CCP4CON
               00324         extern _CCPR4
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _CCPR4L
               00326         extern _CCPR4H
               00327         extern _T4CON
               00328         extern _PR4
               00329         extern _TMR4
               00330         extern _ECCP1DEL
               00331         extern _ERDPT
               00332         extern _ERDPTL
               00333         extern _ERDPTH
               00334         extern _BAUDCON2
               00335         extern _BAUDCTL2
               00336         extern _SPBRGH2
               00337         extern _BAUDCON
               00338         extern _BAUDCON1
               00339         extern _BAUDCTL
               00340         extern _BAUDCTL1
               00341         extern _SPBRGH
               00342         extern _SPBRGH1
               00343         extern _PORTA
               00344         extern _PORTB
               00345         extern _PORTC
               00346         extern _PORTD
               00347         extern _PORTE
               00348         extern _PORTF
               00349         extern _PORTG
               00350         extern _PORTH
               00351         extern _PORTJ
               00352         extern _LATA
               00353         extern _LATB
               00354         extern _LATC
               00355         extern _LATD
               00356         extern _LATE
               00357         extern _LATF
               00358         extern _LATG
               00359         extern _LATH
               00360         extern _LATJ
               00361         extern _DDRA
               00362         extern _TRISA
               00363         extern _DDRB
               00364         extern _TRISB
               00365         extern _DDRC
               00366         extern _TRISC
               00367         extern _DDRD
               00368         extern _TRISD
               00369         extern _DDRE
               00370         extern _TRISE
               00371         extern _DDRF
               00372         extern _TRISF
               00373         extern _DDRG
               00374         extern _TRISG
               00375         extern _DDRH
               00376         extern _TRISH
               00377         extern _DDRJ
               00378         extern _TRISJ
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _OSCTUNE
               00380         extern _MEMCON
               00381         extern _PIE1
               00382         extern _PIR1
               00383         extern _IPR1
               00384         extern _PIE2
               00385         extern _PIR2
               00386         extern _IPR2
               00387         extern _PIE3
               00388         extern _PIR3
               00389         extern _IPR3
               00390         extern _EECON1
               00391         extern _EECON2
               00392         extern _RCSTA
               00393         extern _RCSTA1
               00394         extern _TXSTA
               00395         extern _TXSTA1
               00396         extern _TXREG
               00397         extern _TXREG1
               00398         extern _RCREG
               00399         extern _RCREG1
               00400         extern _SPBRG
               00401         extern _SPBRG1
               00402         extern _PSPCON
               00403         extern _T3CON
               00404         extern _TMR3L
               00405         extern _TMR3H
               00406         extern _CMCON
               00407         extern _CVRCON
               00408         extern _ECCP1AS
               00409         extern _CCP3CON
               00410         extern _ECCP3CON
               00411         extern _CCPR3
               00412         extern _CCPR3L
               00413         extern _CCPR3H
               00414         extern _CCP2CON
               00415         extern _ECCP2CON
               00416         extern _CCPR2
               00417         extern _CCPR2L
               00418         extern _CCPR2H
               00419         extern _CCP1CON
               00420         extern _ECCP1CON
               00421         extern _CCPR1
               00422         extern _CCPR1L
               00423         extern _CCPR1H
               00424         extern _ADCON2
               00425         extern _ADCON1
               00426         extern _ADCON0
               00427         extern _ADRES
               00428         extern _ADRESL
               00429         extern _ADRESH
               00430         extern _SSP1CON2
               00431         extern _SSPCON2
               00432         extern _SSP1CON1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _SSPCON1
               00434         extern _SSP1STAT
               00435         extern _SSPSTAT
               00436         extern _SSP1ADD
               00437         extern _SSPADD
               00438         extern _SSP1BUF
               00439         extern _SSPBUF
               00440         extern _T2CON
               00441         extern _PR2
               00442         extern _TMR2
               00443         extern _T1CON
               00444         extern _TMR1L
               00445         extern _TMR1H
               00446         extern _RCON
               00447         extern _WDTCON
               00448         extern _ECON1
               00449         extern _OSCCON
               00450         extern _T0CON
               00451         extern _TMR0L
               00452         extern _TMR0H
               00453         extern _STATUS
               00454         extern _FSR2L
               00455         extern _FSR2H
               00456         extern _PLUSW2
               00457         extern _PREINC2
               00458         extern _POSTDEC2
               00459         extern _POSTINC2
               00460         extern _INDF2
               00461         extern _BSR
               00462         extern _FSR1L
               00463         extern _FSR1H
               00464         extern _PLUSW1
               00465         extern _PREINC1
               00466         extern _POSTDEC1
               00467         extern _POSTINC1
               00468         extern _INDF1
               00469         extern _WREG
               00470         extern _FSR0L
               00471         extern _FSR0H
               00472         extern _PLUSW0
               00473         extern _PREINC0
               00474         extern _POSTDEC0
               00475         extern _POSTINC0
               00476         extern _INDF0
               00477         extern _INTCON3
               00478         extern _INTCON2
               00479         extern _INTCON
               00480         extern _PROD
               00481         extern _PRODL
               00482         extern _PRODH
               00483         extern _TABLAT
               00484         extern _TBLPTR
               00485         extern _TBLPTRL
               00486         extern _TBLPTRH
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00487         extern _TBLPTRU
               00488         extern _PC
               00489         extern _PCL
               00490         extern _PCLATH
               00491         extern _PCLATU
               00492         extern _STKPTR
               00493         extern _TOS
               00494         extern _TOSL
               00495         extern _TOSH
               00496         extern _TOSU
               00497         extern _uitoa
               00498         extern _ultoa
               00499         extern _strlen
               00500         extern _memcpy
               00501         extern _memset
               00502         extern _StackInit
               00503         extern _StackTaskHelp
               00504         extern _StackTask
               00505         extern _TickInit
               00506         extern _TickGet
               00507         extern _TickConvertToMilliseconds
               00508         extern _TickUpdate
               00509         extern _ARPResolve
               00510         extern _ARPIsResolved
               00511         extern _UDPOpen
               00512         extern _UDPIsPutReady
               00513         extern _UDPPut
               00514         extern _UDPPutArray
               00515         extern _UDPFlush
               00516         extern _UDPIsGetReady
               00517         extern _UDPGet
               00518         extern _UDPGetArray
               00519         extern _UDPDiscard
               00520         extern _LCDInit
               00521         extern _LCDUpdate
               00522         extern __divsint
               00523         extern __modsint
               00524         extern __modulong
               00525 ;--------------------------------------------------------
               00526 ;       Equates to used internal registers
               00527 ;--------------------------------------------------------
  00000FD8     00528 STATUS  equ     0xfd8
  00000FFA     00529 PCLATH  equ     0xffa
  00000FFB     00530 PCLATU  equ     0xffb
  00000FE8     00531 WREG    equ     0xfe8
  00000FE0     00532 BSR     equ     0xfe0
  00000FF6     00533 TBLPTRL equ     0xff6
  00000FF7     00534 TBLPTRH equ     0xff7
  00000FE9     00535 FSR0L   equ     0xfe9
  00000FEA     00536 FSR0H   equ     0xfea
  00000FE1     00537 FSR1L   equ     0xfe1
  00000FD9     00538 FSR2L   equ     0xfd9
  00000FEF     00539 INDF0   equ     0xfef
  00000FEE     00540 POSTINC0        equ     0xfee
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FE5     00541 POSTDEC1        equ     0xfe5
  00000FE4     00542 PREINC1 equ     0xfe4
  00000FDB     00543 PLUSW2  equ     0xfdb
  00000FF3     00544 PRODL   equ     0xff3
  00000FF4     00545 PRODH   equ     0xff4
               00546 
               00547 
               00548         idata
               00549 _nbr_sec        db      0x00, 0x00
               00550 _time_action_prev_1_1   db      0x00, 0x00, 0x00, 0x00
               00551 _time_action_t_1_1      db      0x00, 0x00, 0x00, 0x00
               00552 _time_action_count_1_1  db      0x00, 0x00, 0x00, 0x00
               00553 
               00554 
               00555 ; Internal registers
               00556 .registers      udata_ovr       0x0000
               00557 r0x00   res     1
               00558 r0x01   res     1
               00559 r0x02   res     1
               00560 r0x03   res     1
               00561 r0x04   res     1
               00562 r0x05   res     1
               00563 r0x06   res     1
               00564 r0x07   res     1
               00565 r0x08   res     1
               00566 r0x09   res     1
               00567 r0x0a   res     1
               00568 r0x0b   res     1
               00569 r0x0c   res     1
               00570 r0x0d   res     1
               00571 r0x0e   res     1
               00572 r0x0f   res     1
               00573 r0x10   res     1
               00574 r0x11   res     1
               00575 r0x12   res     1
               00576 r0x13   res     1
               00577 r0x14   res     1
               00578 r0x15   res     1
               00579 r0x16   res     1
               00580 r0x17   res     1
               00581 r0x18   res     1
               00582 r0x19   res     1
               00583 r0x1a   res     1
               00584 
               00585 udata_MainDemo_0        udata
               00586 _AN0String      res     8
               00587 
               00588 udata_MainDemo_1        udata
               00589 _message        res     3
               00590 
               00591 udata_MainDemo_2        udata
               00592 _pool   res     200
               00593 
               00594 udata_MainDemo_3        udata
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00595 _remove_from_pool_pool_el_1_1   res     3
               00596 
               00597 udata_MainDemo_4        udata
               00598 _display_mac_a_1_1      res     10
               00599 
               00600 udata_MainDemo_5        udata
               00601 _display_mac_b_1_1      res     10
               00602 
               00603 udata_MainDemo_6        udata
               00604 _display_mac_c_1_1      res     10
               00605 
               00606 udata_MainDemo_7        udata
               00607 _display_mac_d_1_1      res     10
               00608 
               00609 udata_MainDemo_8        udata
               00610 _display_mac_e_1_1      res     10
               00611 
               00612 udata_MainDemo_9        udata
               00613 _display_mac_f_1_1      res     10
               00614 
               00615 udata_MainDemo_10       udata
               00616 _display_ip_a_1_1       res     10
               00617 
               00618 udata_MainDemo_11       udata
               00619 _display_ip_b_1_1       res     10
               00620 
               00621 udata_MainDemo_12       udata
               00622 _display_ip_c_1_1       res     10
               00623 
               00624 udata_MainDemo_13       udata
               00625 _display_ip_d_1_1       res     10
               00626 
               00627 udata_MainDemo_14       udata
               00628 _send_request_dhcp_header_length_1_1    res     2
               00629 
               00630 udata_MainDemo_15       udata
               00631 _send_request_bootp_header_1_1  res     34
               00632 
               00633 udata_MainDemo_16       udata
               00634 _send_request_dhcp_header_1_1   res     200
               00635 
               00636 udata_MainDemo_17       udata
               00637 _send_release_bootp_header_1_1  res     34
               00638 
               00639 udata_MainDemo_18       udata
               00640 _AppConfig      res     51
               00641 
               00642 udata_MainDemo_19       udata
               00643 _wait_network_data_socket_sendto_server_1_1     res     1
               00644 
               00645 udata_MainDemo_20       udata
               00646 _wait_network_data_socket_recv_1_1      res     1
               00647 
               00648 udata_MainDemo_21       udata
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00649 _wait_network_data_socket_sendto_client_1_1     res     1
               00650 
               00651 udata_MainDemo_22       udata
               00652 _wait_network_data_dhcp_server_ip_1_1   res     4
               00653 
               00654 udata_MainDemo_23       udata
               00655 _wait_network_data_last_ip_1_1  res     4
               00656 
               00657 udata_MainDemo_24       udata
               00658 _extract_bootp_header_opt_1_1   res     1
               00659 
               00660 udata_MainDemo_25       udata
               00661 _extract_bootp_header_word_buf_1_1      res     4
               00662 
               00663 udata_MainDemo_26       udata
               00664 _extract_bootp_header_length_1_1        res     1
               00665 
               00666 udata_MainDemo_27       udata
               00667 _handle_server_msg_node_pool_state_1_1  res     3
               00668 
               00669 udata_MainDemo_28       udata
               00670 _handle_server_msg_dhcp_type_1_1        res     1
               00671 
               00672 udata_MainDemo_29       udata
               00673 _handle_server_msg_bootp_header_1_1     res     34
               00674 
               00675 udata_MainDemo_30       udata
               00676 _handle_server_msg_dhcp_header_1_1      res     200
               00677 
               00678 udata_MainDemo_31       udata
               00679 _handle_server_msg_dhcp_header_length_1_1       res     2
               00680 
               00681 udata_MainDemo_32       udata
               00682 _handle_server_msg_lease_time_1_1       res     4
               00683 
               00684 udata_MainDemo_33       udata
               00685 _transfer_msg_to_client_lease_time_1_1  res     2
               00686 
               00687 udata_MainDemo_34       udata
               00688 _transfer_msg_to_client_broadcast_1_1   res     4
               00689 
               00690 udata_MainDemo_35       udata
               00691 _GATEWAY_MACA   res     6
               00692 
               00693 udata_MainDemo_36       udata
               00694 _handle_client_msg_node_pool_state_1_1  res     3
               00695 
               00696 udata_MainDemo_37       udata
               00697 _handle_client_msg_dhcp_type_1_1        res     1
               00698 
               00699 udata_MainDemo_38       udata
               00700 _handle_client_msg_bootp_header_1_1     res     34
               00701 
               00702 udata_MainDemo_39       udata
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00703 _handle_client_msg_dhcp_header_1_1      res     200
               00704 
               00705 udata_MainDemo_40       udata
               00706 _handle_client_msg_dhcp_header_length_1_1       res     2
               00707 
               00708 udata_MainDemo_41       udata
               00709 _get_gateway_MAC_gateway_MAC2_1_1       res     6
               00710 
               00711 udata_MainDemo_42       udata
               00712 _main_gateway_MAC_1_1   res     6
               00713 
               00714 udata_MainDemo_43       udata
               00715 _DisplayWORD_WDigit_1_1 res     6
               00716 
               00717 udata_MainDemo_44       udata
               00718 _DisplayIPValue_IPDigit_1_1     res     4
               00719 
               00720 ;--------------------------------------------------------
               00721 ; interrupt vector 
               00722 ;--------------------------------------------------------
               00723 
               00724 ;--------------------------------------------------------
               00725 ; global & static initialisations
               00726 ;--------------------------------------------------------
               00727 ; ; Starting pCode block for absolute section
               00728 ; ;-----------------------------------------
               00729 S_MainDemo_ivec_0x2_LowISR      code    0X000018
0018 00730 ivec_0x2_LowISR:
0018 EF00 F000 00731         GOTO    _LowISR
               00732 
               00733 ; ; Starting pCode block for absolute section
               00734 ; ;-----------------------------------------
               00735 S_MainDemo_ivec_0x1_HighISR     code    0X000008
0008 00736 ivec_0x1_HighISR:
0008 EF00 F000 00737         GOTO    _HighISR
               00738 
               00739 ; I code from now on!
               00740 ; ; Starting pCode block
               00741 S_MainDemo__main        code
0000 00742 _main:
               00743 ;       .line   811; MainDemo.c InitializeBoard();
0000 EC00 F000 00744         CALL    _InitializeBoard
               00745 ;       .line   813; MainDemo.c LCDInit();
0004 EC00 F000 00746         CALL    _LCDInit
               00747 ;       .line   814; MainDemo.c DelayMs(100);
0008 0E10      00748         MOVLW   0x10
000A 6E00      00749         MOVWF   r0x00
000C 0E98      00750         MOVLW   0x98
000E 6E00      00751         MOVWF   r0x01
0010 0E02      00752         MOVLW   0x02
0012 6E00      00753         MOVWF   r0x02
0014 6A00      00754         CLRF    r0x03
0016 00755 _00680_DS_:
0016 C000 F000 00756         MOVFF   r0x00, r0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001A C000 F000 00757         MOVFF   r0x01, r0x05
001E C000 F000 00758         MOVFF   r0x02, r0x06
0022 C000 F000 00759         MOVFF   r0x03, r0x07
0026 0EFF      00760         MOVLW   0xff
0028 2600      00761         ADDWF   r0x00, F
002A 0EFF      00762         MOVLW   0xff
002C 2200      00763         ADDWFC  r0x01, F
002E 0EFF      00764         MOVLW   0xff
0030 2200      00765         ADDWFC  r0x02, F
0032 0EFF      00766         MOVLW   0xff
0034 2200      00767         ADDWFC  r0x03, F
0036 5000      00768         MOVF    r0x04, W
0038 1000      00769         IORWF   r0x05, W
003A 1000      00770         IORWF   r0x06, W
003C 1000      00771         IORWF   r0x07, W
003E E100      00772         BNZ     _00680_DS_
               00773 ;       .line   816; MainDemo.c TickInit();
0040 EC00 F000 00774         CALL    _TickInit
               00775 ;       .line   818; MainDemo.c InitAppConfig();
0044 EC00 F000 00776         CALL    _InitAppConfig
               00777 ;       .line   821; MainDemo.c StackInit();    
0048 EC00 F000 00778         CALL    _StackInit
               00779 ;       .line   823; MainDemo.c DisplayString(0, "LINGI2315");
004C 0E00      00780         MOVLW   UPPER(__str_8)
004E 6EE5      00781         MOVWF   POSTDEC1
0050 0E00      00782         MOVLW   HIGH(__str_8)
0052 6EE5      00783         MOVWF   POSTDEC1
0054 0E00      00784         MOVLW   LOW(__str_8)
0056 6EE5      00785         MOVWF   POSTDEC1
0058 0E00      00786         MOVLW   0x00
005A 6EE5      00787         MOVWF   POSTDEC1
005C EC00 F000 00788         CALL    _DisplayString
0060 0E04      00789         MOVLW   0x04
0062 26E1      00790         ADDWF   FSR1L, F
               00791 ;       .line   824; MainDemo.c get_gateway_MAC();
0064 EC00 F000 00792         CALL    _get_gateway_MAC
               00793 ;       .line   825; MainDemo.c init_pool();
0068 EC00 F000 00794         CALL    _init_pool
               00795 ;       .line   826; MainDemo.c wait_network_data(gateway_MAC);
006C 0E00      00796         MOVLW   HIGH(_main_gateway_MAC_1_1)
006E 6E00      00797         MOVWF   r0x01
0070 0E00      00798         MOVLW   LOW(_main_gateway_MAC_1_1)
0072 6E00      00799         MOVWF   r0x00
0074 0E80      00800         MOVLW   0x80
0076 6E00      00801         MOVWF   r0x02
0078 5000      00802         MOVF    r0x02, W
007A 6EE5      00803         MOVWF   POSTDEC1
007C 5000      00804         MOVF    r0x01, W
007E 6EE5      00805         MOVWF   POSTDEC1
0080 5000      00806         MOVF    r0x00, W
0082 6EE5      00807         MOVWF   POSTDEC1
0084 EC00 F000 00808         CALL    _wait_network_data
0088 0E03      00809         MOVLW   0x03
008A 26E1      00810         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008C 0012      00811         RETURN  
               00812 
               00813 ; ; Starting pCode block
               00814 S_MainDemo__strlcpy     code
0000 00815 _strlcpy:
               00816 ;       .line   1061; MainDemo.c        strlcpy(char *dst, const char *src, size_t siz)
0000 CFD9 FFE5 00817         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00818         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00819         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00820         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00821         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00822         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00823         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00824         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00825         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00826         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00827         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00828         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00829         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 00830         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 00831         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 00832         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 00833         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 00834         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 00835         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 00836         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 00837         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 00838         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 00839         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 00840         MOVFF   r0x15, POSTDEC1
0060 0E02      00841         MOVLW   0x02
0062 CFDB F000 00842         MOVFF   PLUSW2, r0x00
0066 0E03      00843         MOVLW   0x03
0068 CFDB F000 00844         MOVFF   PLUSW2, r0x01
006C 0E04      00845         MOVLW   0x04
006E CFDB F000 00846         MOVFF   PLUSW2, r0x02
0072 0E05      00847         MOVLW   0x05
0074 CFDB F000 00848         MOVFF   PLUSW2, r0x03
0078 0E06      00849         MOVLW   0x06
007A CFDB F000 00850         MOVFF   PLUSW2, r0x04
007E 0E07      00851         MOVLW   0x07
0080 CFDB F000 00852         MOVFF   PLUSW2, r0x05
0084 0E08      00853         MOVLW   0x08
0086 CFDB F000 00854         MOVFF   PLUSW2, r0x06
008A 0E09      00855         MOVLW   0x09
008C CFDB F000 00856         MOVFF   PLUSW2, r0x07
               00857 ;       .line   1063; MainDemo.c        char       *d = dst;
0090 C000 F000 00858         MOVFF   r0x00, r0x08
0094 C000 F000 00859         MOVFF   r0x01, r0x09
0098 C000 F000 00860         MOVFF   r0x02, r0x0a
               00861 ;       .line   1064; MainDemo.c        const char *s = src;
009C C000 F000 00862         MOVFF   r0x03, r0x0b
00A0 C000 F000 00863         MOVFF   r0x04, r0x0c
00A4 C000 F000 00864         MOVFF   r0x05, r0x0d
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00865 ;       .line   1065; MainDemo.c        size_t      n = siz;
00A8 C000 F000 00866         MOVFF   r0x06, r0x0e
00AC C000 F000 00867         MOVFF   r0x07, r0x0f
               00868 ;       .line   1068; MainDemo.c        if (n != 0)
00B0 5000      00869         MOVF    r0x06, W
00B2 1000      00870         IORWF   r0x07, W
00B4 B4D8      00871         BTFSC   STATUS, 2
00B6 D000      00872         BRA     _00774_DS_
               00873 ;       .line   1070; MainDemo.c        while (--n != 0)
00B8 C000 F000 00874         MOVFF   r0x03, r0x10
00BC C000 F000 00875         MOVFF   r0x04, r0x11
00C0 C000 F000 00876         MOVFF   r0x05, r0x12
00C4 C000 F000 00877         MOVFF   r0x06, r0x13
00C8 C000 F000 00878         MOVFF   r0x07, r0x14
00CC 00879 _00770_DS_:
00CC 0EFF      00880         MOVLW   0xff
00CE 2600      00881         ADDWF   r0x13, F
00D0 A0D8      00882         BTFSS   STATUS, 0
00D2 0600      00883         DECF    r0x14, F
00D4 5000      00884         MOVF    r0x13, W
00D6 1000      00885         IORWF   r0x14, W
00D8 E000      00886         BZ      _00789_DS_
               00887 ;       .line   1072; MainDemo.c        if ((*d++ = *s++) == '\0')
00DA C000 FFE9 00888         MOVFF   r0x10, FSR0L
00DE C000 FFF3 00889         MOVFF   r0x11, PRODL
00E2 5000      00890         MOVF    r0x12, W
00E4 EC00 F000 00891         CALL    __gptrget1
00E8 6E00      00892         MOVWF   r0x15
00EA 2A00      00893         INCF    r0x10, F
00EC B0D8      00894         BTFSC   STATUS, 0
00EE 2A00      00895         INCF    r0x11, F
00F0 B0D8      00896         BTFSC   STATUS, 0
00F2 2A00      00897         INCF    r0x12, F
00F4 C000 FFE5 00898         MOVFF   r0x15, POSTDEC1
00F8 C000 FFE9 00899         MOVFF   r0x00, FSR0L
00FC C000 FFF3 00900         MOVFF   r0x01, PRODL
0100 5000      00901         MOVF    r0x02, W
0102 EC00 F000 00902         CALL    __gptrput1
0106 2A00      00903         INCF    r0x00, F
0108 B0D8      00904         BTFSC   STATUS, 0
010A 2A00      00905         INCF    r0x01, F
010C B0D8      00906         BTFSC   STATUS, 0
010E 2A00      00907         INCF    r0x02, F
0110 5000      00908         MOVF    r0x15, W
0112 E100      00909         BNZ     _00770_DS_
0114 00910 _00789_DS_:
               00911 ;       .line   1073; MainDemo.c        break;
0114 C000 F000 00912         MOVFF   r0x10, r0x0b
0118 C000 F000 00913         MOVFF   r0x11, r0x0c
011C C000 F000 00914         MOVFF   r0x12, r0x0d
0120 C000 F000 00915         MOVFF   r0x00, r0x08
0124 C000 F000 00916         MOVFF   r0x01, r0x09
0128 C000 F000 00917         MOVFF   r0x02, r0x0a
012C C000 F000 00918         MOVFF   r0x13, r0x0e
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0130 C000 F000 00919         MOVFF   r0x14, r0x0f
0134 00920 _00774_DS_:
               00921 ;       .line   1078; MainDemo.c        if (n == 0)
0134 5000      00922         MOVF    r0x0e, W
0136 1000      00923         IORWF   r0x0f, W
0138 E100      00924         BNZ     _00781_DS_
               00925 ;       .line   1080; MainDemo.c        if (siz != 0)
013A 5000      00926         MOVF    r0x06, W
013C 1000      00927         IORWF   r0x07, W
013E E000      00928         BZ      _00788_DS_
               00929 ;       .line   1081; MainDemo.c        *d = '\0';          /* NUL-terminate dst */
0140 0E00      00930         MOVLW   0x00
0142 6EE5      00931         MOVWF   POSTDEC1
0144 C000 FFE9 00932         MOVFF   r0x08, FSR0L
0148 C000 FFF3 00933         MOVFF   r0x09, PRODL
014C 5000      00934         MOVF    r0x0a, W
014E EC00 F000 00935         CALL    __gptrput1
0152 00936 _00788_DS_:
               00937 ;       .line   1082; MainDemo.c        while (*s++)
0152 C000 F000 00938         MOVFF   r0x0b, r0x00
0156 C000 F000 00939         MOVFF   r0x0c, r0x01
015A C000 F000 00940         MOVFF   r0x0d, r0x02
015E 00941 _00777_DS_:
015E C000 FFE9 00942         MOVFF   r0x00, FSR0L
0162 C000 FFF3 00943         MOVFF   r0x01, PRODL
0166 5000      00944         MOVF    r0x02, W
0168 EC00 F000 00945         CALL    __gptrget1
016C 6E00      00946         MOVWF   r0x06
016E 2A00      00947         INCF    r0x00, F
0170 B0D8      00948         BTFSC   STATUS, 0
0172 2A00      00949         INCF    r0x01, F
0174 B0D8      00950         BTFSC   STATUS, 0
0176 2A00      00951         INCF    r0x02, F
0178 5000      00952         MOVF    r0x06, W
017A E100      00953         BNZ     _00777_DS_
017C C000 F000 00954         MOVFF   r0x00, r0x0b
0180 C000 F000 00955         MOVFF   r0x01, r0x0c
0184 C000 F000 00956         MOVFF   r0x02, r0x0d
0188 00957 _00781_DS_:
               00958 ;       .line   1086; MainDemo.c        return (s - src - 1);       /* count does not include NUL */
0188 5000      00959         MOVF    r0x03, W
018A 5C00      00960         SUBWF   r0x0b, W
018C 6E00      00961         MOVWF   r0x03
018E 5000      00962         MOVF    r0x04, W
0190 5800      00963         SUBWFB  r0x0c, W
0192 6E00      00964         MOVWF   r0x04
0194 0EFF      00965         MOVLW   0xff
0196 2600      00966         ADDWF   r0x03, F
0198 A0D8      00967         BTFSS   STATUS, 0
019A 0600      00968         DECF    r0x04, F
019C C000 FFF3 00969         MOVFF   r0x04, PRODL
01A0 5000      00970         MOVF    r0x03, W
01A2 CFE4 F000 00971         MOVFF   PREINC1, r0x15
01A6 CFE4 F000 00972         MOVFF   PREINC1, r0x14
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01AA CFE4 F000 00973         MOVFF   PREINC1, r0x13
01AE CFE4 F000 00974         MOVFF   PREINC1, r0x12
01B2 CFE4 F000 00975         MOVFF   PREINC1, r0x11
01B6 CFE4 F000 00976         MOVFF   PREINC1, r0x10
01BA CFE4 F000 00977         MOVFF   PREINC1, r0x0f
01BE CFE4 F000 00978         MOVFF   PREINC1, r0x0e
01C2 CFE4 F000 00979         MOVFF   PREINC1, r0x0d
01C6 CFE4 F000 00980         MOVFF   PREINC1, r0x0c
01CA CFE4 F000 00981         MOVFF   PREINC1, r0x0b
01CE CFE4 F000 00982         MOVFF   PREINC1, r0x0a
01D2 CFE4 F000 00983         MOVFF   PREINC1, r0x09
01D6 CFE4 F000 00984         MOVFF   PREINC1, r0x08
01DA CFE4 F000 00985         MOVFF   PREINC1, r0x07
01DE CFE4 F000 00986         MOVFF   PREINC1, r0x06
01E2 CFE4 F000 00987         MOVFF   PREINC1, r0x05
01E6 CFE4 F000 00988         MOVFF   PREINC1, r0x04
01EA CFE4 F000 00989         MOVFF   PREINC1, r0x03
01EE CFE4 F000 00990         MOVFF   PREINC1, r0x02
01F2 CFE4 F000 00991         MOVFF   PREINC1, r0x01
01F6 CFE4 F000 00992         MOVFF   PREINC1, r0x00
01FA CFE4 FFD9 00993         MOVFF   PREINC1, FSR2L
01FE 0012      00994         RETURN  
               00995 
               00996 ; ; Starting pCode block
               00997 S_MainDemo__InitAppConfig       code
0000 00998 _InitAppConfig:
               00999 ;       .line   990; MainDemo.c static void InitAppConfig(void)
0000 CFD9 FFE5 01000         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01001         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01002         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01003         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01004         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01005         MOVFF   r0x03, POSTDEC1
0018 0000      01006         BANKSEL (_AppConfig + 44)
               01007 ;       .line   992; MainDemo.c AppConfig.Flags.bIsDHCPEnabled = FALSE;
001A 9D00      01008         BCF     (_AppConfig + 44), 6, B
001C 0000      01009         BANKSEL (_AppConfig + 44)
               01010 ;       .line   993; MainDemo.c AppConfig.Flags.bInConfigMode = TRUE;
001E 8F00      01011         BSF     (_AppConfig + 44), 7, B
0020 0000      01012         BANKSEL (_AppConfig + 45)
               01013 ;       .line   997; MainDemo.c AppConfig.MyMACAddr.v[0] = 0;
0022 6B00      01014         CLRF    (_AppConfig + 45), B
               01015 ;       .line   998; MainDemo.c AppConfig.MyMACAddr.v[1] = 0x04;
0024 0E04      01016         MOVLW   0x04
0026 0000      01017         BANKSEL (_AppConfig + 46)
0028 6F00      01018         MOVWF   (_AppConfig + 46), B
               01019 ;       .line   999; MainDemo.c AppConfig.MyMACAddr.v[2] = 0xA3;
002A 0EA3      01020         MOVLW   0xa3
002C 0000      01021         BANKSEL (_AppConfig + 47)
002E 6F00      01022         MOVWF   (_AppConfig + 47), B
               01023 ;       .line   1000; MainDemo.c        AppConfig.MyMACAddr.v[3] = 0x01;
0030 0E01      01024         MOVLW   0x01
0032 0000      01025         BANKSEL (_AppConfig + 48)
0034 6F00      01026         MOVWF   (_AppConfig + 48), B
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01027 ;       .line   1001; MainDemo.c        AppConfig.MyMACAddr.v[4] = 0x02;
0036 0E02      01028         MOVLW   0x02
0038 0000      01029         BANKSEL (_AppConfig + 49)
003A 6F00      01030         MOVWF   (_AppConfig + 49), B
               01031 ;       .line   1002; MainDemo.c        AppConfig.MyMACAddr.v[5] = 0x03;
003C 0E03      01032         MOVLW   0x03
003E 0000      01033         BANKSEL (_AppConfig + 50)
0040 6F00      01034         MOVWF   (_AppConfig + 50), B
               01035 ;       .line   1005; MainDemo.c        AppConfig.MyIPAddr.Val = MY_DEFAULT_IP_ADDR_BYTE1 | 
0042 0EC0      01036         MOVLW   0xc0
0044 0000      01037         BANKSEL _AppConfig
0046 6F00      01038         MOVWF   _AppConfig, B
0048 0EA8      01039         MOVLW   0xa8
004A 0000      01040         BANKSEL (_AppConfig + 1)
004C 6F00      01041         MOVWF   (_AppConfig + 1), B
004E 0E61      01042         MOVLW   0x61
0050 0000      01043         BANKSEL (_AppConfig + 2)
0052 6F00      01044         MOVWF   (_AppConfig + 2), B
0054 0E3C      01045         MOVLW   0x3c
0056 0000      01046         BANKSEL (_AppConfig + 3)
0058 6F00      01047         MOVWF   (_AppConfig + 3), B
               01048 ;       .line   1008; MainDemo.c        AppConfig.DefaultIPAddr.Val = AppConfig.MyIPAddr.Val;
005A C000 F000 01049         MOVFF   _AppConfig, r0x00
005E C000 F000 01050         MOVFF   (_AppConfig + 1), r0x01
0062 C000 F000 01051         MOVFF   (_AppConfig + 2), r0x02
0066 C000 F000 01052         MOVFF   (_AppConfig + 3), r0x03
006A 5000      01053         MOVF    r0x00, W
006C 0000      01054         BANKSEL (_AppConfig + 20)
006E 6F00      01055         MOVWF   (_AppConfig + 20), B
0070 5000      01056         MOVF    r0x01, W
0072 0000      01057         BANKSEL (_AppConfig + 21)
0074 6F00      01058         MOVWF   (_AppConfig + 21), B
0076 5000      01059         MOVF    r0x02, W
0078 0000      01060         BANKSEL (_AppConfig + 22)
007A 6F00      01061         MOVWF   (_AppConfig + 22), B
007C 5000      01062         MOVF    r0x03, W
007E 0000      01063         BANKSEL (_AppConfig + 23)
0080 6F00      01064         MOVWF   (_AppConfig + 23), B
0082 0000      01065         BANKSEL (_AppConfig + 4)
               01066 ;       .line   1009; MainDemo.c        AppConfig.MyMask.Val = MY_DEFAULT_MASK_BYTE1 | 
0084 6900      01067         SETF    (_AppConfig + 4), B
0086 0000      01068         BANKSEL (_AppConfig + 5)
0088 6900      01069         SETF    (_AppConfig + 5), B
008A 0000      01070         BANKSEL (_AppConfig + 6)
008C 6900      01071         SETF    (_AppConfig + 6), B
008E 0000      01072         BANKSEL (_AppConfig + 7)
0090 6B00      01073         CLRF    (_AppConfig + 7), B
               01074 ;       .line   1012; MainDemo.c        AppConfig.DefaultMask.Val = AppConfig.MyMask.Val;
0092 C000 F000 01075         MOVFF   (_AppConfig + 4), r0x00
0096 C000 F000 01076         MOVFF   (_AppConfig + 5), r0x01
009A C000 F000 01077         MOVFF   (_AppConfig + 6), r0x02
009E C000 F000 01078         MOVFF   (_AppConfig + 7), r0x03
00A2 5000      01079         MOVF    r0x00, W
00A4 0000      01080         BANKSEL (_AppConfig + 24)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A6 6F00      01081         MOVWF   (_AppConfig + 24), B
00A8 5000      01082         MOVF    r0x01, W
00AA 0000      01083         BANKSEL (_AppConfig + 25)
00AC 6F00      01084         MOVWF   (_AppConfig + 25), B
00AE 5000      01085         MOVF    r0x02, W
00B0 0000      01086         BANKSEL (_AppConfig + 26)
00B2 6F00      01087         MOVWF   (_AppConfig + 26), B
00B4 5000      01088         MOVF    r0x03, W
00B6 0000      01089         BANKSEL (_AppConfig + 27)
00B8 6F00      01090         MOVWF   (_AppConfig + 27), B
               01091 ;       .line   1013; MainDemo.c        AppConfig.MyGateway.Val = MY_DEFAULT_GATE_BYTE1 | 
00BA 0EC0      01092         MOVLW   0xc0
00BC 0000      01093         BANKSEL (_AppConfig + 8)
00BE 6F00      01094         MOVWF   (_AppConfig + 8), B
00C0 0EA8      01095         MOVLW   0xa8
00C2 0000      01096         BANKSEL (_AppConfig + 9)
00C4 6F00      01097         MOVWF   (_AppConfig + 9), B
00C6 0E61      01098         MOVLW   0x61
00C8 0000      01099         BANKSEL (_AppConfig + 10)
00CA 6F00      01100         MOVWF   (_AppConfig + 10), B
00CC 0E01      01101         MOVLW   0x01
00CE 0000      01102         BANKSEL (_AppConfig + 11)
00D0 6F00      01103         MOVWF   (_AppConfig + 11), B
               01104 ;       .line   1016; MainDemo.c        AppConfig.PrimaryDNSServer.Val = MY_DEFAULT_PRIMARY_DNS_BYTE1 | 
00D2 0EC0      01105         MOVLW   0xc0
00D4 0000      01106         BANKSEL (_AppConfig + 12)
00D6 6F00      01107         MOVWF   (_AppConfig + 12), B
00D8 0EA8      01108         MOVLW   0xa8
00DA 0000      01109         BANKSEL (_AppConfig + 13)
00DC 6F00      01110         MOVWF   (_AppConfig + 13), B
00DE 0E61      01111         MOVLW   0x61
00E0 0000      01112         BANKSEL (_AppConfig + 14)
00E2 6F00      01113         MOVWF   (_AppConfig + 14), B
00E4 0E01      01114         MOVLW   0x01
00E6 0000      01115         BANKSEL (_AppConfig + 15)
00E8 6F00      01116         MOVWF   (_AppConfig + 15), B
00EA 0000      01117         BANKSEL (_AppConfig + 16)
               01118 ;       .line   1020; MainDemo.c        AppConfig.SecondaryDNSServer.Val = MY_DEFAULT_SECONDARY_DNS_BYTE1 | 
00EC 6B00      01119         CLRF    (_AppConfig + 16), B
00EE 0000      01120         BANKSEL (_AppConfig + 17)
00F0 6B00      01121         CLRF    (_AppConfig + 17), B
00F2 0000      01122         BANKSEL (_AppConfig + 18)
00F4 6B00      01123         CLRF    (_AppConfig + 18), B
00F6 0000      01124         BANKSEL (_AppConfig + 19)
00F8 6B00      01125         CLRF    (_AppConfig + 19), B
00FA CFE4 F000 01126         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01127         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01128         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01129         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01130         MOVFF   PREINC1, FSR2L
010E 0012      01131         RETURN  
               01132 
               01133 ; ; Starting pCode block
               01134 S_MainDemo__InitializeBoard     code
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 01135 _InitializeBoard:
               01136 ;       .line   934; MainDemo.c static void InitializeBoard(void)
0000 CFD9 FFE5 01137         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01138         MOVFF   FSR1L, FSR2L
               01139 ;       .line   937; MainDemo.c LED0_TRIS = 0;  //LED0
0008 9000      01140         BCF     _TRISJbits, 0
               01141 ;       .line   938; MainDemo.c LED1_TRIS = 0;  //LED1
000A 9200      01142         BCF     _TRISJbits, 1
               01143 ;       .line   939; MainDemo.c LED2_TRIS = 0;  //LED2
000C 9400      01144         BCF     _TRISJbits, 2
               01145 ;       .line   940; MainDemo.c LED3_TRIS = 0;  //LED_LCD1
000E 9A00      01146         BCF     _TRISGbits, 5
               01147 ;       .line   941; MainDemo.c LED4_TRIS = 0;  //LED_LCD2
0010 9A00      01148         BCF     _TRISGbits, 5
               01149 ;       .line   942; MainDemo.c LED5_TRIS = 0;  //LED5=RELAY1
0012 9E00      01150         BCF     _TRISGbits, 7
               01151 ;       .line   943; MainDemo.c LED6_TRIS = 0;  //LED7=RELAY2
0014 9C00      01152         BCF     _TRISGbits, 6
               01153 ;       .line   948; MainDemo.c LED_PUT(0x00);  //turn off LED0 - LED2
0016 0EF8      01154         MOVLW   0xf8
0018 1600      01155         ANDWF   _LATJ, F
               01156 ;       .line   949; MainDemo.c RELAY_PUT(0x00); //turn relays off to save power
001A 0E3F      01157         MOVLW   0x3f
001C 1600      01158         ANDWF   _LATG, F
               01159 ;       .line   955; MainDemo.c OSCTUNE = 0x40;
001E 0E40      01160         MOVLW   0x40
0020 6E00      01161         MOVWF   _OSCTUNE
               01162 ;       .line   962; MainDemo.c if(OSCCONbits.IDLEN) //IDLEN = 0x80; 0x02 selects the primary clock
0022 AE00      01163         BTFSS   _OSCCONbits, 7
0024 D000      01164         BRA     _00756_DS_
               01165 ;       .line   963; MainDemo.c OSCCON = 0x82;
0026 0E82      01166         MOVLW   0x82
0028 6E00      01167         MOVWF   _OSCCON
002A D000      01168         BRA     _00757_DS_
002C 01169 _00756_DS_:
               01170 ;       .line   965; MainDemo.c OSCCON = 0x02;
002C 0E02      01171         MOVLW   0x02
002E 6E00      01172         MOVWF   _OSCCON
0030 01173 _00757_DS_:
               01174 ;       .line   968; MainDemo.c RCONbits.IPEN = 1;              // Enable interrupt priorities
0030 8E00      01175         BSF     _RCONbits, 7
               01176 ;       .line   969; MainDemo.c INTCONbits.GIEH = 1;
0032 8E00      01177         BSF     _INTCONbits, 7
               01178 ;       .line   970; MainDemo.c INTCONbits.GIEL = 1;
0034 8C00      01179         BSF     _INTCONbits, 6
0036 CFE4 FFD9 01180         MOVFF   PREINC1, FSR2L
003A 0012      01181         RETURN  
               01182 
               01183 ; ; Starting pCode block
               01184 S_MainDemo__DisplayIPValue      code
0000 01185 _DisplayIPValue:
               01186 ;       .line   876; MainDemo.c void DisplayIPValue(DWORD IPdw) // 32 bits
0000 CFD9 FFE5 01187         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01188         MOVFF   FSR1L, FSR2L
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008 C000 FFE5 01189         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01190         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01191         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01192         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01193         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01194         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01195         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01196         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01197         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01198         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01199         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01200         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01201         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 01202         MOVFF   r0x0d, POSTDEC1
0040 0E02      01203         MOVLW   0x02
0042 CFDB F000 01204         MOVFF   PLUSW2, r0x00
0046 0E03      01205         MOVLW   0x03
0048 CFDB F000 01206         MOVFF   PLUSW2, r0x01
004C 0E04      01207         MOVLW   0x04
004E CFDB F000 01208         MOVFF   PLUSW2, r0x02
0052 0E05      01209         MOVLW   0x05
0054 CFDB F000 01210         MOVFF   PLUSW2, r0x03
               01211 ;       .line   884; MainDemo.c BYTE LCDPos=16;  //write on second line of LCD
0058 0E10      01212         MOVLW   0x10
005A 6E00      01213         MOVWF   r0x04
               01214 ;       .line   889; MainDemo.c for(i = 0; i < sizeof(IP_ADDR); i++) //sizeof(IP_ADDR) is 4
005C 6A00      01215         CLRF    r0x05
005E 6A00      01216         CLRF    r0x06
0060 6A00      01217         CLRF    r0x07
0062 01218 _00721_DS_:
0062 0E04      01219         MOVLW   0x04
0064 5C00      01220         SUBWF   r0x05, W
0066 B0D8      01221         BTFSC   STATUS, 0
0068 D000      01222         BRA     _00724_DS_
               01223 ;       .line   892; MainDemo.c IP_field =(WORD)(IPdw>>(i*8))&0xff;      //ML
006A C000 F000 01224         MOVFF   r0x00, r0x08
006E C000 F000 01225         MOVFF   r0x01, r0x09
0072 C000 F000 01226         MOVFF   r0x02, r0x0a
0076 C000 F000 01227         MOVFF   r0x03, r0x0b
007A 5000      01228         MOVF    r0x06, W
007C E000      01229         BZ      _00742_DS_
007E E600      01230         BN      _00745_DS_
0080 6CE8      01231         NEGF    WREG
0082 90D8      01232         BCF     STATUS, 0
0084 01233 _00743_DS_:
0084 3200      01234         RRCF    r0x0b, F
0086 3200      01235         RRCF    r0x0a, F
0088 3200      01236         RRCF    r0x09, F
008A 3200      01237         RRCF    r0x08, F
008C 0F01      01238         ADDLW   0x01
008E E300      01239         BNC     _00743_DS_
0090 D000      01240         BRA     _00742_DS_
0092 01241 _00745_DS_:
0092 90D8      01242         BCF     STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0094 01243 _00744_DS_:
0094 3600      01244         RLCF    r0x08, F
0096 3600      01245         RLCF    r0x09, F
0098 3600      01246         RLCF    r0x0a, F
009A 3600      01247         RLCF    r0x0b, F
009C 0F01      01248         ADDLW   0x01
009E E300      01249         BNC     _00744_DS_
00A0 01250 _00742_DS_:
00A0 6A00      01251         CLRF    r0x09
               01252 ;       .line   893; MainDemo.c uitoa(IP_field, IPDigit, radix);      //ML
00A2 0E0A      01253         MOVLW   0x0a
00A4 6EE5      01254         MOVWF   POSTDEC1
00A6 0E00      01255         MOVLW   HIGH(_DisplayIPValue_IPDigit_1_1)
00A8 6EE5      01256         MOVWF   POSTDEC1
00AA 0E00      01257         MOVLW   LOW(_DisplayIPValue_IPDigit_1_1)
00AC 6EE5      01258         MOVWF   POSTDEC1
00AE 5000      01259         MOVF    r0x09, W
00B0 6EE5      01260         MOVWF   POSTDEC1
00B2 5000      01261         MOVF    r0x08, W
00B4 6EE5      01262         MOVWF   POSTDEC1
00B6 EC00 F000 01263         CALL    _uitoa
00BA 0E05      01264         MOVLW   0x05
00BC 26E1      01265         ADDWF   FSR1L, F
               01266 ;       .line   898; MainDemo.c for(j = 0; j < strlen((char*)IPDigit); j++)
00BE C000 F000 01267         MOVFF   r0x04, r0x08
00C2 6A00      01268         CLRF    r0x09
00C4 01269 _00727_DS_:
00C4 0E00      01270         MOVLW   HIGH(_DisplayIPValue_IPDigit_1_1)
00C6 6E00      01271         MOVWF   r0x0b
00C8 0E00      01272         MOVLW   LOW(_DisplayIPValue_IPDigit_1_1)
00CA 6E00      01273         MOVWF   r0x0a
00CC 0E80      01274         MOVLW   0x80
00CE 6E00      01275         MOVWF   r0x0c
00D0 5000      01276         MOVF    r0x0c, W
00D2 6EE5      01277         MOVWF   POSTDEC1
00D4 5000      01278         MOVF    r0x0b, W
00D6 6EE5      01279         MOVWF   POSTDEC1
00D8 5000      01280         MOVF    r0x0a, W
00DA 6EE5      01281         MOVWF   POSTDEC1
00DC EC00 F000 01282         CALL    _strlen
00E0 6E00      01283         MOVWF   r0x0a
00E2 CFF3 F000 01284         MOVFF   PRODL, r0x0b
00E6 0E03      01285         MOVLW   0x03
00E8 26E1      01286         ADDWF   FSR1L, F
00EA C000 F000 01287         MOVFF   r0x09, r0x0c
00EE 6A00      01288         CLRF    r0x0d
00F0 5000      01289         MOVF    r0x0d, W
00F2 0F80      01290         ADDLW   0x80
00F4 6EF3      01291         MOVWF   PRODL
00F6 5000      01292         MOVF    r0x0b, W
00F8 0F80      01293         ADDLW   0x80
00FA 5CF3      01294         SUBWF   PRODL, W
00FC E100      01295         BNZ     _00747_DS_
00FE 5000      01296         MOVF    r0x0a, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0100 5C00      01297         SUBWF   r0x0c, W
0102 01298 _00747_DS_:
0102 E200      01299         BC      _00739_DS_
               01300 ;       .line   900; MainDemo.c LCDText[LCDPos++] = IPDigit[j];
0104 C000 F000 01301         MOVFF   r0x08, r0x0a
0108 2A00      01302         INCF    r0x08, F
010A 6A00      01303         CLRF    r0x0b
010C 0E00      01304         MOVLW   LOW(_LCDText)
010E 2600      01305         ADDWF   r0x0a, F
0110 0E00      01306         MOVLW   HIGH(_LCDText)
0112 2200      01307         ADDWFC  r0x0b, F
0114 0E00      01308         MOVLW   LOW(_DisplayIPValue_IPDigit_1_1)
0116 2400      01309         ADDWF   r0x09, W
0118 6E00      01310         MOVWF   r0x0c
011A 6A00      01311         CLRF    r0x0d
011C 0E00      01312         MOVLW   HIGH(_DisplayIPValue_IPDigit_1_1)
011E 2200      01313         ADDWFC  r0x0d, F
0120 C000 FFE9 01314         MOVFF   r0x0c, FSR0L
0124 C000 FFEA 01315         MOVFF   r0x0d, FSR0H
0128 CFEF F000 01316         MOVFF   INDF0, r0x0c
012C C000 FFE9 01317         MOVFF   r0x0a, FSR0L
0130 C000 FFEA 01318         MOVFF   r0x0b, FSR0H
0134 C000 FFEF 01319         MOVFF   r0x0c, INDF0
               01320 ;       .line   898; MainDemo.c for(j = 0; j < strlen((char*)IPDigit); j++)
0138 2A00      01321         INCF    r0x09, F
013A D000      01322         BRA     _00727_DS_
013C 01323 _00739_DS_:
013C C000 F000 01324         MOVFF   r0x08, r0x04
               01325 ;       .line   902; MainDemo.c if(i == sizeof(IP_ADDR)-1)
0140 5000      01326         MOVF    r0x05, W
0142 0A03      01327         XORLW   0x03
0144 E000      01328         BZ      _00724_DS_
               01329 ;       .line   904; MainDemo.c LCDText[LCDPos++] = '.';
0146 2800      01330         INCF    r0x08, W
0148 6E00      01331         MOVWF   r0x04
014A 6A00      01332         CLRF    r0x09
014C 0E00      01333         MOVLW   LOW(_LCDText)
014E 2600      01334         ADDWF   r0x08, F
0150 0E00      01335         MOVLW   HIGH(_LCDText)
0152 2200      01336         ADDWFC  r0x09, F
0154 C000 FFE9 01337         MOVFF   r0x08, FSR0L
0158 C000 FFEA 01338         MOVFF   r0x09, FSR0H
015C 0E2E      01339         MOVLW   0x2e
015E 6EEF      01340         MOVWF   INDF0
               01341 ;       .line   889; MainDemo.c for(i = 0; i < sizeof(IP_ADDR); i++) //sizeof(IP_ADDR) is 4
0160 0E08      01342         MOVLW   0x08
0162 2600      01343         ADDWF   r0x06, F
0164 B0D8      01344         BTFSC   STATUS, 0
0166 2A00      01345         INCF    r0x07, F
0168 2A00      01346         INCF    r0x05, F
016A D000      01347         BRA     _00721_DS_
016C 01348 _00724_DS_:
               01349 ;       .line   907; MainDemo.c if(LCDPos < 32u)
016C C000 F000 01350         MOVFF   r0x04, r0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0170 6A00      01351         CLRF    r0x01
0172 0E00      01352         MOVLW   0x00
0174 5C00      01353         SUBWF   r0x01, W
0176 E100      01354         BNZ     _00750_DS_
0178 0E20      01355         MOVLW   0x20
017A 5C00      01356         SUBWF   r0x00, W
017C 01357 _00750_DS_:
017C E200      01358         BC      _00726_DS_
               01359 ;       .line   908; MainDemo.c LCDText[LCDPos] = 0;
017E 6A00      01360         CLRF    r0x00
0180 0E00      01361         MOVLW   LOW(_LCDText)
0182 2600      01362         ADDWF   r0x04, F
0184 0E00      01363         MOVLW   HIGH(_LCDText)
0186 2200      01364         ADDWFC  r0x00, F
0188 C000 FFE9 01365         MOVFF   r0x04, FSR0L
018C C000 FFEA 01366         MOVFF   r0x00, FSR0H
0190 0E00      01367         MOVLW   0x00
0192 6EEF      01368         MOVWF   INDF0
0194 01369 _00726_DS_:
               01370 ;       .line   909; MainDemo.c LCDUpdate();
0194 EC00 F000 01371         CALL    _LCDUpdate
0198 CFE4 F000 01372         MOVFF   PREINC1, r0x0d
019C CFE4 F000 01373         MOVFF   PREINC1, r0x0c
01A0 CFE4 F000 01374         MOVFF   PREINC1, r0x0b
01A4 CFE4 F000 01375         MOVFF   PREINC1, r0x0a
01A8 CFE4 F000 01376         MOVFF   PREINC1, r0x09
01AC CFE4 F000 01377         MOVFF   PREINC1, r0x08
01B0 CFE4 F000 01378         MOVFF   PREINC1, r0x07
01B4 CFE4 F000 01379         MOVFF   PREINC1, r0x06
01B8 CFE4 F000 01380         MOVFF   PREINC1, r0x05
01BC CFE4 F000 01381         MOVFF   PREINC1, r0x04
01C0 CFE4 F000 01382         MOVFF   PREINC1, r0x03
01C4 CFE4 F000 01383         MOVFF   PREINC1, r0x02
01C8 CFE4 F000 01384         MOVFF   PREINC1, r0x01
01CC CFE4 F000 01385         MOVFF   PREINC1, r0x00
01D0 CFE4 FFD9 01386         MOVFF   PREINC1, FSR2L
01D4 0012      01387         RETURN  
               01388 
               01389 ; ; Starting pCode block
               01390 S_MainDemo__DisplayString       code
0000 01391 _DisplayString:
               01392 ;       .line   861; MainDemo.c void DisplayString(BYTE pos, char* text)
0000 CFD9 FFE5 01393         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01394         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01395         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01396         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01397         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01398         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01399         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01400         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01401         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01402         MOVFF   r0x07, POSTDEC1
0028 0E02      01403         MOVLW   0x02
002A CFDB F000 01404         MOVFF   PLUSW2, r0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002E 0E03      01405         MOVLW   0x03
0030 CFDB F000 01406         MOVFF   PLUSW2, r0x01
0034 0E04      01407         MOVLW   0x04
0036 CFDB F000 01408         MOVFF   PLUSW2, r0x02
003A 0E05      01409         MOVLW   0x05
003C CFDB F000 01410         MOVFF   PLUSW2, r0x03
               01411 ;       .line   863; MainDemo.c BYTE l= strlen(text)+1;
0040 5000      01412         MOVF    r0x03, W
0042 6EE5      01413         MOVWF   POSTDEC1
0044 5000      01414         MOVF    r0x02, W
0046 6EE5      01415         MOVWF   POSTDEC1
0048 5000      01416         MOVF    r0x01, W
004A 6EE5      01417         MOVWF   POSTDEC1
004C EC00 F000 01418         CALL    _strlen
0050 6E00      01419         MOVWF   r0x04
0052 CFF3 F000 01420         MOVFF   PRODL, r0x05
0056 0E03      01421         MOVLW   0x03
0058 26E1      01422         ADDWF   FSR1L, F
005A 2A00      01423         INCF    r0x04, F
               01424 ;       .line   864; MainDemo.c BYTE max= 32-pos;
005C 5000      01425         MOVF    r0x00, W
005E 0820      01426         SUBLW   0x20
0060 6E00      01427         MOVWF   r0x05
               01428 ;       .line   865; MainDemo.c strlcpy((char*)&LCDText[pos], text,(l<max)?l:max );
0062 6A00      01429         CLRF    r0x06
0064 0E00      01430         MOVLW   LOW(_LCDText)
0066 2600      01431         ADDWF   r0x00, F
0068 0E00      01432         MOVLW   HIGH(_LCDText)
006A 2200      01433         ADDWFC  r0x06, F
006C 5000      01434         MOVF    r0x06, W
006E 6E00      01435         MOVWF   r0x06
0070 5000      01436         MOVF    r0x00, W
0072 6E00      01437         MOVWF   r0x00
0074 0E80      01438         MOVLW   0x80
0076 6E00      01439         MOVWF   r0x07
0078 5000      01440         MOVF    r0x05, W
007A 5C00      01441         SUBWF   r0x04, W
007C E300      01442         BNC     _00712_DS_
007E C000 F000 01443         MOVFF   r0x05, r0x04
0082 01444 _00712_DS_:
0082 6A00      01445         CLRF    r0x05
0084 5000      01446         MOVF    r0x05, W
0086 6EE5      01447         MOVWF   POSTDEC1
0088 5000      01448         MOVF    r0x04, W
008A 6EE5      01449         MOVWF   POSTDEC1
008C 5000      01450         MOVF    r0x03, W
008E 6EE5      01451         MOVWF   POSTDEC1
0090 5000      01452         MOVF    r0x02, W
0092 6EE5      01453         MOVWF   POSTDEC1
0094 5000      01454         MOVF    r0x01, W
0096 6EE5      01455         MOVWF   POSTDEC1
0098 5000      01456         MOVF    r0x07, W
009A 6EE5      01457         MOVWF   POSTDEC1
009C 5000      01458         MOVF    r0x06, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009E 6EE5      01459         MOVWF   POSTDEC1
00A0 5000      01460         MOVF    r0x00, W
00A2 6EE5      01461         MOVWF   POSTDEC1
00A4 EC00 F000 01462         CALL    _strlcpy
00A8 0E08      01463         MOVLW   0x08
00AA 26E1      01464         ADDWF   FSR1L, F
               01465 ;       .line   866; MainDemo.c LCDUpdate();
00AC EC00 F000 01466         CALL    _LCDUpdate
00B0 CFE4 F000 01467         MOVFF   PREINC1, r0x07
00B4 CFE4 F000 01468         MOVFF   PREINC1, r0x06
00B8 CFE4 F000 01469         MOVFF   PREINC1, r0x05
00BC CFE4 F000 01470         MOVFF   PREINC1, r0x04
00C0 CFE4 F000 01471         MOVFF   PREINC1, r0x03
00C4 CFE4 F000 01472         MOVFF   PREINC1, r0x02
00C8 CFE4 F000 01473         MOVFF   PREINC1, r0x01
00CC CFE4 F000 01474         MOVFF   PREINC1, r0x00
00D0 CFE4 FFD9 01475         MOVFF   PREINC1, FSR2L
00D4 0012      01476         RETURN  
               01477 
               01478 ; ; Starting pCode block
               01479 S_MainDemo__DisplayWORD code
0000 01480 _DisplayWORD:
               01481 ;       .line   839; MainDemo.c void DisplayWORD(BYTE pos, WORD w) //WORD is a 16 bits unsigned
0000 CFD9 FFE5 01482         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01483         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01484         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01485         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01486         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01487         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01488         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01489         MOVFF   r0x05, POSTDEC1
0020 0E02      01490         MOVLW   0x02
0022 CFDB F000 01491         MOVFF   PLUSW2, r0x00
0026 0E03      01492         MOVLW   0x03
0028 CFDB F000 01493         MOVFF   PLUSW2, r0x01
002C 0E04      01494         MOVLW   0x04
002E CFDB F000 01495         MOVFF   PLUSW2, r0x02
               01496 ;       .line   847; MainDemo.c ultoa(w, WDigit, radix);      
0032 6A00      01497         CLRF    r0x03
0034 6A00      01498         CLRF    r0x04
0036 0E0A      01499         MOVLW   0x0a
0038 6EE5      01500         MOVWF   POSTDEC1
003A 0E00      01501         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
003C 6EE5      01502         MOVWF   POSTDEC1
003E 0E00      01503         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0040 6EE5      01504         MOVWF   POSTDEC1
0042 5000      01505         MOVF    r0x04, W
0044 6EE5      01506         MOVWF   POSTDEC1
0046 5000      01507         MOVF    r0x03, W
0048 6EE5      01508         MOVWF   POSTDEC1
004A 5000      01509         MOVF    r0x02, W
004C 6EE5      01510         MOVWF   POSTDEC1
004E 5000      01511         MOVF    r0x01, W
0050 6EE5      01512         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0052 EC00 F000 01513         CALL    _ultoa
0056 0E07      01514         MOVLW   0x07
0058 26E1      01515         ADDWF   FSR1L, F
               01516 ;       .line   848; MainDemo.c for(j = 0; j < strlen((char*)WDigit); j++)
005A 6A00      01517         CLRF    r0x01
005C 01518 _00693_DS_:
005C 0E00      01519         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
005E 6E00      01520         MOVWF   r0x03
0060 0E00      01521         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0062 6E00      01522         MOVWF   r0x02
0064 0E80      01523         MOVLW   0x80
0066 6E00      01524         MOVWF   r0x04
0068 5000      01525         MOVF    r0x04, W
006A 6EE5      01526         MOVWF   POSTDEC1
006C 5000      01527         MOVF    r0x03, W
006E 6EE5      01528         MOVWF   POSTDEC1
0070 5000      01529         MOVF    r0x02, W
0072 6EE5      01530         MOVWF   POSTDEC1
0074 EC00 F000 01531         CALL    _strlen
0078 6E00      01532         MOVWF   r0x02
007A CFF3 F000 01533         MOVFF   PRODL, r0x03
007E 0E03      01534         MOVLW   0x03
0080 26E1      01535         ADDWF   FSR1L, F
0082 C000 F000 01536         MOVFF   r0x01, r0x04
0086 6A00      01537         CLRF    r0x05
0088 5000      01538         MOVF    r0x05, W
008A 0F80      01539         ADDLW   0x80
008C 6EF3      01540         MOVWF   PRODL
008E 5000      01541         MOVF    r0x03, W
0090 0F80      01542         ADDLW   0x80
0092 5CF3      01543         SUBWF   PRODL, W
0094 E100      01544         BNZ     _00703_DS_
0096 5000      01545         MOVF    r0x02, W
0098 5C00      01546         SUBWF   r0x04, W
009A 01547 _00703_DS_:
009A E200      01548         BC      _00696_DS_
               01549 ;       .line   850; MainDemo.c LCDText[LCDPos++] = WDigit[j];
009C C000 F000 01550         MOVFF   r0x00, r0x02
00A0 2A00      01551         INCF    r0x00, F
00A2 6A00      01552         CLRF    r0x03
00A4 0E00      01553         MOVLW   LOW(_LCDText)
00A6 2600      01554         ADDWF   r0x02, F
00A8 0E00      01555         MOVLW   HIGH(_LCDText)
00AA 2200      01556         ADDWFC  r0x03, F
00AC 0E00      01557         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
00AE 2400      01558         ADDWF   r0x01, W
00B0 6E00      01559         MOVWF   r0x04
00B2 6A00      01560         CLRF    r0x05
00B4 0E00      01561         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
00B6 2200      01562         ADDWFC  r0x05, F
00B8 C000 FFE9 01563         MOVFF   r0x04, FSR0L
00BC C000 FFEA 01564         MOVFF   r0x05, FSR0H
00C0 CFEF F000 01565         MOVFF   INDF0, r0x04
00C4 C000 FFE9 01566         MOVFF   r0x02, FSR0L
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C8 C000 FFEA 01567         MOVFF   r0x03, FSR0H
00CC C000 FFEF 01568         MOVFF   r0x04, INDF0
               01569 ;       .line   848; MainDemo.c for(j = 0; j < strlen((char*)WDigit); j++)
00D0 2A00      01570         INCF    r0x01, F
00D2 D000      01571         BRA     _00693_DS_
00D4 01572 _00696_DS_:
               01573 ;       .line   852; MainDemo.c if(LCDPos < 32u)
00D4 C000 F000 01574         MOVFF   r0x00, r0x01
00D8 6A00      01575         CLRF    r0x02
00DA 0E00      01576         MOVLW   0x00
00DC 5C00      01577         SUBWF   r0x02, W
00DE E100      01578         BNZ     _00704_DS_
00E0 0E20      01579         MOVLW   0x20
00E2 5C00      01580         SUBWF   r0x01, W
00E4 01581 _00704_DS_:
00E4 E200      01582         BC      _00692_DS_
               01583 ;       .line   853; MainDemo.c LCDText[LCDPos] = 0;
00E6 6A00      01584         CLRF    r0x01
00E8 0E00      01585         MOVLW   LOW(_LCDText)
00EA 2600      01586         ADDWF   r0x00, F
00EC 0E00      01587         MOVLW   HIGH(_LCDText)
00EE 2200      01588         ADDWFC  r0x01, F
00F0 C000 FFE9 01589         MOVFF   r0x00, FSR0L
00F4 C000 FFEA 01590         MOVFF   r0x01, FSR0H
00F8 0E00      01591         MOVLW   0x00
00FA 6EEF      01592         MOVWF   INDF0
00FC 01593 _00692_DS_:
               01594 ;       .line   854; MainDemo.c LCDUpdate();
00FC EC00 F000 01595         CALL    _LCDUpdate
0100 CFE4 F000 01596         MOVFF   PREINC1, r0x05
0104 CFE4 F000 01597         MOVFF   PREINC1, r0x04
0108 CFE4 F000 01598         MOVFF   PREINC1, r0x03
010C CFE4 F000 01599         MOVFF   PREINC1, r0x02
0110 CFE4 F000 01600         MOVFF   PREINC1, r0x01
0114 CFE4 F000 01601         MOVFF   PREINC1, r0x00
0118 CFE4 FFD9 01602         MOVFF   PREINC1, FSR2L
011C 0012      01603         RETURN  
               01604 
               01605 ; ; Starting pCode block
               01606 S_MainDemo__get_gateway_MAC     code
0000 01607 _get_gateway_MAC:
               01608 ;       .line   785; MainDemo.c void get_gateway_MAC(){
0000 CFD9 FFE5 01609         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01610         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01611         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01612         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01613         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01614         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01615         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01616         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01617         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01618         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01619         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01620         MOVFF   r0x09, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01621 ;       .line   790; MainDemo.c for (i=0; i<100; i++) {
0030 6A00      01622         CLRF    r0x00
0032 6A00      01623         CLRF    r0x01
0034 01624 _00663_DS_:
0034 5000      01625         MOVF    r0x01, W
0036 0F80      01626         ADDLW   0x80
0038 0F80      01627         ADDLW   0x80
003A E100      01628         BNZ     _00674_DS_
003C 0E64      01629         MOVLW   0x64
003E 5C00      01630         SUBWF   r0x00, W
0040 01631 _00674_DS_:
0040 B0D8      01632         BTFSC   STATUS, 0
0042 D000      01633         BRA     _00666_DS_
               01634 ;       .line   791; MainDemo.c StackTask();
0044 EC00 F000 01635         CALL    _StackTask
               01636 ;       .line   792; MainDemo.c ARPResolve(&AppConfig.MyGateway);
0048 0E00      01637         MOVLW   HIGH(_AppConfig + 8)
004A 6E00      01638         MOVWF   r0x03
004C 0E00      01639         MOVLW   LOW(_AppConfig + 8)
004E 6E00      01640         MOVWF   r0x02
0050 0E80      01641         MOVLW   0x80
0052 6E00      01642         MOVWF   r0x04
0054 5000      01643         MOVF    r0x04, W
0056 6EE5      01644         MOVWF   POSTDEC1
0058 5000      01645         MOVF    r0x03, W
005A 6EE5      01646         MOVWF   POSTDEC1
005C 5000      01647         MOVF    r0x02, W
005E 6EE5      01648         MOVWF   POSTDEC1
0060 EC00 F000 01649         CALL    _ARPResolve
0064 0E03      01650         MOVLW   0x03
0066 26E1      01651         ADDWF   FSR1L, F
               01652 ;       .line   793; MainDemo.c for(j=0;j<5000; j++) {
0068 6A00      01653         CLRF    r0x02
006A 6A00      01654         CLRF    r0x03
006C 01655 _00659_DS_:
006C 5000      01656         MOVF    r0x03, W
006E 0F80      01657         ADDLW   0x80
0070 0F6D      01658         ADDLW   0x6d
0072 E100      01659         BNZ     _00675_DS_
0074 0E88      01660         MOVLW   0x88
0076 5C00      01661         SUBWF   r0x02, W
0078 01662 _00675_DS_:
0078 B0D8      01663         BTFSC   STATUS, 0
007A D000      01664         BRA     _00665_DS_
               01665 ;       .line   794; MainDemo.c if(ARPIsResolved(&AppConfig.MyGateway, &gateway_MAC2)) {
007C 0E00      01666         MOVLW   HIGH(_AppConfig + 8)
007E 6E00      01667         MOVWF   r0x05
0080 0E00      01668         MOVLW   LOW(_AppConfig + 8)
0082 6E00      01669         MOVWF   r0x04
0084 0E80      01670         MOVLW   0x80
0086 6E00      01671         MOVWF   r0x06
0088 0E00      01672         MOVLW   HIGH(_get_gateway_MAC_gateway_MAC2_1_1)
008A 6E00      01673         MOVWF   r0x08
008C 0E00      01674         MOVLW   LOW(_get_gateway_MAC_gateway_MAC2_1_1)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008E 6E00      01675         MOVWF   r0x07
0090 0E80      01676         MOVLW   0x80
0092 6E00      01677         MOVWF   r0x09
0094 5000      01678         MOVF    r0x09, W
0096 6EE5      01679         MOVWF   POSTDEC1
0098 5000      01680         MOVF    r0x08, W
009A 6EE5      01681         MOVWF   POSTDEC1
009C 5000      01682         MOVF    r0x07, W
009E 6EE5      01683         MOVWF   POSTDEC1
00A0 5000      01684         MOVF    r0x06, W
00A2 6EE5      01685         MOVWF   POSTDEC1
00A4 5000      01686         MOVF    r0x05, W
00A6 6EE5      01687         MOVWF   POSTDEC1
00A8 5000      01688         MOVF    r0x04, W
00AA 6EE5      01689         MOVWF   POSTDEC1
00AC EC00 F000 01690         CALL    _ARPIsResolved
00B0 6E00      01691         MOVWF   r0x04
00B2 0E06      01692         MOVLW   0x06
00B4 26E1      01693         ADDWF   FSR1L, F
00B6 5000      01694         MOVF    r0x04, W
00B8 E000      01695         BZ      _00661_DS_
               01696 ;       .line   795; MainDemo.c memcpy(GATEWAY_MACA, &gateway_MAC2, 6);
00BA 0E00      01697         MOVLW   HIGH(_GATEWAY_MACA)
00BC 6E00      01698         MOVWF   r0x05
00BE 0E00      01699         MOVLW   LOW(_GATEWAY_MACA)
00C0 6E00      01700         MOVWF   r0x04
00C2 0E80      01701         MOVLW   0x80
00C4 6E00      01702         MOVWF   r0x06
00C6 0E00      01703         MOVLW   HIGH(_get_gateway_MAC_gateway_MAC2_1_1)
00C8 6E00      01704         MOVWF   r0x08
00CA 0E00      01705         MOVLW   LOW(_get_gateway_MAC_gateway_MAC2_1_1)
00CC 6E00      01706         MOVWF   r0x07
00CE 0E80      01707         MOVLW   0x80
00D0 6E00      01708         MOVWF   r0x09
00D2 0E00      01709         MOVLW   0x00
00D4 6EE5      01710         MOVWF   POSTDEC1
00D6 0E06      01711         MOVLW   0x06
00D8 6EE5      01712         MOVWF   POSTDEC1
00DA 5000      01713         MOVF    r0x09, W
00DC 6EE5      01714         MOVWF   POSTDEC1
00DE 5000      01715         MOVF    r0x08, W
00E0 6EE5      01716         MOVWF   POSTDEC1
00E2 5000      01717         MOVF    r0x07, W
00E4 6EE5      01718         MOVWF   POSTDEC1
00E6 5000      01719         MOVF    r0x06, W
00E8 6EE5      01720         MOVWF   POSTDEC1
00EA 5000      01721         MOVF    r0x05, W
00EC 6EE5      01722         MOVWF   POSTDEC1
00EE 5000      01723         MOVF    r0x04, W
00F0 6EE5      01724         MOVWF   POSTDEC1
00F2 EC00 F000 01725         CALL    _memcpy
00F6 0E08      01726         MOVLW   0x08
00F8 26E1      01727         ADDWF   FSR1L, F
               01728 ;       .line   796; MainDemo.c return;                 
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FA D000      01729         BRA     _00667_DS_
00FC 01730 _00661_DS_:
               01731 ;       .line   793; MainDemo.c for(j=0;j<5000; j++) {
00FC 2A00      01732         INCF    r0x02, F
00FE B0D8      01733         BTFSC   STATUS, 0
0100 2A00      01734         INCF    r0x03, F
0102 D000      01735         BRA     _00659_DS_
0104 01736 _00665_DS_:
               01737 ;       .line   790; MainDemo.c for (i=0; i<100; i++) {
0104 2A00      01738         INCF    r0x00, F
0106 B0D8      01739         BTFSC   STATUS, 0
0108 2A00      01740         INCF    r0x01, F
010A D000      01741         BRA     _00663_DS_
010C 01742 _00666_DS_:
               01743 ;       .line   800; MainDemo.c DisplayString(0, "GATEW ARP fail :'(");
010C 0E00      01744         MOVLW   UPPER(__str_7)
010E 6EE5      01745         MOVWF   POSTDEC1
0110 0E00      01746         MOVLW   HIGH(__str_7)
0112 6EE5      01747         MOVWF   POSTDEC1
0114 0E00      01748         MOVLW   LOW(__str_7)
0116 6EE5      01749         MOVWF   POSTDEC1
0118 0E00      01750         MOVLW   0x00
011A 6EE5      01751         MOVWF   POSTDEC1
011C EC00 F000 01752         CALL    _DisplayString
0120 0E04      01753         MOVLW   0x04
0122 26E1      01754         ADDWF   FSR1L, F
0124 01755 _00667_DS_:
0124 CFE4 F000 01756         MOVFF   PREINC1, r0x09
0128 CFE4 F000 01757         MOVFF   PREINC1, r0x08
012C CFE4 F000 01758         MOVFF   PREINC1, r0x07
0130 CFE4 F000 01759         MOVFF   PREINC1, r0x06
0134 CFE4 F000 01760         MOVFF   PREINC1, r0x05
0138 CFE4 F000 01761         MOVFF   PREINC1, r0x04
013C CFE4 F000 01762         MOVFF   PREINC1, r0x03
0140 CFE4 F000 01763         MOVFF   PREINC1, r0x02
0144 CFE4 F000 01764         MOVFF   PREINC1, r0x01
0148 CFE4 F000 01765         MOVFF   PREINC1, r0x00
014C CFE4 FFD9 01766         MOVFF   PREINC1, FSR2L
0150 0012      01767         RETURN  
               01768 
               01769 ; ; Starting pCode block
               01770 S_MainDemo__request_msg code
0000 01771 _request_msg:
               01772 ;       .line   755; MainDemo.c void request_msg(BYTE *dhcp_header, int dhcp_header_length){
0000 CFD9 FFE5 01773         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01774         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01775         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01776         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01777         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01778         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01779         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01780         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01781         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01782         MOVFF   r0x07, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 C000 FFE5 01783         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01784         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01785         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01786         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01787         MOVFF   r0x0c, POSTDEC1
003C 0E02      01788         MOVLW   0x02
003E CFDB F000 01789         MOVFF   PLUSW2, r0x00
0042 0E03      01790         MOVLW   0x03
0044 CFDB F000 01791         MOVFF   PLUSW2, r0x01
0048 0E04      01792         MOVLW   0x04
004A CFDB F000 01793         MOVFF   PLUSW2, r0x02
004E 0E05      01794         MOVLW   0x05
0050 CFDB F000 01795         MOVFF   PLUSW2, r0x03
0054 0E06      01796         MOVLW   0x06
0056 CFDB F000 01797         MOVFF   PLUSW2, r0x04
               01798 ;       .line   760; MainDemo.c UDPPut(DHCP_REQUEST_MESSAGE);
005A 0E03      01799         MOVLW   0x03
005C 6EE5      01800         MOVWF   POSTDEC1
005E EC00 F000 01801         CALL    _UDPPut
0062 2AE1      01802         INCF    FSR1L, F
               01803 ;       .line   762; MainDemo.c i=0;
0064 6A00      01804         CLRF    r0x05
0066 6A00      01805         CLRF    r0x06
0068 01806 _00642_DS_:
               01807 ;       .line   763; MainDemo.c while(i<dhcp_header_length){
0068 5000      01808         MOVF    r0x06, W
006A 0F80      01809         ADDLW   0x80
006C 6EF3      01810         MOVWF   PRODL
006E 5000      01811         MOVF    r0x04, W
0070 0F80      01812         ADDLW   0x80
0072 5CF3      01813         SUBWF   PRODL, W
0074 E100      01814         BNZ     _00650_DS_
0076 5000      01815         MOVF    r0x03, W
0078 5C00      01816         SUBWF   r0x05, W
007A 01817 _00650_DS_:
007A B0D8      01818         BTFSC   STATUS, 0
007C D000      01819         BRA     _00644_DS_
               01820 ;       .line   764; MainDemo.c opt = dhcp_header[i];
007E 5000      01821         MOVF    r0x05, W
0080 2400      01822         ADDWF   r0x00, W
0082 6E00      01823         MOVWF   r0x07
0084 5000      01824         MOVF    r0x06, W
0086 2000      01825         ADDWFC  r0x01, W
0088 6E00      01826         MOVWF   r0x08
008A 6AE8      01827         CLRF    WREG
008C BE00      01828         BTFSC   r0x06, 7
008E 68E8      01829         SETF    WREG
0090 2000      01830         ADDWFC  r0x02, W
0092 6E00      01831         MOVWF   r0x09
0094 C000 FFE9 01832         MOVFF   r0x07, FSR0L
0098 C000 FFF3 01833         MOVFF   r0x08, PRODL
009C 5000      01834         MOVF    r0x09, W
009E EC00 F000 01835         CALL    __gptrget1
00A2 6E00      01836         MOVWF   r0x07
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01837 ;       .line   765; MainDemo.c UDPPut(opt);
00A4 5000      01838         MOVF    r0x07, W
00A6 6EE5      01839         MOVWF   POSTDEC1
00A8 EC00 F000 01840         CALL    _UDPPut
00AC 2AE1      01841         INCF    FSR1L, F
               01842 ;       .line   766; MainDemo.c i++;
00AE 2A00      01843         INCF    r0x05, F
00B0 B0D8      01844         BTFSC   STATUS, 0
00B2 2A00      01845         INCF    r0x06, F
               01846 ;       .line   767; MainDemo.c length = dhcp_header[i];
00B4 5000      01847         MOVF    r0x05, W
00B6 2400      01848         ADDWF   r0x00, W
00B8 6E00      01849         MOVWF   r0x08
00BA 5000      01850         MOVF    r0x06, W
00BC 2000      01851         ADDWFC  r0x01, W
00BE 6E00      01852         MOVWF   r0x09
00C0 6AE8      01853         CLRF    WREG
00C2 BE00      01854         BTFSC   r0x06, 7
00C4 68E8      01855         SETF    WREG
00C6 2000      01856         ADDWFC  r0x02, W
00C8 6E00      01857         MOVWF   r0x0a
00CA C000 FFE9 01858         MOVFF   r0x08, FSR0L
00CE C000 FFF3 01859         MOVFF   r0x09, PRODL
00D2 5000      01860         MOVF    r0x0a, W
00D4 EC00 F000 01861         CALL    __gptrget1
00D8 6E00      01862         MOVWF   r0x08
               01863 ;       .line   768; MainDemo.c UDPPut(length);
00DA 5000      01864         MOVF    r0x08, W
00DC 6EE5      01865         MOVWF   POSTDEC1
00DE EC00 F000 01866         CALL    _UDPPut
00E2 2AE1      01867         INCF    FSR1L, F
               01868 ;       .line   769; MainDemo.c i++;
00E4 2A00      01869         INCF    r0x05, F
00E6 B0D8      01870         BTFSC   STATUS, 0
00E8 2A00      01871         INCF    r0x06, F
               01872 ;       .line   770; MainDemo.c switch(opt){
00EA 6A00      01873         CLRF    r0x09
00EC 5000      01874         MOVF    r0x07, W
00EE 0A36      01875         XORLW   0x36
00F0 E100      01876         BNZ     _00651_DS_
00F2 5000      01877         MOVF    r0x09, W
00F4 E000      01878         BZ      _00652_DS_
00F6 01879 _00651_DS_:
00F6 D000      01880         BRA     _00640_DS_
               01881 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x07
               01882 ; ;Unrolled 8 X 8 multiplication
               01883 ; ;FIXME: the function does not support result==WREG
00F8 01884 _00652_DS_:
00F8 0000      01885         BANKSEL _activeUDPSocket
               01886 ;       .line   772; MainDemo.c UDPPutArray((BYTE*)&UDPSocketInfo[activeUDPSocket].remoteNode.IPAddr, length);
00FA 5100      01887         MOVF    _activeUDPSocket, W, B
00FC 0D0E      01888         MULLW   0x0e
00FE CFF3 F000 01889         MOVFF   PRODL, r0x07
0102 6A00      01890         CLRF    r0x09
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0104 0E00      01891         MOVLW   LOW(_UDPSocketInfo)
0106 2600      01892         ADDWF   r0x07, F
0108 0E00      01893         MOVLW   HIGH(_UDPSocketInfo)
010A 2200      01894         ADDWFC  r0x09, F
010C 5000      01895         MOVF    r0x09, W
010E 6E00      01896         MOVWF   r0x09
0110 5000      01897         MOVF    r0x07, W
0112 6E00      01898         MOVWF   r0x07
0114 0E80      01899         MOVLW   0x80
0116 6E00      01900         MOVWF   r0x0a
0118 C000 F000 01901         MOVFF   r0x08, r0x0b
011C 6A00      01902         CLRF    r0x0c
011E 5000      01903         MOVF    r0x0c, W
0120 6EE5      01904         MOVWF   POSTDEC1
0122 5000      01905         MOVF    r0x0b, W
0124 6EE5      01906         MOVWF   POSTDEC1
0126 5000      01907         MOVF    r0x0a, W
0128 6EE5      01908         MOVWF   POSTDEC1
012A 5000      01909         MOVF    r0x09, W
012C 6EE5      01910         MOVWF   POSTDEC1
012E 5000      01911         MOVF    r0x07, W
0130 6EE5      01912         MOVWF   POSTDEC1
0132 EC00 F000 01913         CALL    _UDPPutArray
0136 0E05      01914         MOVLW   0x05
0138 26E1      01915         ADDWF   FSR1L, F
               01916 ;       .line   773; MainDemo.c break;
013A D000      01917         BRA     _00641_DS_
013C 01918 _00640_DS_:
               01919 ;       .line   775; MainDemo.c UDPPutArray((BYTE*)&dhcp_header[i], length);   
013C 5000      01920         MOVF    r0x05, W
013E 2400      01921         ADDWF   r0x00, W
0140 6E00      01922         MOVWF   r0x07
0142 5000      01923         MOVF    r0x06, W
0144 2000      01924         ADDWFC  r0x01, W
0146 6E00      01925         MOVWF   r0x09
0148 6AE8      01926         CLRF    WREG
014A BE00      01927         BTFSC   r0x06, 7
014C 68E8      01928         SETF    WREG
014E 2000      01929         ADDWFC  r0x02, W
0150 6E00      01930         MOVWF   r0x0a
0152 C000 F000 01931         MOVFF   r0x08, r0x0b
0156 6A00      01932         CLRF    r0x0c
0158 5000      01933         MOVF    r0x0c, W
015A 6EE5      01934         MOVWF   POSTDEC1
015C 5000      01935         MOVF    r0x0b, W
015E 6EE5      01936         MOVWF   POSTDEC1
0160 5000      01937         MOVF    r0x0a, W
0162 6EE5      01938         MOVWF   POSTDEC1
0164 5000      01939         MOVF    r0x09, W
0166 6EE5      01940         MOVWF   POSTDEC1
0168 5000      01941         MOVF    r0x07, W
016A 6EE5      01942         MOVWF   POSTDEC1
016C EC00 F000 01943         CALL    _UDPPutArray
0170 0E05      01944         MOVLW   0x05
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0172 26E1      01945         ADDWF   FSR1L, F
0174 01946 _00641_DS_:
               01947 ;       .line   778; MainDemo.c i+=length;
0174 6A00      01948         CLRF    r0x07
0176 5000      01949         MOVF    r0x08, W
0178 2600      01950         ADDWF   r0x05, F
017A 5000      01951         MOVF    r0x07, W
017C 2200      01952         ADDWFC  r0x06, F
017E D000      01953         BRA     _00642_DS_
0180 01954 _00644_DS_:
               01955 ;       .line   781; MainDemo.c end_dhcp();
0180 EC00 F000 01956         CALL    _end_dhcp
               01957 ;       .line   782; MainDemo.c UDPFlush();
0184 EC00 F000 01958         CALL    _UDPFlush
0188 CFE4 F000 01959         MOVFF   PREINC1, r0x0c
018C CFE4 F000 01960         MOVFF   PREINC1, r0x0b
0190 CFE4 F000 01961         MOVFF   PREINC1, r0x0a
0194 CFE4 F000 01962         MOVFF   PREINC1, r0x09
0198 CFE4 F000 01963         MOVFF   PREINC1, r0x08
019C CFE4 F000 01964         MOVFF   PREINC1, r0x07
01A0 CFE4 F000 01965         MOVFF   PREINC1, r0x06
01A4 CFE4 F000 01966         MOVFF   PREINC1, r0x05
01A8 CFE4 F000 01967         MOVFF   PREINC1, r0x04
01AC CFE4 F000 01968         MOVFF   PREINC1, r0x03
01B0 CFE4 F000 01969         MOVFF   PREINC1, r0x02
01B4 CFE4 F000 01970         MOVFF   PREINC1, r0x01
01B8 CFE4 F000 01971         MOVFF   PREINC1, r0x00
01BC CFE4 FFD9 01972         MOVFF   PREINC1, FSR2L
01C0 0012      01973         RETURN  
               01974 
               01975 ; ; Starting pCode block
               01976 S_MainDemo__discover_msg        code
0000 01977 _discover_msg:
               01978 ;       .line   738; MainDemo.c void discover_msg(){
0000 CFD9 FFE5 01979         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01980         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01981         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01982         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01983         MOVFF   r0x02, POSTDEC1
               01984 ;       .line   740; MainDemo.c UDPPut(DHCP_DISCOVER_MESSAGE);
0014 0E01      01985         MOVLW   0x01
0016 6EE5      01986         MOVWF   POSTDEC1
0018 EC00 F000 01987         CALL    _UDPPut
001C 2AE1      01988         INCF    FSR1L, F
               01989 ;       .line   742; MainDemo.c UDPPut(DHCP_SERVER_IDENTIFIER);
001E 0E36      01990         MOVLW   0x36
0020 6EE5      01991         MOVWF   POSTDEC1
0022 EC00 F000 01992         CALL    _UDPPut
0026 2AE1      01993         INCF    FSR1L, F
               01994 ;       .line   743; MainDemo.c UDPPut(sizeof(IP_ADDR));
0028 0E04      01995         MOVLW   0x04
002A 6EE5      01996         MOVWF   POSTDEC1
002C EC00 F000 01997         CALL    _UDPPut
0030 2AE1      01998         INCF    FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01999 ;       .line   744; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
0032 0E00      02000         MOVLW   HIGH(_AppConfig)
0034 6E00      02001         MOVWF   r0x01
0036 0E00      02002         MOVLW   LOW(_AppConfig)
0038 6E00      02003         MOVWF   r0x00
003A 0E80      02004         MOVLW   0x80
003C 6E00      02005         MOVWF   r0x02
003E 0E00      02006         MOVLW   0x00
0040 6EE5      02007         MOVWF   POSTDEC1
0042 0E04      02008         MOVLW   0x04
0044 6EE5      02009         MOVWF   POSTDEC1
0046 5000      02010         MOVF    r0x02, W
0048 6EE5      02011         MOVWF   POSTDEC1
004A 5000      02012         MOVF    r0x01, W
004C 6EE5      02013         MOVWF   POSTDEC1
004E 5000      02014         MOVF    r0x00, W
0050 6EE5      02015         MOVWF   POSTDEC1
0052 EC00 F000 02016         CALL    _UDPPutArray
0056 0E05      02017         MOVLW   0x05
0058 26E1      02018         ADDWF   FSR1L, F
               02019 ;       .line   746; MainDemo.c UDPPut(DHCP_ROUTER);
005A 0E03      02020         MOVLW   0x03
005C 6EE5      02021         MOVWF   POSTDEC1
005E EC00 F000 02022         CALL    _UDPPut
0062 2AE1      02023         INCF    FSR1L, F
               02024 ;       .line   747; MainDemo.c UDPPut(sizeof(IP_ADDR));
0064 0E04      02025         MOVLW   0x04
0066 6EE5      02026         MOVWF   POSTDEC1
0068 EC00 F000 02027         CALL    _UDPPut
006C 2AE1      02028         INCF    FSR1L, F
               02029 ;       .line   748; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
006E 0E00      02030         MOVLW   HIGH(_AppConfig)
0070 6E00      02031         MOVWF   r0x01
0072 0E00      02032         MOVLW   LOW(_AppConfig)
0074 6E00      02033         MOVWF   r0x00
0076 0E80      02034         MOVLW   0x80
0078 6E00      02035         MOVWF   r0x02
007A 0E00      02036         MOVLW   0x00
007C 6EE5      02037         MOVWF   POSTDEC1
007E 0E04      02038         MOVLW   0x04
0080 6EE5      02039         MOVWF   POSTDEC1
0082 5000      02040         MOVF    r0x02, W
0084 6EE5      02041         MOVWF   POSTDEC1
0086 5000      02042         MOVF    r0x01, W
0088 6EE5      02043         MOVWF   POSTDEC1
008A 5000      02044         MOVF    r0x00, W
008C 6EE5      02045         MOVWF   POSTDEC1
008E EC00 F000 02046         CALL    _UDPPutArray
0092 0E05      02047         MOVLW   0x05
0094 26E1      02048         ADDWF   FSR1L, F
               02049 ;       .line   750; MainDemo.c end_dhcp();
0096 EC00 F000 02050         CALL    _end_dhcp
               02051 ;       .line   752; MainDemo.c UDPFlush();
009A EC00 F000 02052         CALL    _UDPFlush
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009E CFE4 F000 02053         MOVFF   PREINC1, r0x02
00A2 CFE4 F000 02054         MOVFF   PREINC1, r0x01
00A6 CFE4 F000 02055         MOVFF   PREINC1, r0x00
00AA CFE4 FFD9 02056         MOVFF   PREINC1, FSR2L
00AE 0012      02057         RETURN  
               02058 
               02059 ; ; Starting pCode block
               02060 S_MainDemo__end_dhcp    code
0000 02061 _end_dhcp:
               02062 ;       .line   730; MainDemo.c void end_dhcp(){
0000 CFD9 FFE5 02063         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02064         MOVFF   FSR1L, FSR2L
               02065 ;       .line   731; MainDemo.c UDPPut(DHCP_END_OPTION);
0008 0EFF      02066         MOVLW   0xff
000A 6EE5      02067         MOVWF   POSTDEC1
000C EC00 F000 02068         CALL    _UDPPut
0010 2AE1      02069         INCF    FSR1L, F
0012 02070 _00622_DS_:
               02071 ;       .line   732; MainDemo.c while(UDPTxCount < 300){
0012 0E01      02072         MOVLW   0x01
0014 0000      02073         BANKSEL (_UDPTxCount + 1)
0016 5D00      02074         SUBWF   (_UDPTxCount + 1), W, B
0018 E100      02075         BNZ     _00629_DS_
001A 0E2C      02076         MOVLW   0x2c
001C 0000      02077         BANKSEL _UDPTxCount
001E 5D00      02078         SUBWF   _UDPTxCount, W, B
0020 02079 _00629_DS_:
0020 E200      02080         BC      _00624_DS_
               02081 ;       .line   733; MainDemo.c UDPPut(0);
0022 0E00      02082         MOVLW   0x00
0024 6EE5      02083         MOVWF   POSTDEC1
0026 EC00 F000 02084         CALL    _UDPPut
002A 2AE1      02085         INCF    FSR1L, F
002C D000      02086         BRA     _00622_DS_
002E 02087 _00624_DS_:
               02088 ;       .line   735; MainDemo.c LED6_IO = 0;
002E 9C00      02089         BCF     _PORTGbits, 6
0030 CFE4 FFD9 02090         MOVFF   PREINC1, FSR2L
0034 0012      02091         RETURN  
               02092 
               02093 ; ; Starting pCode block
               02094 S_MainDemo__build_bootp code
0000 02095 _build_bootp:
               02096 ;       .line   700; MainDemo.c void build_bootp(BOOTP_HEADER *bootp_header, UDP_SOCKET *my_socket){
0000 CFD9 FFE5 02097         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02098         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02099         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02100         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02101         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02102         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02103         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02104         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02105         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02106         MOVFF   r0x07, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 0E02      02107         MOVLW   0x02
002A CFDB F000 02108         MOVFF   PLUSW2, r0x00
002E 0E03      02109         MOVLW   0x03
0030 CFDB F000 02110         MOVFF   PLUSW2, r0x01
0034 0E04      02111         MOVLW   0x04
0036 CFDB F000 02112         MOVFF   PLUSW2, r0x02
003A 0E05      02113         MOVLW   0x05
003C CFDB F000 02114         MOVFF   PLUSW2, r0x03
0040 0E06      02115         MOVLW   0x06
0042 CFDB F000 02116         MOVFF   PLUSW2, r0x04
0046 0E07      02117         MOVLW   0x07
0048 CFDB F000 02118         MOVFF   PLUSW2, r0x05
004C 02119 _00611_DS_:
               02120 ;       .line   703; MainDemo.c while(!UDPIsPutReady(*my_socket));
004C C000 FFE9 02121         MOVFF   r0x03, FSR0L
0050 C000 FFF3 02122         MOVFF   r0x04, PRODL
0054 5000      02123         MOVF    r0x05, W
0056 EC00 F000 02124         CALL    __gptrget1
005A 6E00      02125         MOVWF   r0x06
005C 5000      02126         MOVF    r0x06, W
005E 6EE5      02127         MOVWF   POSTDEC1
0060 EC00 F000 02128         CALL    _UDPIsPutReady
0064 6E00      02129         MOVWF   r0x06
0066 CFF3 F000 02130         MOVFF   PRODL, r0x07
006A 2AE1      02131         INCF    FSR1L, F
006C 5000      02132         MOVF    r0x06, W
006E 1000      02133         IORWF   r0x07, W
0070 E000      02134         BZ      _00611_DS_
               02135 ;       .line   705; MainDemo.c UDPPutArray((BYTE*)&bootp_header->MessageType, sizeof(BYTE));
0072 0E00      02136         MOVLW   0x00
0074 6EE5      02137         MOVWF   POSTDEC1
0076 0E01      02138         MOVLW   0x01
0078 6EE5      02139         MOVWF   POSTDEC1
007A 5000      02140         MOVF    r0x02, W
007C 6EE5      02141         MOVWF   POSTDEC1
007E 5000      02142         MOVF    r0x01, W
0080 6EE5      02143         MOVWF   POSTDEC1
0082 5000      02144         MOVF    r0x00, W
0084 6EE5      02145         MOVWF   POSTDEC1
0086 EC00 F000 02146         CALL    _UDPPutArray
008A 0E05      02147         MOVLW   0x05
008C 26E1      02148         ADDWF   FSR1L, F
               02149 ;       .line   706; MainDemo.c UDPPutArray((BYTE*)&bootp_header->HardwareType, sizeof(BYTE));
008E 5000      02150         MOVF    r0x00, W
0090 0F01      02151         ADDLW   0x01
0092 6E00      02152         MOVWF   r0x03
0094 0E00      02153         MOVLW   0x00
0096 2000      02154         ADDWFC  r0x01, W
0098 6E00      02155         MOVWF   r0x04
009A 0E00      02156         MOVLW   0x00
009C 2000      02157         ADDWFC  r0x02, W
009E 6E00      02158         MOVWF   r0x05
00A0 0E00      02159         MOVLW   0x00
00A2 6EE5      02160         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A4 0E01      02161         MOVLW   0x01
00A6 6EE5      02162         MOVWF   POSTDEC1
00A8 5000      02163         MOVF    r0x05, W
00AA 6EE5      02164         MOVWF   POSTDEC1
00AC 5000      02165         MOVF    r0x04, W
00AE 6EE5      02166         MOVWF   POSTDEC1
00B0 5000      02167         MOVF    r0x03, W
00B2 6EE5      02168         MOVWF   POSTDEC1
00B4 EC00 F000 02169         CALL    _UDPPutArray
00B8 0E05      02170         MOVLW   0x05
00BA 26E1      02171         ADDWF   FSR1L, F
               02172 ;       .line   707; MainDemo.c UDPPutArray((BYTE*)&bootp_header->HardwareLen, sizeof(BYTE));
00BC 5000      02173         MOVF    r0x00, W
00BE 0F02      02174         ADDLW   0x02
00C0 6E00      02175         MOVWF   r0x03
00C2 0E00      02176         MOVLW   0x00
00C4 2000      02177         ADDWFC  r0x01, W
00C6 6E00      02178         MOVWF   r0x04
00C8 0E00      02179         MOVLW   0x00
00CA 2000      02180         ADDWFC  r0x02, W
00CC 6E00      02181         MOVWF   r0x05
00CE 0E00      02182         MOVLW   0x00
00D0 6EE5      02183         MOVWF   POSTDEC1
00D2 0E01      02184         MOVLW   0x01
00D4 6EE5      02185         MOVWF   POSTDEC1
00D6 5000      02186         MOVF    r0x05, W
00D8 6EE5      02187         MOVWF   POSTDEC1
00DA 5000      02188         MOVF    r0x04, W
00DC 6EE5      02189         MOVWF   POSTDEC1
00DE 5000      02190         MOVF    r0x03, W
00E0 6EE5      02191         MOVWF   POSTDEC1
00E2 EC00 F000 02192         CALL    _UDPPutArray
00E6 0E05      02193         MOVLW   0x05
00E8 26E1      02194         ADDWF   FSR1L, F
               02195 ;       .line   708; MainDemo.c UDPPutArray((BYTE*)&bootp_header->Hops, sizeof(BYTE));
00EA 5000      02196         MOVF    r0x00, W
00EC 0F03      02197         ADDLW   0x03
00EE 6E00      02198         MOVWF   r0x03
00F0 0E00      02199         MOVLW   0x00
00F2 2000      02200         ADDWFC  r0x01, W
00F4 6E00      02201         MOVWF   r0x04
00F6 0E00      02202         MOVLW   0x00
00F8 2000      02203         ADDWFC  r0x02, W
00FA 6E00      02204         MOVWF   r0x05
00FC 0E00      02205         MOVLW   0x00
00FE 6EE5      02206         MOVWF   POSTDEC1
0100 0E01      02207         MOVLW   0x01
0102 6EE5      02208         MOVWF   POSTDEC1
0104 5000      02209         MOVF    r0x05, W
0106 6EE5      02210         MOVWF   POSTDEC1
0108 5000      02211         MOVF    r0x04, W
010A 6EE5      02212         MOVWF   POSTDEC1
010C 5000      02213         MOVF    r0x03, W
010E 6EE5      02214         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0110 EC00 F000 02215         CALL    _UDPPutArray
0114 0E05      02216         MOVLW   0x05
0116 26E1      02217         ADDWF   FSR1L, F
               02218 ;       .line   709; MainDemo.c UDPPutArray((BYTE*)&bootp_header->TransactionID, sizeof(DWORD));
0118 5000      02219         MOVF    r0x00, W
011A 0F04      02220         ADDLW   0x04
011C 6E00      02221         MOVWF   r0x03
011E 0E00      02222         MOVLW   0x00
0120 2000      02223         ADDWFC  r0x01, W
0122 6E00      02224         MOVWF   r0x04
0124 0E00      02225         MOVLW   0x00
0126 2000      02226         ADDWFC  r0x02, W
0128 6E00      02227         MOVWF   r0x05
012A 0E00      02228         MOVLW   0x00
012C 6EE5      02229         MOVWF   POSTDEC1
012E 0E04      02230         MOVLW   0x04
0130 6EE5      02231         MOVWF   POSTDEC1
0132 5000      02232         MOVF    r0x05, W
0134 6EE5      02233         MOVWF   POSTDEC1
0136 5000      02234         MOVF    r0x04, W
0138 6EE5      02235         MOVWF   POSTDEC1
013A 5000      02236         MOVF    r0x03, W
013C 6EE5      02237         MOVWF   POSTDEC1
013E EC00 F000 02238         CALL    _UDPPutArray
0142 0E05      02239         MOVLW   0x05
0144 26E1      02240         ADDWF   FSR1L, F
               02241 ;       .line   710; MainDemo.c UDPPutArray((BYTE*)&bootp_header->SecondsElapsed, sizeof(WORD));
0146 5000      02242         MOVF    r0x00, W
0148 0F08      02243         ADDLW   0x08
014A 6E00      02244         MOVWF   r0x03
014C 0E00      02245         MOVLW   0x00
014E 2000      02246         ADDWFC  r0x01, W
0150 6E00      02247         MOVWF   r0x04
0152 0E00      02248         MOVLW   0x00
0154 2000      02249         ADDWFC  r0x02, W
0156 6E00      02250         MOVWF   r0x05
0158 0E00      02251         MOVLW   0x00
015A 6EE5      02252         MOVWF   POSTDEC1
015C 0E02      02253         MOVLW   0x02
015E 6EE5      02254         MOVWF   POSTDEC1
0160 5000      02255         MOVF    r0x05, W
0162 6EE5      02256         MOVWF   POSTDEC1
0164 5000      02257         MOVF    r0x04, W
0166 6EE5      02258         MOVWF   POSTDEC1
0168 5000      02259         MOVF    r0x03, W
016A 6EE5      02260         MOVWF   POSTDEC1
016C EC00 F000 02261         CALL    _UDPPutArray
0170 0E05      02262         MOVLW   0x05
0172 26E1      02263         ADDWF   FSR1L, F
               02264 ;       .line   711; MainDemo.c UDPPutArray((BYTE*)&bootp_header->BootpFlags, sizeof(WORD));
0174 5000      02265         MOVF    r0x00, W
0176 0F0A      02266         ADDLW   0x0a
0178 6E00      02267         MOVWF   r0x03
017A 0E00      02268         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
017C 2000      02269         ADDWFC  r0x01, W
017E 6E00      02270         MOVWF   r0x04
0180 0E00      02271         MOVLW   0x00
0182 2000      02272         ADDWFC  r0x02, W
0184 6E00      02273         MOVWF   r0x05
0186 0E00      02274         MOVLW   0x00
0188 6EE5      02275         MOVWF   POSTDEC1
018A 0E02      02276         MOVLW   0x02
018C 6EE5      02277         MOVWF   POSTDEC1
018E 5000      02278         MOVF    r0x05, W
0190 6EE5      02279         MOVWF   POSTDEC1
0192 5000      02280         MOVF    r0x04, W
0194 6EE5      02281         MOVWF   POSTDEC1
0196 5000      02282         MOVF    r0x03, W
0198 6EE5      02283         MOVWF   POSTDEC1
019A EC00 F000 02284         CALL    _UDPPutArray
019E 0E05      02285         MOVLW   0x05
01A0 26E1      02286         ADDWF   FSR1L, F
               02287 ;       .line   712; MainDemo.c UDPPutArray((BYTE*)&bootp_header->ClientIP, sizeof(IP_ADDR));
01A2 5000      02288         MOVF    r0x00, W
01A4 0F0C      02289         ADDLW   0x0c
01A6 6E00      02290         MOVWF   r0x03
01A8 0E00      02291         MOVLW   0x00
01AA 2000      02292         ADDWFC  r0x01, W
01AC 6E00      02293         MOVWF   r0x04
01AE 0E00      02294         MOVLW   0x00
01B0 2000      02295         ADDWFC  r0x02, W
01B2 6E00      02296         MOVWF   r0x05
01B4 0E00      02297         MOVLW   0x00
01B6 6EE5      02298         MOVWF   POSTDEC1
01B8 0E04      02299         MOVLW   0x04
01BA 6EE5      02300         MOVWF   POSTDEC1
01BC 5000      02301         MOVF    r0x05, W
01BE 6EE5      02302         MOVWF   POSTDEC1
01C0 5000      02303         MOVF    r0x04, W
01C2 6EE5      02304         MOVWF   POSTDEC1
01C4 5000      02305         MOVF    r0x03, W
01C6 6EE5      02306         MOVWF   POSTDEC1
01C8 EC00 F000 02307         CALL    _UDPPutArray
01CC 0E05      02308         MOVLW   0x05
01CE 26E1      02309         ADDWF   FSR1L, F
               02310 ;       .line   713; MainDemo.c UDPPutArray((BYTE*)&bootp_header->YourIP, sizeof(IP_ADDR));
01D0 5000      02311         MOVF    r0x00, W
01D2 0F10      02312         ADDLW   0x10
01D4 6E00      02313         MOVWF   r0x03
01D6 0E00      02314         MOVLW   0x00
01D8 2000      02315         ADDWFC  r0x01, W
01DA 6E00      02316         MOVWF   r0x04
01DC 0E00      02317         MOVLW   0x00
01DE 2000      02318         ADDWFC  r0x02, W
01E0 6E00      02319         MOVWF   r0x05
01E2 0E00      02320         MOVLW   0x00
01E4 6EE5      02321         MOVWF   POSTDEC1
01E6 0E04      02322         MOVLW   0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01E8 6EE5      02323         MOVWF   POSTDEC1
01EA 5000      02324         MOVF    r0x05, W
01EC 6EE5      02325         MOVWF   POSTDEC1
01EE 5000      02326         MOVF    r0x04, W
01F0 6EE5      02327         MOVWF   POSTDEC1
01F2 5000      02328         MOVF    r0x03, W
01F4 6EE5      02329         MOVWF   POSTDEC1
01F6 EC00 F000 02330         CALL    _UDPPutArray
01FA 0E05      02331         MOVLW   0x05
01FC 26E1      02332         ADDWF   FSR1L, F
               02333 ;       .line   714; MainDemo.c UDPPutArray((BYTE*)&bootp_header->NextServerIP, sizeof(IP_ADDR));
01FE 5000      02334         MOVF    r0x00, W
0200 0F14      02335         ADDLW   0x14
0202 6E00      02336         MOVWF   r0x03
0204 0E00      02337         MOVLW   0x00
0206 2000      02338         ADDWFC  r0x01, W
0208 6E00      02339         MOVWF   r0x04
020A 0E00      02340         MOVLW   0x00
020C 2000      02341         ADDWFC  r0x02, W
020E 6E00      02342         MOVWF   r0x05
0210 0E00      02343         MOVLW   0x00
0212 6EE5      02344         MOVWF   POSTDEC1
0214 0E04      02345         MOVLW   0x04
0216 6EE5      02346         MOVWF   POSTDEC1
0218 5000      02347         MOVF    r0x05, W
021A 6EE5      02348         MOVWF   POSTDEC1
021C 5000      02349         MOVF    r0x04, W
021E 6EE5      02350         MOVWF   POSTDEC1
0220 5000      02351         MOVF    r0x03, W
0222 6EE5      02352         MOVWF   POSTDEC1
0224 EC00 F000 02353         CALL    _UDPPutArray
0228 0E05      02354         MOVLW   0x05
022A 26E1      02355         ADDWF   FSR1L, F
               02356 ;       .line   715; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
022C 0E00      02357         MOVLW   HIGH(_AppConfig)
022E 6E00      02358         MOVWF   r0x04
0230 0E00      02359         MOVLW   LOW(_AppConfig)
0232 6E00      02360         MOVWF   r0x03
0234 0E80      02361         MOVLW   0x80
0236 6E00      02362         MOVWF   r0x05
0238 0E00      02363         MOVLW   0x00
023A 6EE5      02364         MOVWF   POSTDEC1
023C 0E04      02365         MOVLW   0x04
023E 6EE5      02366         MOVWF   POSTDEC1
0240 5000      02367         MOVF    r0x05, W
0242 6EE5      02368         MOVWF   POSTDEC1
0244 5000      02369         MOVF    r0x04, W
0246 6EE5      02370         MOVWF   POSTDEC1
0248 5000      02371         MOVF    r0x03, W
024A 6EE5      02372         MOVWF   POSTDEC1
024C EC00 F000 02373         CALL    _UDPPutArray
0250 0E05      02374         MOVLW   0x05
0252 26E1      02375         ADDWF   FSR1L, F
               02376 ;       .line   716; MainDemo.c UDPPutArray((BYTE*)&bootp_header->ClientMAC, sizeof(MAC_ADDR));
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0254 0E1C      02377         MOVLW   0x1c
0256 2600      02378         ADDWF   r0x00, F
0258 0E00      02379         MOVLW   0x00
025A 2200      02380         ADDWFC  r0x01, F
025C 0E00      02381         MOVLW   0x00
025E 2200      02382         ADDWFC  r0x02, F
0260 0E00      02383         MOVLW   0x00
0262 6EE5      02384         MOVWF   POSTDEC1
0264 0E06      02385         MOVLW   0x06
0266 6EE5      02386         MOVWF   POSTDEC1
0268 5000      02387         MOVF    r0x02, W
026A 6EE5      02388         MOVWF   POSTDEC1
026C 5000      02389         MOVF    r0x01, W
026E 6EE5      02390         MOVWF   POSTDEC1
0270 5000      02391         MOVF    r0x00, W
0272 6EE5      02392         MOVWF   POSTDEC1
0274 EC00 F000 02393         CALL    _UDPPutArray
0278 0E05      02394         MOVLW   0x05
027A 26E1      02395         ADDWF   FSR1L, F
               02396 ;       .line   718; MainDemo.c for(i=0; i<202; i++){
027C 0ECA      02397         MOVLW   0xca
027E 6E00      02398         MOVWF   r0x00
0280 6A00      02399         CLRF    r0x01
0282 02400 _00616_DS_:
               02401 ;       .line   719; MainDemo.c UDPPut(0);
0282 0E00      02402         MOVLW   0x00
0284 6EE5      02403         MOVWF   POSTDEC1
0286 EC00 F000 02404         CALL    _UDPPut
028A 2AE1      02405         INCF    FSR1L, F
028C 0EFF      02406         MOVLW   0xff
028E 2600      02407         ADDWF   r0x00, F
0290 A0D8      02408         BTFSS   STATUS, 0
0292 0600      02409         DECF    r0x01, F
               02410 ;       .line   718; MainDemo.c for(i=0; i<202; i++){
0294 5000      02411         MOVF    r0x00, W
0296 1000      02412         IORWF   r0x01, W
0298 E100      02413         BNZ     _00616_DS_
               02414 ;       .line   722; MainDemo.c UDPPut(99);
029A 0E63      02415         MOVLW   0x63
029C 6EE5      02416         MOVWF   POSTDEC1
029E EC00 F000 02417         CALL    _UDPPut
02A2 2AE1      02418         INCF    FSR1L, F
               02419 ;       .line   723; MainDemo.c UDPPut(130);
02A4 0E82      02420         MOVLW   0x82
02A6 6EE5      02421         MOVWF   POSTDEC1
02A8 EC00 F000 02422         CALL    _UDPPut
02AC 2AE1      02423         INCF    FSR1L, F
               02424 ;       .line   724; MainDemo.c UDPPut(83);
02AE 0E53      02425         MOVLW   0x53
02B0 6EE5      02426         MOVWF   POSTDEC1
02B2 EC00 F000 02427         CALL    _UDPPut
02B6 2AE1      02428         INCF    FSR1L, F
               02429 ;       .line   725; MainDemo.c UDPPut(99);
02B8 0E63      02430         MOVLW   0x63
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02BA 6EE5      02431         MOVWF   POSTDEC1
02BC EC00 F000 02432         CALL    _UDPPut
02C0 2AE1      02433         INCF    FSR1L, F
               02434 ;       .line   726; MainDemo.c UDPPut(DHCP_MESSAGE_TYPE);
02C2 0E35      02435         MOVLW   0x35
02C4 6EE5      02436         MOVWF   POSTDEC1
02C6 EC00 F000 02437         CALL    _UDPPut
02CA 2AE1      02438         INCF    FSR1L, F
               02439 ;       .line   727; MainDemo.c UDPPut(DHCP_MESSAGE_TYPE_LEN);
02CC 0E01      02440         MOVLW   0x01
02CE 6EE5      02441         MOVWF   POSTDEC1
02D0 EC00 F000 02442         CALL    _UDPPut
02D4 2AE1      02443         INCF    FSR1L, F
02D6 CFE4 F000 02444         MOVFF   PREINC1, r0x07
02DA CFE4 F000 02445         MOVFF   PREINC1, r0x06
02DE CFE4 F000 02446         MOVFF   PREINC1, r0x05
02E2 CFE4 F000 02447         MOVFF   PREINC1, r0x04
02E6 CFE4 F000 02448         MOVFF   PREINC1, r0x03
02EA CFE4 F000 02449         MOVFF   PREINC1, r0x02
02EE CFE4 F000 02450         MOVFF   PREINC1, r0x01
02F2 CFE4 F000 02451         MOVFF   PREINC1, r0x00
02F6 CFE4 FFD9 02452         MOVFF   PREINC1, FSR2L
02FA 0012      02453         RETURN  
               02454 
               02455 ; ; Starting pCode block
               02456 S_MainDemo__handle_client_msg   code
0000 02457 _handle_client_msg:
               02458 ;       .line   639; MainDemo.c void handle_client_msg(UDP_SOCKET *socket_sendto_server,
0000 CFD9 FFE5 02459         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02460         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02461         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02462         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02463         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02464         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02465         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02466         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02467         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02468         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02469         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 02470         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 02471         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 02472         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 02473         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 02474         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 02475         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 02476         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 02477         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 02478         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 02479         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 02480         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 02481         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 02482         MOVFF   r0x15, POSTDEC1
0060 C000 FFE5 02483         MOVFF   r0x16, POSTDEC1
0064 C000 FFE5 02484         MOVFF   r0x17, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0068 C000 FFE5 02485         MOVFF   r0x18, POSTDEC1
006C C000 FFE5 02486         MOVFF   r0x19, POSTDEC1
0070 C000 FFE5 02487         MOVFF   r0x1a, POSTDEC1
0074 0E02      02488         MOVLW   0x02
0076 CFDB F000 02489         MOVFF   PLUSW2, r0x00
007A 0E03      02490         MOVLW   0x03
007C CFDB F000 02491         MOVFF   PLUSW2, r0x01
0080 0E04      02492         MOVLW   0x04
0082 CFDB F000 02493         MOVFF   PLUSW2, r0x02
0086 0E05      02494         MOVLW   0x05
0088 CFDB F000 02495         MOVFF   PLUSW2, r0x03
008C 0E06      02496         MOVLW   0x06
008E CFDB F000 02497         MOVFF   PLUSW2, r0x04
0092 0E07      02498         MOVLW   0x07
0094 CFDB F000 02499         MOVFF   PLUSW2, r0x05
0098 0E08      02500         MOVLW   0x08
009A CFDB F000 02501         MOVFF   PLUSW2, r0x06
009E 0E09      02502         MOVLW   0x09
00A0 CFDB F000 02503         MOVFF   PLUSW2, r0x07
00A4 0E0A      02504         MOVLW   0x0a
00A6 CFDB F000 02505         MOVFF   PLUSW2, r0x08
               02506 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x09
               02507 ; ;Unrolled 8 X 8 multiplication
               02508 ; ;FIXME: the function does not support result==WREG
00AA 0000      02509         BANKSEL _activeUDPSocket
               02510 ;       .line   655; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];   
00AC 5100      02511         MOVF    _activeUDPSocket, W, B
00AE 0D0E      02512         MULLW   0x0e
00B0 CFF3 F000 02513         MOVFF   PRODL, r0x09
00B4 6A00      02514         CLRF    r0x0a
00B6 0E00      02515         MOVLW   LOW(_UDPSocketInfo)
00B8 2600      02516         ADDWF   r0x09, F
00BA 0E00      02517         MOVLW   HIGH(_UDPSocketInfo)
00BC 2200      02518         ADDWFC  r0x0a, F
00BE 5000      02519         MOVF    r0x0a, W
00C0 6E00      02520         MOVWF   r0x0a
00C2 5000      02521         MOVF    r0x09, W
00C4 6E00      02522         MOVWF   r0x09
00C6 0E80      02523         MOVLW   0x80
00C8 6E00      02524         MOVWF   r0x0b
               02525 ;       .line   656; MainDemo.c remote_node_MAC = &info->remoteNode.MACAddr;
00CA 5000      02526         MOVF    r0x09, W
00CC 0F04      02527         ADDLW   0x04
00CE 6E00      02528         MOVWF   r0x0c
00D0 0E00      02529         MOVLW   0x00
00D2 2000      02530         ADDWFC  r0x0a, W
00D4 6E00      02531         MOVWF   r0x0d
00D6 0E00      02532         MOVLW   0x00
00D8 2000      02533         ADDWFC  r0x0b, W
00DA 6E00      02534         MOVWF   r0x0e
               02535 ;       .line   658; MainDemo.c extract_bootp_header(&dhcp_type, &bootp_header, dhcp_header, &dhcp_header_length, socket_recv);
00DC 0E00      02536         MOVLW   HIGH(_handle_client_msg_dhcp_type_1_1)
00DE 6E00      02537         MOVWF   r0x10
00E0 0E00      02538         MOVLW   LOW(_handle_client_msg_dhcp_type_1_1)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E2 6E00      02539         MOVWF   r0x0f
00E4 0E80      02540         MOVLW   0x80
00E6 6E00      02541         MOVWF   r0x11
00E8 0E00      02542         MOVLW   HIGH(_handle_client_msg_bootp_header_1_1)
00EA 6E00      02543         MOVWF   r0x13
00EC 0E00      02544         MOVLW   LOW(_handle_client_msg_bootp_header_1_1)
00EE 6E00      02545         MOVWF   r0x12
00F0 0E80      02546         MOVLW   0x80
00F2 6E00      02547         MOVWF   r0x14
00F4 0E00      02548         MOVLW   HIGH(_handle_client_msg_dhcp_header_1_1)
00F6 6E00      02549         MOVWF   r0x16
00F8 0E00      02550         MOVLW   LOW(_handle_client_msg_dhcp_header_1_1)
00FA 6E00      02551         MOVWF   r0x15
00FC 0E80      02552         MOVLW   0x80
00FE 6E00      02553         MOVWF   r0x17
0100 0E00      02554         MOVLW   HIGH(_handle_client_msg_dhcp_header_length_1_1)
0102 6E00      02555         MOVWF   r0x19
0104 0E00      02556         MOVLW   LOW(_handle_client_msg_dhcp_header_length_1_1)
0106 6E00      02557         MOVWF   r0x18
0108 0E80      02558         MOVLW   0x80
010A 6E00      02559         MOVWF   r0x1a
010C 5000      02560         MOVF    r0x08, W
010E 6EE5      02561         MOVWF   POSTDEC1
0110 5000      02562         MOVF    r0x07, W
0112 6EE5      02563         MOVWF   POSTDEC1
0114 5000      02564         MOVF    r0x06, W
0116 6EE5      02565         MOVWF   POSTDEC1
0118 5000      02566         MOVF    r0x1a, W
011A 6EE5      02567         MOVWF   POSTDEC1
011C 5000      02568         MOVF    r0x19, W
011E 6EE5      02569         MOVWF   POSTDEC1
0120 5000      02570         MOVF    r0x18, W
0122 6EE5      02571         MOVWF   POSTDEC1
0124 5000      02572         MOVF    r0x17, W
0126 6EE5      02573         MOVWF   POSTDEC1
0128 5000      02574         MOVF    r0x16, W
012A 6EE5      02575         MOVWF   POSTDEC1
012C 5000      02576         MOVF    r0x15, W
012E 6EE5      02577         MOVWF   POSTDEC1
0130 5000      02578         MOVF    r0x14, W
0132 6EE5      02579         MOVWF   POSTDEC1
0134 5000      02580         MOVF    r0x13, W
0136 6EE5      02581         MOVWF   POSTDEC1
0138 5000      02582         MOVF    r0x12, W
013A 6EE5      02583         MOVWF   POSTDEC1
013C 5000      02584         MOVF    r0x11, W
013E 6EE5      02585         MOVWF   POSTDEC1
0140 5000      02586         MOVF    r0x10, W
0142 6EE5      02587         MOVWF   POSTDEC1
0144 5000      02588         MOVF    r0x0f, W
0146 6EE5      02589         MOVWF   POSTDEC1
0148 EC00 F000 02590         CALL    _extract_bootp_header
014C 0E0F      02591         MOVLW   0x0f
014E 26E1      02592         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02593 ;       .line   659; MainDemo.c UDPDiscard();
0150 EC00 F000 02594         CALL    _UDPDiscard
               02595 ;       .line   661; MainDemo.c switch(dhcp_type){
0154 C000 F000 02596         MOVFF   _handle_client_msg_dhcp_type_1_1, r0x06
0158 6A00      02597         CLRF    r0x07
015A 5000      02598         MOVF    r0x06, W
015C 0A01      02599         XORLW   0x01
015E E100      02600         BNZ     _00604_DS_
0160 5000      02601         MOVF    r0x07, W
0162 E000      02602         BZ      _00578_DS_
0164 02603 _00604_DS_:
0164 5000      02604         MOVF    r0x06, W
0166 0A03      02605         XORLW   0x03
0168 E100      02606         BNZ     _00606_DS_
016A 5000      02607         MOVF    r0x07, W
016C E100      02608         BNZ     _00606_DS_
016E D000      02609         BRA     _00581_DS_
0170 02610 _00606_DS_:
0170 D000      02611         BRA     _00591_DS_
0172 02612 _00578_DS_:
               02613 ;       .line   663; MainDemo.c while(!UDPIsPutReady(*socket_sendto_server));
0172 C000 FFE9 02614         MOVFF   r0x00, FSR0L
0176 C000 FFF3 02615         MOVFF   r0x01, PRODL
017A 5000      02616         MOVF    r0x02, W
017C EC00 F000 02617         CALL    __gptrget1
0180 6E00      02618         MOVWF   r0x06
0182 5000      02619         MOVF    r0x06, W
0184 6EE5      02620         MOVWF   POSTDEC1
0186 EC00 F000 02621         CALL    _UDPIsPutReady
018A 6E00      02622         MOVWF   r0x06
018C CFF3 F000 02623         MOVFF   PRODL, r0x07
0190 2AE1      02624         INCF    FSR1L, F
0192 5000      02625         MOVF    r0x06, W
0194 1000      02626         IORWF   r0x07, W
0196 E000      02627         BZ      _00578_DS_
               02628 ;       .line   664; MainDemo.c set_mac_to_dhcp_server();
0198 EC00 F000 02629         CALL    _set_mac_to_dhcp_server
               02630 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x06
               02631 ; ;Unrolled 8 X 8 multiplication
               02632 ; ;FIXME: the function does not support result==WREG
019C 0000      02633         BANKSEL _activeUDPSocket
               02634 ;       .line   665; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];
019E 5100      02635         MOVF    _activeUDPSocket, W, B
01A0 0D0E      02636         MULLW   0x0e
01A2 CFF3 F000 02637         MOVFF   PRODL, r0x06
01A6 6A00      02638         CLRF    r0x07
01A8 0E00      02639         MOVLW   LOW(_UDPSocketInfo)
01AA 2600      02640         ADDWF   r0x06, F
01AC 0E00      02641         MOVLW   HIGH(_UDPSocketInfo)
01AE 2200      02642         ADDWFC  r0x07, F
01B0 5000      02643         MOVF    r0x07, W
01B2 6E00      02644         MOVWF   r0x0a
01B4 5000      02645         MOVF    r0x06, W
01B6 6E00      02646         MOVWF   r0x09
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01B8 0E80      02647         MOVLW   0x80
01BA 6E00      02648         MOVWF   r0x0b
               02649 ;       .line   666; MainDemo.c set_to_dhcp_ip(&info->remoteNode.IPAddr);
01BC 5000      02650         MOVF    r0x0b, W
01BE 6EE5      02651         MOVWF   POSTDEC1
01C0 5000      02652         MOVF    r0x0a, W
01C2 6EE5      02653         MOVWF   POSTDEC1
01C4 5000      02654         MOVF    r0x09, W
01C6 6EE5      02655         MOVWF   POSTDEC1
01C8 EC00 F000 02656         CALL    _set_to_dhcp_ip
01CC 0E03      02657         MOVLW   0x03
01CE 26E1      02658         ADDWF   FSR1L, F
               02659 ;       .line   668; MainDemo.c DisplayString(0, "DHCP DISCOVERY");
01D0 0E00      02660         MOVLW   UPPER(__str_4)
01D2 6EE5      02661         MOVWF   POSTDEC1
01D4 0E00      02662         MOVLW   HIGH(__str_4)
01D6 6EE5      02663         MOVWF   POSTDEC1
01D8 0E00      02664         MOVLW   LOW(__str_4)
01DA 6EE5      02665         MOVWF   POSTDEC1
01DC 0E00      02666         MOVLW   0x00
01DE 6EE5      02667         MOVWF   POSTDEC1
01E0 EC00 F000 02668         CALL    _DisplayString
01E4 0E04      02669         MOVLW   0x04
01E6 26E1      02670         ADDWF   FSR1L, F
               02671 ;       .line   669; MainDemo.c build_bootp(&bootp_header, socket_sendto_server);
01E8 0E00      02672         MOVLW   HIGH(_handle_client_msg_bootp_header_1_1)
01EA 6E00      02673         MOVWF   r0x07
01EC 0E00      02674         MOVLW   LOW(_handle_client_msg_bootp_header_1_1)
01EE 6E00      02675         MOVWF   r0x06
01F0 0E80      02676         MOVLW   0x80
01F2 6E00      02677         MOVWF   r0x08
01F4 5000      02678         MOVF    r0x02, W
01F6 6EE5      02679         MOVWF   POSTDEC1
01F8 5000      02680         MOVF    r0x01, W
01FA 6EE5      02681         MOVWF   POSTDEC1
01FC 5000      02682         MOVF    r0x00, W
01FE 6EE5      02683         MOVWF   POSTDEC1
0200 5000      02684         MOVF    r0x08, W
0202 6EE5      02685         MOVWF   POSTDEC1
0204 5000      02686         MOVF    r0x07, W
0206 6EE5      02687         MOVWF   POSTDEC1
0208 5000      02688         MOVF    r0x06, W
020A 6EE5      02689         MOVWF   POSTDEC1
020C EC00 F000 02690         CALL    _build_bootp
0210 0E06      02691         MOVLW   0x06
0212 26E1      02692         ADDWF   FSR1L, F
               02693 ;       .line   670; MainDemo.c discover_msg();
0214 EC00 F000 02694         CALL    _discover_msg
               02695 ;       .line   671; MainDemo.c break;
0218 D000      02696         BRA     _00593_DS_
021A 02697 _00581_DS_:
               02698 ;       .line   673; MainDemo.c DisplayString(0, "DHCP REQUEST");
021A 0E00      02699         MOVLW   UPPER(__str_5)
021C 6EE5      02700         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
021E 0E00      02701         MOVLW   HIGH(__str_5)
0220 6EE5      02702         MOVWF   POSTDEC1
0222 0E00      02703         MOVLW   LOW(__str_5)
0224 6EE5      02704         MOVWF   POSTDEC1
0226 0E00      02705         MOVLW   0x00
0228 6EE5      02706         MOVWF   POSTDEC1
022A EC00 F000 02707         CALL    _DisplayString
022E 0E04      02708         MOVLW   0x04
0230 26E1      02709         ADDWF   FSR1L, F
               02710 ;       .line   675; MainDemo.c if(get_pool_el_mac(remote_node_MAC, &node_pool_state)){                
0232 0E00      02711         MOVLW   HIGH(_handle_client_msg_node_pool_state_1_1)
0234 6E00      02712         MOVWF   r0x07
0236 0E00      02713         MOVLW   LOW(_handle_client_msg_node_pool_state_1_1)
0238 6E00      02714         MOVWF   r0x06
023A 0E80      02715         MOVLW   0x80
023C 6E00      02716         MOVWF   r0x08
023E 5000      02717         MOVF    r0x08, W
0240 6EE5      02718         MOVWF   POSTDEC1
0242 5000      02719         MOVF    r0x07, W
0244 6EE5      02720         MOVWF   POSTDEC1
0246 5000      02721         MOVF    r0x06, W
0248 6EE5      02722         MOVWF   POSTDEC1
024A 5000      02723         MOVF    r0x0e, W
024C 6EE5      02724         MOVWF   POSTDEC1
024E 5000      02725         MOVF    r0x0d, W
0250 6EE5      02726         MOVWF   POSTDEC1
0252 5000      02727         MOVF    r0x0c, W
0254 6EE5      02728         MOVWF   POSTDEC1
0256 EC00 F000 02729         CALL    _get_pool_el_mac
025A 6E00      02730         MOVWF   r0x06
025C 0E06      02731         MOVLW   0x06
025E 26E1      02732         ADDWF   FSR1L, F
0260 5000      02733         MOVF    r0x06, W
0262 B4D8      02734         BTFSC   STATUS, 2
0264 D000      02735         BRA     _00585_DS_
0266 02736 _00582_DS_:
               02737 ;       .line   676; MainDemo.c while(!UDPIsPutReady(*socket_sendto_client));
0266 C000 FFE9 02738         MOVFF   r0x03, FSR0L
026A C000 FFF3 02739         MOVFF   r0x04, PRODL
026E 5000      02740         MOVF    r0x05, W
0270 EC00 F000 02741         CALL    __gptrget1
0274 6E00      02742         MOVWF   r0x06
0276 5000      02743         MOVF    r0x06, W
0278 6EE5      02744         MOVWF   POSTDEC1
027A EC00 F000 02745         CALL    _UDPIsPutReady
027E 6E00      02746         MOVWF   r0x06
0280 CFF3 F000 02747         MOVFF   PRODL, r0x07
0284 2AE1      02748         INCF    FSR1L, F
0286 5000      02749         MOVF    r0x06, W
0288 1000      02750         IORWF   r0x07, W
028A E000      02751         BZ      _00582_DS_
               02752 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x06
               02753 ; ;Unrolled 8 X 8 multiplication
               02754 ; ;FIXME: the function does not support result==WREG
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
028C 0000      02755         BANKSEL _activeUDPSocket
               02756 ;       .line   677; MainDemo.c info = &UDPSocketInfo[activeUDPSocket]; 
028E 5100      02757         MOVF    _activeUDPSocket, W, B
0290 0D0E      02758         MULLW   0x0e
0292 CFF3 F000 02759         MOVFF   PRODL, r0x06
0296 6A00      02760         CLRF    r0x07
0298 0E00      02761         MOVLW   LOW(_UDPSocketInfo)
029A 2600      02762         ADDWF   r0x06, F
029C 0E00      02763         MOVLW   HIGH(_UDPSocketInfo)
029E 2200      02764         ADDWFC  r0x07, F
02A0 5000      02765         MOVF    r0x07, W
02A2 6E00      02766         MOVWF   r0x0a
02A4 5000      02767         MOVF    r0x06, W
02A6 6E00      02768         MOVWF   r0x09
02A8 0E80      02769         MOVLW   0x80
02AA 6E00      02770         MOVWF   r0x0b
               02771 ;       .line   678; MainDemo.c set_to_dhcp_ip(&info->remoteNode.IPAddr);
02AC 5000      02772         MOVF    r0x0b, W
02AE 6EE5      02773         MOVWF   POSTDEC1
02B0 5000      02774         MOVF    r0x0a, W
02B2 6EE5      02775         MOVWF   POSTDEC1
02B4 5000      02776         MOVF    r0x09, W
02B6 6EE5      02777         MOVWF   POSTDEC1
02B8 EC00 F000 02778         CALL    _set_to_dhcp_ip
02BC 0E03      02779         MOVLW   0x03
02BE 26E1      02780         ADDWF   FSR1L, F
               02781 ;       .line   679; MainDemo.c node_pool_state->client_deadline = RELAY_LEASE_TIME;
02C0 C000 F000 02782         MOVFF   _handle_client_msg_node_pool_state_1_1, r0x06
02C4 C000 F000 02783         MOVFF   (_handle_client_msg_node_pool_state_1_1 + 1), r0x07
02C8 C000 F000 02784         MOVFF   (_handle_client_msg_node_pool_state_1_1 + 2), r0x08
02CC 5000      02785         MOVF    r0x06, W
02CE 0F0A      02786         ADDLW   0x0a
02D0 6E00      02787         MOVWF   r0x0c
02D2 0E00      02788         MOVLW   0x00
02D4 2000      02789         ADDWFC  r0x07, W
02D6 6E00      02790         MOVWF   r0x0d
02D8 0E00      02791         MOVLW   0x00
02DA 2000      02792         ADDWFC  r0x08, W
02DC 6E00      02793         MOVWF   r0x0e
02DE 0E2C      02794         MOVLW   0x2c
02E0 6EE5      02795         MOVWF   POSTDEC1
02E2 0E01      02796         MOVLW   0x01
02E4 6EF4      02797         MOVWF   PRODH
02E6 0E00      02798         MOVLW   0x00
02E8 6EF6      02799         MOVWF   TBLPTRL
02EA 0E00      02800         MOVLW   0x00
02EC 6EF7      02801         MOVWF   TBLPTRH
02EE C000 FFE9 02802         MOVFF   r0x0c, FSR0L
02F2 C000 FFF3 02803         MOVFF   r0x0d, PRODL
02F6 5000      02804         MOVF    r0x0e, W
02F8 EC00 F000 02805         CALL    __gptrput4
               02806 ;       .line   680; MainDemo.c node_pool_state->miss_counter = 0;
02FC 5000      02807         MOVF    r0x06, W
02FE 0F12      02808         ADDLW   0x12
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0300 6E00      02809         MOVWF   r0x0c
0302 0E00      02810         MOVLW   0x00
0304 2000      02811         ADDWFC  r0x07, W
0306 6E00      02812         MOVWF   r0x0d
0308 0E00      02813         MOVLW   0x00
030A 2000      02814         ADDWFC  r0x08, W
030C 6E00      02815         MOVWF   r0x0e
030E 0E00      02816         MOVLW   0x00
0310 6EE5      02817         MOVWF   POSTDEC1
0312 0E00      02818         MOVLW   0x00
0314 6EF4      02819         MOVWF   PRODH
0316 C000 FFE9 02820         MOVFF   r0x0c, FSR0L
031A C000 FFF3 02821         MOVFF   r0x0d, PRODL
031E 5000      02822         MOVF    r0x0e, W
0320 EC00 F000 02823         CALL    __gptrput2
               02824 ;       .line   681; MainDemo.c forgeBootpHeaderAck(&bootp_header, bootp_header.TransactionID, &bootp_header.ClientIP, &node_pool_state->ip, &node_pool_state->mac);
0324 0E00      02825         MOVLW   HIGH(_handle_client_msg_bootp_header_1_1)
0326 6E00      02826         MOVWF   r0x0d
0328 0E00      02827         MOVLW   LOW(_handle_client_msg_bootp_header_1_1)
032A 6E00      02828         MOVWF   r0x0c
032C 0E80      02829         MOVLW   0x80
032E 6E00      02830         MOVWF   r0x0e
0330 0E00      02831         MOVLW   HIGH(_handle_client_msg_bootp_header_1_1 + 12)
0332 6E00      02832         MOVWF   r0x10
0334 0E00      02833         MOVLW   LOW(_handle_client_msg_bootp_header_1_1 + 12)
0336 6E00      02834         MOVWF   r0x0f
0338 0E80      02835         MOVLW   0x80
033A 6E00      02836         MOVWF   r0x11
033C 5000      02837         MOVF    r0x06, W
033E 0F04      02838         ADDLW   0x04
0340 6E00      02839         MOVWF   r0x12
0342 0E00      02840         MOVLW   0x00
0344 2000      02841         ADDWFC  r0x07, W
0346 6E00      02842         MOVWF   r0x13
0348 0E00      02843         MOVLW   0x00
034A 2000      02844         ADDWFC  r0x08, W
034C 6E00      02845         MOVWF   r0x14
034E 5000      02846         MOVF    r0x14, W
0350 6EE5      02847         MOVWF   POSTDEC1
0352 5000      02848         MOVF    r0x13, W
0354 6EE5      02849         MOVWF   POSTDEC1
0356 5000      02850         MOVF    r0x12, W
0358 6EE5      02851         MOVWF   POSTDEC1
035A 5000      02852         MOVF    r0x08, W
035C 6EE5      02853         MOVWF   POSTDEC1
035E 5000      02854         MOVF    r0x07, W
0360 6EE5      02855         MOVWF   POSTDEC1
0362 5000      02856         MOVF    r0x06, W
0364 6EE5      02857         MOVWF   POSTDEC1
0366 5000      02858         MOVF    r0x11, W
0368 6EE5      02859         MOVWF   POSTDEC1
036A 5000      02860         MOVF    r0x10, W
036C 6EE5      02861         MOVWF   POSTDEC1
036E 5000      02862         MOVF    r0x0f, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0370 6EE5      02863         MOVWF   POSTDEC1
0372 0000      02864         BANKSEL (_handle_client_msg_bootp_header_1_1 + 7)
0374 5100      02865         MOVF    (_handle_client_msg_bootp_header_1_1 + 7), W, B
0376 6EE5      02866         MOVWF   POSTDEC1
0378 0000      02867         BANKSEL (_handle_client_msg_bootp_header_1_1 + 6)
037A 5100      02868         MOVF    (_handle_client_msg_bootp_header_1_1 + 6), W, B
037C 6EE5      02869         MOVWF   POSTDEC1
037E 0000      02870         BANKSEL (_handle_client_msg_bootp_header_1_1 + 5)
0380 5100      02871         MOVF    (_handle_client_msg_bootp_header_1_1 + 5), W, B
0382 6EE5      02872         MOVWF   POSTDEC1
0384 0000      02873         BANKSEL (_handle_client_msg_bootp_header_1_1 + 4)
0386 5100      02874         MOVF    (_handle_client_msg_bootp_header_1_1 + 4), W, B
0388 6EE5      02875         MOVWF   POSTDEC1
038A 5000      02876         MOVF    r0x0e, W
038C 6EE5      02877         MOVWF   POSTDEC1
038E 5000      02878         MOVF    r0x0d, W
0390 6EE5      02879         MOVWF   POSTDEC1
0392 5000      02880         MOVF    r0x0c, W
0394 6EE5      02881         MOVWF   POSTDEC1
0396 EC00 F000 02882         CALL    _forgeBootpHeaderAck
039A 0E10      02883         MOVLW   0x10
039C 26E1      02884         ADDWF   FSR1L, F
               02885 ;       .line   682; MainDemo.c transfer_msg_to_client(&bootp_header, socket_sendto_client, DHCP_ACK_MESSAGE);
039E 0E00      02886         MOVLW   HIGH(_handle_client_msg_bootp_header_1_1)
03A0 6E00      02887         MOVWF   r0x07
03A2 0E00      02888         MOVLW   LOW(_handle_client_msg_bootp_header_1_1)
03A4 6E00      02889         MOVWF   r0x06
03A6 0E80      02890         MOVLW   0x80
03A8 6E00      02891         MOVWF   r0x08
03AA 0E05      02892         MOVLW   0x05
03AC 6EE5      02893         MOVWF   POSTDEC1
03AE 5000      02894         MOVF    r0x05, W
03B0 6EE5      02895         MOVWF   POSTDEC1
03B2 5000      02896         MOVF    r0x04, W
03B4 6EE5      02897         MOVWF   POSTDEC1
03B6 5000      02898         MOVF    r0x03, W
03B8 6EE5      02899         MOVWF   POSTDEC1
03BA 5000      02900         MOVF    r0x08, W
03BC 6EE5      02901         MOVWF   POSTDEC1
03BE 5000      02902         MOVF    r0x07, W
03C0 6EE5      02903         MOVWF   POSTDEC1
03C2 5000      02904         MOVF    r0x06, W
03C4 6EE5      02905         MOVWF   POSTDEC1
03C6 EC00 F000 02906         CALL    _transfer_msg_to_client
03CA 0E07      02907         MOVLW   0x07
03CC 26E1      02908         ADDWF   FSR1L, F
03CE D000      02909         BRA     _00593_DS_
03D0 02910 _00585_DS_:
               02911 ;       .line   686; MainDemo.c while(!UDPIsPutReady(*socket_sendto_server));
03D0 C000 FFE9 02912         MOVFF   r0x00, FSR0L
03D4 C000 FFF3 02913         MOVFF   r0x01, PRODL
03D8 5000      02914         MOVF    r0x02, W
03DA EC00 F000 02915         CALL    __gptrget1
03DE 6E00      02916         MOVWF   r0x03
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03E0 5000      02917         MOVF    r0x03, W
03E2 6EE5      02918         MOVWF   POSTDEC1
03E4 EC00 F000 02919         CALL    _UDPIsPutReady
03E8 6E00      02920         MOVWF   r0x03
03EA CFF3 F000 02921         MOVFF   PRODL, r0x04
03EE 2AE1      02922         INCF    FSR1L, F
03F0 5000      02923         MOVF    r0x03, W
03F2 1000      02924         IORWF   r0x04, W
03F4 E000      02925         BZ      _00585_DS_
               02926 ;       .line   687; MainDemo.c set_mac_to_dhcp_server();
03F6 EC00 F000 02927         CALL    _set_mac_to_dhcp_server
               02928 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x03
               02929 ; ;Unrolled 8 X 8 multiplication
               02930 ; ;FIXME: the function does not support result==WREG
03FA 0000      02931         BANKSEL _activeUDPSocket
               02932 ;       .line   688; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];             
03FC 5100      02933         MOVF    _activeUDPSocket, W, B
03FE 0D0E      02934         MULLW   0x0e
0400 CFF3 F000 02935         MOVFF   PRODL, r0x03
0404 6A00      02936         CLRF    r0x04
0406 0E00      02937         MOVLW   LOW(_UDPSocketInfo)
0408 2600      02938         ADDWF   r0x03, F
040A 0E00      02939         MOVLW   HIGH(_UDPSocketInfo)
040C 2200      02940         ADDWFC  r0x04, F
040E 5000      02941         MOVF    r0x04, W
0410 6E00      02942         MOVWF   r0x0a
0412 5000      02943         MOVF    r0x03, W
0414 6E00      02944         MOVWF   r0x09
0416 0E80      02945         MOVLW   0x80
0418 6E00      02946         MOVWF   r0x0b
               02947 ;       .line   689; MainDemo.c set_to_dhcp_ip(&info->remoteNode.IPAddr);
041A 5000      02948         MOVF    r0x0b, W
041C 6EE5      02949         MOVWF   POSTDEC1
041E 5000      02950         MOVF    r0x0a, W
0420 6EE5      02951         MOVWF   POSTDEC1
0422 5000      02952         MOVF    r0x09, W
0424 6EE5      02953         MOVWF   POSTDEC1
0426 EC00 F000 02954         CALL    _set_to_dhcp_ip
042A 0E03      02955         MOVLW   0x03
042C 26E1      02956         ADDWF   FSR1L, F
               02957 ;       .line   690; MainDemo.c build_bootp(&bootp_header, socket_sendto_server);
042E 0E00      02958         MOVLW   HIGH(_handle_client_msg_bootp_header_1_1)
0430 6E00      02959         MOVWF   r0x04
0432 0E00      02960         MOVLW   LOW(_handle_client_msg_bootp_header_1_1)
0434 6E00      02961         MOVWF   r0x03
0436 0E80      02962         MOVLW   0x80
0438 6E00      02963         MOVWF   r0x05
043A 5000      02964         MOVF    r0x02, W
043C 6EE5      02965         MOVWF   POSTDEC1
043E 5000      02966         MOVF    r0x01, W
0440 6EE5      02967         MOVWF   POSTDEC1
0442 5000      02968         MOVF    r0x00, W
0444 6EE5      02969         MOVWF   POSTDEC1
0446 5000      02970         MOVF    r0x05, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0448 6EE5      02971         MOVWF   POSTDEC1
044A 5000      02972         MOVF    r0x04, W
044C 6EE5      02973         MOVWF   POSTDEC1
044E 5000      02974         MOVF    r0x03, W
0450 6EE5      02975         MOVWF   POSTDEC1
0452 EC00 F000 02976         CALL    _build_bootp
0456 0E06      02977         MOVLW   0x06
0458 26E1      02978         ADDWF   FSR1L, F
               02979 ;       .line   691; MainDemo.c request_msg(dhcp_header, dhcp_header_length);
045A 0E00      02980         MOVLW   HIGH(_handle_client_msg_dhcp_header_1_1)
045C 6E00      02981         MOVWF   r0x01
045E 0E00      02982         MOVLW   LOW(_handle_client_msg_dhcp_header_1_1)
0460 6E00      02983         MOVWF   r0x00
0462 0E80      02984         MOVLW   0x80
0464 6E00      02985         MOVWF   r0x02
0466 0000      02986         BANKSEL (_handle_client_msg_dhcp_header_length_1_1 + 1)
0468 5100      02987         MOVF    (_handle_client_msg_dhcp_header_length_1_1 + 1), W, B
046A 6EE5      02988         MOVWF   POSTDEC1
046C 0000      02989         BANKSEL _handle_client_msg_dhcp_header_length_1_1
046E 5100      02990         MOVF    _handle_client_msg_dhcp_header_length_1_1, W, B
0470 6EE5      02991         MOVWF   POSTDEC1
0472 5000      02992         MOVF    r0x02, W
0474 6EE5      02993         MOVWF   POSTDEC1
0476 5000      02994         MOVF    r0x01, W
0478 6EE5      02995         MOVWF   POSTDEC1
047A 5000      02996         MOVF    r0x00, W
047C 6EE5      02997         MOVWF   POSTDEC1
047E EC00 F000 02998         CALL    _request_msg
0482 0E05      02999         MOVLW   0x05
0484 26E1      03000         ADDWF   FSR1L, F
               03001 ;       .line   693; MainDemo.c break;
0486 D000      03002         BRA     _00593_DS_
0488 03003 _00591_DS_:
               03004 ;       .line   695; MainDemo.c DisplayString(0, "Unknw DHCP type");
0488 0E00      03005         MOVLW   UPPER(__str_6)
048A 6EE5      03006         MOVWF   POSTDEC1
048C 0E00      03007         MOVLW   HIGH(__str_6)
048E 6EE5      03008         MOVWF   POSTDEC1
0490 0E00      03009         MOVLW   LOW(__str_6)
0492 6EE5      03010         MOVWF   POSTDEC1
0494 0E00      03011         MOVLW   0x00
0496 6EE5      03012         MOVWF   POSTDEC1
0498 EC00 F000 03013         CALL    _DisplayString
049C 0E04      03014         MOVLW   0x04
049E 26E1      03015         ADDWF   FSR1L, F
04A0 03016 _00593_DS_:
               03017 ;       .line   697; MainDemo.c }
04A0 CFE4 F000 03018         MOVFF   PREINC1, r0x1a
04A4 CFE4 F000 03019         MOVFF   PREINC1, r0x19
04A8 CFE4 F000 03020         MOVFF   PREINC1, r0x18
04AC CFE4 F000 03021         MOVFF   PREINC1, r0x17
04B0 CFE4 F000 03022         MOVFF   PREINC1, r0x16
04B4 CFE4 F000 03023         MOVFF   PREINC1, r0x15
04B8 CFE4 F000 03024         MOVFF   PREINC1, r0x14
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
04BC CFE4 F000 03025         MOVFF   PREINC1, r0x13
04C0 CFE4 F000 03026         MOVFF   PREINC1, r0x12
04C4 CFE4 F000 03027         MOVFF   PREINC1, r0x11
04C8 CFE4 F000 03028         MOVFF   PREINC1, r0x10
04CC CFE4 F000 03029         MOVFF   PREINC1, r0x0f
04D0 CFE4 F000 03030         MOVFF   PREINC1, r0x0e
04D4 CFE4 F000 03031         MOVFF   PREINC1, r0x0d
04D8 CFE4 F000 03032         MOVFF   PREINC1, r0x0c
04DC CFE4 F000 03033         MOVFF   PREINC1, r0x0b
04E0 CFE4 F000 03034         MOVFF   PREINC1, r0x0a
04E4 CFE4 F000 03035         MOVFF   PREINC1, r0x09
04E8 CFE4 F000 03036         MOVFF   PREINC1, r0x08
04EC CFE4 F000 03037         MOVFF   PREINC1, r0x07
04F0 CFE4 F000 03038         MOVFF   PREINC1, r0x06
04F4 CFE4 F000 03039         MOVFF   PREINC1, r0x05
04F8 CFE4 F000 03040         MOVFF   PREINC1, r0x04
04FC CFE4 F000 03041         MOVFF   PREINC1, r0x03
0500 CFE4 F000 03042         MOVFF   PREINC1, r0x02
0504 CFE4 F000 03043         MOVFF   PREINC1, r0x01
0508 CFE4 F000 03044         MOVFF   PREINC1, r0x00
050C CFE4 FFD9 03045         MOVFF   PREINC1, FSR2L
0510 0012      03046         RETURN  
               03047 
               03048 ; ; Starting pCode block
               03049 S_MainDemo__set_mac_to_dhcp_server      code
0000 03050 _set_mac_to_dhcp_server:
               03051 ;       .line   627; MainDemo.c void set_mac_to_dhcp_server(){
0000 CFD9 FFE5 03052         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03053         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03054         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03055         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03056         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03057         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03058         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03059         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03060         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03061         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03062         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03063         MOVFF   r0x09, POSTDEC1
               03064 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x00
               03065 ; ;Unrolled 8 X 8 multiplication
               03066 ; ;FIXME: the function does not support result==WREG
0030 0000      03067         BANKSEL _activeUDPSocket
               03068 ;       .line   631; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];
0032 5100      03069         MOVF    _activeUDPSocket, W, B
0034 0D0E      03070         MULLW   0x0e
0036 CFF3 F000 03071         MOVFF   PRODL, r0x00
003A 6A00      03072         CLRF    r0x01
003C 0E00      03073         MOVLW   LOW(_UDPSocketInfo)
003E 2600      03074         ADDWF   r0x00, F
0040 0E00      03075         MOVLW   HIGH(_UDPSocketInfo)
0042 2200      03076         ADDWFC  r0x01, F
0044 5000      03077         MOVF    r0x01, W
0046 6E00      03078         MOVWF   r0x01
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0048 5000      03079         MOVF    r0x00, W
004A 6E00      03080         MOVWF   r0x00
004C 0E80      03081         MOVLW   0x80
004E 6E00      03082         MOVWF   r0x02
               03083 ;       .line   633; MainDemo.c remote_node_MAC = &info->remoteNode.MACAddr;
0050 0E04      03084         MOVLW   0x04
0052 2600      03085         ADDWF   r0x00, F
0054 0E00      03086         MOVLW   0x00
0056 2200      03087         ADDWFC  r0x01, F
0058 0E00      03088         MOVLW   0x00
005A 2200      03089         ADDWFC  r0x02, F
               03090 ;       .line   635; MainDemo.c for (i=0; i<sizeof(MAC_ADDR); i++)
005C 6A00      03091         CLRF    r0x03
005E 6A00      03092         CLRF    r0x04
0060 03093 _00563_DS_:
0060 5000      03094         MOVF    r0x04, W
0062 0F80      03095         ADDLW   0x80
0064 0F80      03096         ADDLW   0x80
0066 E100      03097         BNZ     _00572_DS_
0068 0E06      03098         MOVLW   0x06
006A 5C00      03099         SUBWF   r0x03, W
006C 03100 _00572_DS_:
006C E200      03101         BC      _00567_DS_
               03102 ;       .line   636; MainDemo.c remote_node_MAC->v[i] = GATEWAY_MACA[i];
006E 5000      03103         MOVF    r0x03, W
0070 2400      03104         ADDWF   r0x00, W
0072 6E00      03105         MOVWF   r0x05
0074 5000      03106         MOVF    r0x04, W
0076 2000      03107         ADDWFC  r0x01, W
0078 6E00      03108         MOVWF   r0x06
007A 6AE8      03109         CLRF    WREG
007C BE00      03110         BTFSC   r0x04, 7
007E 68E8      03111         SETF    WREG
0080 2000      03112         ADDWFC  r0x02, W
0082 6E00      03113         MOVWF   r0x07
0084 0E00      03114         MOVLW   LOW(_GATEWAY_MACA)
0086 2400      03115         ADDWF   r0x03, W
0088 6E00      03116         MOVWF   r0x08
008A 0E00      03117         MOVLW   HIGH(_GATEWAY_MACA)
008C 2000      03118         ADDWFC  r0x04, W
008E 6E00      03119         MOVWF   r0x09
0090 C000 FFE9 03120         MOVFF   r0x08, FSR0L
0094 C000 FFEA 03121         MOVFF   r0x09, FSR0H
0098 CFEF F000 03122         MOVFF   INDF0, r0x08
009C C000 FFE5 03123         MOVFF   r0x08, POSTDEC1
00A0 C000 FFE9 03124         MOVFF   r0x05, FSR0L
00A4 C000 FFF3 03125         MOVFF   r0x06, PRODL
00A8 5000      03126         MOVF    r0x07, W
00AA EC00 F000 03127         CALL    __gptrput1
               03128 ;       .line   635; MainDemo.c for (i=0; i<sizeof(MAC_ADDR); i++)
00AE 2A00      03129         INCF    r0x03, F
00B0 B0D8      03130         BTFSC   STATUS, 0
00B2 2A00      03131         INCF    r0x04, F
00B4 D000      03132         BRA     _00563_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B6 03133 _00567_DS_:
00B6 CFE4 F000 03134         MOVFF   PREINC1, r0x09
00BA CFE4 F000 03135         MOVFF   PREINC1, r0x08
00BE CFE4 F000 03136         MOVFF   PREINC1, r0x07
00C2 CFE4 F000 03137         MOVFF   PREINC1, r0x06
00C6 CFE4 F000 03138         MOVFF   PREINC1, r0x05
00CA CFE4 F000 03139         MOVFF   PREINC1, r0x04
00CE CFE4 F000 03140         MOVFF   PREINC1, r0x03
00D2 CFE4 F000 03141         MOVFF   PREINC1, r0x02
00D6 CFE4 F000 03142         MOVFF   PREINC1, r0x01
00DA CFE4 F000 03143         MOVFF   PREINC1, r0x00
00DE CFE4 FFD9 03144         MOVFF   PREINC1, FSR2L
00E2 0012      03145         RETURN  
               03146 
               03147 ; ; Starting pCode block
               03148 S_MainDemo__transfer_msg_to_client      code
0000 03149 _transfer_msg_to_client:
               03150 ;       .line   570; MainDemo.c void transfer_msg_to_client(BOOTP_HEADER *bootp_header, UDP_SOCKET *my_socket, BYTE type) {
0000 CFD9 FFE5 03151         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03152         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03153         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03154         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03155         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03156         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03157         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03158         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03159         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03160         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03161         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03162         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 03163         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 03164         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 03165         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 03166         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 03167         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 03168         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 03169         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 03170         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 03171         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 03172         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 03173         MOVFF   r0x14, POSTDEC1
005C 0E02      03174         MOVLW   0x02
005E CFDB F000 03175         MOVFF   PLUSW2, r0x00
0062 0E03      03176         MOVLW   0x03
0064 CFDB F000 03177         MOVFF   PLUSW2, r0x01
0068 0E04      03178         MOVLW   0x04
006A CFDB F000 03179         MOVFF   PLUSW2, r0x02
006E 0E05      03180         MOVLW   0x05
0070 CFDB F000 03181         MOVFF   PLUSW2, r0x03
0074 0E06      03182         MOVLW   0x06
0076 CFDB F000 03183         MOVFF   PLUSW2, r0x04
007A 0E07      03184         MOVLW   0x07
007C CFDB F000 03185         MOVFF   PLUSW2, r0x05
0080 0E08      03186         MOVLW   0x08
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0082 CFDB F000 03187         MOVFF   PLUSW2, r0x06
0086 03188 _00528_DS_:
               03189 ;       .line   576; MainDemo.c while(!UDPIsPutReady(*my_socket));
0086 C000 FFE9 03190         MOVFF   r0x03, FSR0L
008A C000 FFF3 03191         MOVFF   r0x04, PRODL
008E 5000      03192         MOVF    r0x05, W
0090 EC00 F000 03193         CALL    __gptrget1
0094 6E00      03194         MOVWF   r0x07
0096 5000      03195         MOVF    r0x07, W
0098 6EE5      03196         MOVWF   POSTDEC1
009A EC00 F000 03197         CALL    _UDPIsPutReady
009E 6E00      03198         MOVWF   r0x07
00A0 CFF3 F000 03199         MOVFF   PRODL, r0x08
00A4 2AE1      03200         INCF    FSR1L, F
00A6 5000      03201         MOVF    r0x07, W
00A8 1000      03202         IORWF   r0x08, W
00AA E000      03203         BZ      _00528_DS_
               03204 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x07
               03205 ; ;Unrolled 8 X 8 multiplication
               03206 ; ;FIXME: the function does not support result==WREG
00AC 0000      03207         BANKSEL _activeUDPSocket
               03208 ;       .line   578; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];
00AE 5100      03209         MOVF    _activeUDPSocket, W, B
00B0 0D0E      03210         MULLW   0x0e
00B2 CFF3 F000 03211         MOVFF   PRODL, r0x07
00B6 6A00      03212         CLRF    r0x08
00B8 0E00      03213         MOVLW   LOW(_UDPSocketInfo)
00BA 2600      03214         ADDWF   r0x07, F
00BC 0E00      03215         MOVLW   HIGH(_UDPSocketInfo)
00BE 2200      03216         ADDWFC  r0x08, F
00C0 5000      03217         MOVF    r0x08, W
00C2 6E00      03218         MOVWF   r0x08
00C4 5000      03219         MOVF    r0x07, W
00C6 6E00      03220         MOVWF   r0x07
00C8 0E80      03221         MOVLW   0x80
00CA 6E00      03222         MOVWF   r0x09
               03223 ;       .line   579; MainDemo.c for(i=0; i<4; i++){
00CC 6A00      03224         CLRF    r0x0a
00CE 6A00      03225         CLRF    r0x0b
00D0 03226 _00531_DS_:
00D0 5000      03227         MOVF    r0x0b, W
00D2 0F80      03228         ADDLW   0x80
00D4 0F80      03229         ADDLW   0x80
00D6 E100      03230         BNZ     _00556_DS_
00D8 0E04      03231         MOVLW   0x04
00DA 5C00      03232         SUBWF   r0x0a, W
00DC 03233 _00556_DS_:
00DC E200      03234         BC      _00534_DS_
               03235 ;       .line   580; MainDemo.c info->remoteNode.IPAddr.v[i] = 255;
00DE 5000      03236         MOVF    r0x0a, W
00E0 2400      03237         ADDWF   r0x07, W
00E2 6E00      03238         MOVWF   r0x0c
00E4 5000      03239         MOVF    r0x0b, W
00E6 2000      03240         ADDWFC  r0x08, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E8 6E00      03241         MOVWF   r0x0d
00EA 6AE8      03242         CLRF    WREG
00EC BE00      03243         BTFSC   r0x0b, 7
00EE 68E8      03244         SETF    WREG
00F0 2000      03245         ADDWFC  r0x09, W
00F2 6E00      03246         MOVWF   r0x0e
00F4 0EFF      03247         MOVLW   0xff
00F6 6EE5      03248         MOVWF   POSTDEC1
00F8 C000 FFE9 03249         MOVFF   r0x0c, FSR0L
00FC C000 FFF3 03250         MOVFF   r0x0d, PRODL
0100 5000      03251         MOVF    r0x0e, W
0102 EC00 F000 03252         CALL    __gptrput1
               03253 ;       .line   579; MainDemo.c for(i=0; i<4; i++){
0106 2A00      03254         INCF    r0x0a, F
0108 B0D8      03255         BTFSC   STATUS, 0
010A 2A00      03256         INCF    r0x0b, F
010C D000      03257         BRA     _00531_DS_
010E 03258 _00534_DS_:
               03259 ;       .line   583; MainDemo.c info->remotePort = DHCP_CLIENT_PORT;
010E 5000      03260         MOVF    r0x07, W
0110 0F0A      03261         ADDLW   0x0a
0112 6E00      03262         MOVWF   r0x0a
0114 0E00      03263         MOVLW   0x00
0116 2000      03264         ADDWFC  r0x08, W
0118 6E00      03265         MOVWF   r0x0b
011A 0E00      03266         MOVLW   0x00
011C 2000      03267         ADDWFC  r0x09, W
011E 6E00      03268         MOVWF   r0x0c
0120 0E44      03269         MOVLW   0x44
0122 6EE5      03270         MOVWF   POSTDEC1
0124 0E00      03271         MOVLW   0x00
0126 6EF4      03272         MOVWF   PRODH
0128 C000 FFE9 03273         MOVFF   r0x0a, FSR0L
012C C000 FFF3 03274         MOVFF   r0x0b, PRODL
0130 5000      03275         MOVF    r0x0c, W
0132 EC00 F000 03276         CALL    __gptrput2
               03277 ;       .line   586; MainDemo.c for (i=0; i<sizeof(IP_ADDR); i++) {
0136 0E04      03278         MOVLW   0x04
0138 2600      03279         ADDWF   r0x07, F
013A 0E00      03280         MOVLW   0x00
013C 2200      03281         ADDWFC  r0x08, F
013E 0E00      03282         MOVLW   0x00
0140 2200      03283         ADDWFC  r0x09, F
0142 5000      03284         MOVF    r0x00, W
0144 0F1C      03285         ADDLW   0x1c
0146 6E00      03286         MOVWF   r0x0a
0148 0E00      03287         MOVLW   0x00
014A 2000      03288         ADDWFC  r0x01, W
014C 6E00      03289         MOVWF   r0x0b
014E 0E00      03290         MOVLW   0x00
0150 2000      03291         ADDWFC  r0x02, W
0152 6E00      03292         MOVWF   r0x0c
0154 6A00      03293         CLRF    r0x0d
0156 6A00      03294         CLRF    r0x0e
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0158 03295 _00535_DS_:
0158 5000      03296         MOVF    r0x0e, W
015A 0F80      03297         ADDLW   0x80
015C 0F80      03298         ADDLW   0x80
015E E100      03299         BNZ     _00557_DS_
0160 0E04      03300         MOVLW   0x04
0162 5C00      03301         SUBWF   r0x0d, W
0164 03302 _00557_DS_:
0164 E200      03303         BC      _00538_DS_
               03304 ;       .line   587; MainDemo.c info->remoteNode.MACAddr.v[i] = bootp_header->ClientMAC.v[i];
0166 5000      03305         MOVF    r0x0d, W
0168 2400      03306         ADDWF   r0x07, W
016A 6E00      03307         MOVWF   r0x0f
016C 5000      03308         MOVF    r0x0e, W
016E 2000      03309         ADDWFC  r0x08, W
0170 6E00      03310         MOVWF   r0x10
0172 6AE8      03311         CLRF    WREG
0174 BE00      03312         BTFSC   r0x0e, 7
0176 68E8      03313         SETF    WREG
0178 2000      03314         ADDWFC  r0x09, W
017A 6E00      03315         MOVWF   r0x11
017C 5000      03316         MOVF    r0x0d, W
017E 2400      03317         ADDWF   r0x0a, W
0180 6E00      03318         MOVWF   r0x12
0182 5000      03319         MOVF    r0x0e, W
0184 2000      03320         ADDWFC  r0x0b, W
0186 6E00      03321         MOVWF   r0x13
0188 6AE8      03322         CLRF    WREG
018A BE00      03323         BTFSC   r0x0e, 7
018C 68E8      03324         SETF    WREG
018E 2000      03325         ADDWFC  r0x0c, W
0190 6E00      03326         MOVWF   r0x14
0192 C000 FFE9 03327         MOVFF   r0x12, FSR0L
0196 C000 FFF3 03328         MOVFF   r0x13, PRODL
019A 5000      03329         MOVF    r0x14, W
019C EC00 F000 03330         CALL    __gptrget1
01A0 6E00      03331         MOVWF   r0x12
01A2 C000 FFE5 03332         MOVFF   r0x12, POSTDEC1
01A6 C000 FFE9 03333         MOVFF   r0x0f, FSR0L
01AA C000 FFF3 03334         MOVFF   r0x10, PRODL
01AE 5000      03335         MOVF    r0x11, W
01B0 EC00 F000 03336         CALL    __gptrput1
               03337 ;       .line   586; MainDemo.c for (i=0; i<sizeof(IP_ADDR); i++) {
01B4 2A00      03338         INCF    r0x0d, F
01B6 B0D8      03339         BTFSC   STATUS, 0
01B8 2A00      03340         INCF    r0x0e, F
01BA D000      03341         BRA     _00535_DS_
01BC 03342 _00538_DS_:
               03343 ;       .line   590; MainDemo.c build_bootp(bootp_header, my_socket);
01BC 5000      03344         MOVF    r0x05, W
01BE 6EE5      03345         MOVWF   POSTDEC1
01C0 5000      03346         MOVF    r0x04, W
01C2 6EE5      03347         MOVWF   POSTDEC1
01C4 5000      03348         MOVF    r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01C6 6EE5      03349         MOVWF   POSTDEC1
01C8 5000      03350         MOVF    r0x02, W
01CA 6EE5      03351         MOVWF   POSTDEC1
01CC 5000      03352         MOVF    r0x01, W
01CE 6EE5      03353         MOVWF   POSTDEC1
01D0 5000      03354         MOVF    r0x00, W
01D2 6EE5      03355         MOVWF   POSTDEC1
01D4 EC00 F000 03356         CALL    _build_bootp
01D8 0E06      03357         MOVLW   0x06
01DA 26E1      03358         ADDWF   FSR1L, F
               03359 ;       .line   591; MainDemo.c UDPPut(type);   
01DC 5000      03360         MOVF    r0x06, W
01DE 6EE5      03361         MOVWF   POSTDEC1
01E0 EC00 F000 03362         CALL    _UDPPut
01E4 2AE1      03363         INCF    FSR1L, F
               03364 ;       .line   594; MainDemo.c UDPPut(DHCP_SUBNET_MASK);
01E6 0E01      03365         MOVLW   0x01
01E8 6EE5      03366         MOVWF   POSTDEC1
01EA EC00 F000 03367         CALL    _UDPPut
01EE 2AE1      03368         INCF    FSR1L, F
               03369 ;       .line   595; MainDemo.c UDPPut(sizeof(IP_ADDR));
01F0 0E04      03370         MOVLW   0x04
01F2 6EE5      03371         MOVWF   POSTDEC1
01F4 EC00 F000 03372         CALL    _UDPPut
01F8 2AE1      03373         INCF    FSR1L, F
               03374 ;       .line   596; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyMask, sizeof(IP_ADDR));
01FA 0E00      03375         MOVLW   HIGH(_AppConfig + 4)
01FC 6E00      03376         MOVWF   r0x01
01FE 0E00      03377         MOVLW   LOW(_AppConfig + 4)
0200 6E00      03378         MOVWF   r0x00
0202 0E80      03379         MOVLW   0x80
0204 6E00      03380         MOVWF   r0x02
0206 0E00      03381         MOVLW   0x00
0208 6EE5      03382         MOVWF   POSTDEC1
020A 0E04      03383         MOVLW   0x04
020C 6EE5      03384         MOVWF   POSTDEC1
020E 5000      03385         MOVF    r0x02, W
0210 6EE5      03386         MOVWF   POSTDEC1
0212 5000      03387         MOVF    r0x01, W
0214 6EE5      03388         MOVWF   POSTDEC1
0216 5000      03389         MOVF    r0x00, W
0218 6EE5      03390         MOVWF   POSTDEC1
021A EC00 F000 03391         CALL    _UDPPutArray
021E 0E05      03392         MOVLW   0x05
0220 26E1      03393         ADDWF   FSR1L, F
               03394 ;       .line   599; MainDemo.c UDPPut(DHCP_BROADCAST);
0222 0E1C      03395         MOVLW   0x1c
0224 6EE5      03396         MOVWF   POSTDEC1
0226 EC00 F000 03397         CALL    _UDPPut
022A 2AE1      03398         INCF    FSR1L, F
               03399 ;       .line   600; MainDemo.c UDPPut(sizeof(IP_ADDR));
022C 0E04      03400         MOVLW   0x04
022E 6EE5      03401         MOVWF   POSTDEC1
0230 EC00 F000 03402         CALL    _UDPPut
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0234 2AE1      03403         INCF    FSR1L, F
               03404 ;       .line   601; MainDemo.c for(i=0; i<sizeof(IP_ADDR); i++){
0236 6A00      03405         CLRF    r0x00
0238 6A00      03406         CLRF    r0x01
023A 03407 _00539_DS_:
023A 5000      03408         MOVF    r0x01, W
023C 0F80      03409         ADDLW   0x80
023E 0F80      03410         ADDLW   0x80
0240 E100      03411         BNZ     _00558_DS_
0242 0E04      03412         MOVLW   0x04
0244 5C00      03413         SUBWF   r0x00, W
0246 03414 _00558_DS_:
0246 E200      03415         BC      _00542_DS_
               03416 ;       .line   602; MainDemo.c broadcast.v[i] = (AppConfig.MyIPAddr.v[i] & AppConfig.MyMask.v[i]) | ~AppConfig.MyMask.v[i];
0248 0E00      03417         MOVLW   LOW(_transfer_msg_to_client_broadcast_1_1)
024A 2400      03418         ADDWF   r0x00, W
024C 6E00      03419         MOVWF   r0x02
024E 0E00      03420         MOVLW   HIGH(_transfer_msg_to_client_broadcast_1_1)
0250 2000      03421         ADDWFC  r0x01, W
0252 6E00      03422         MOVWF   r0x03
0254 0E00      03423         MOVLW   LOW(_AppConfig)
0256 2400      03424         ADDWF   r0x00, W
0258 6E00      03425         MOVWF   r0x04
025A 0E00      03426         MOVLW   HIGH(_AppConfig)
025C 2000      03427         ADDWFC  r0x01, W
025E 6E00      03428         MOVWF   r0x05
0260 0E00      03429         MOVLW   LOW(_AppConfig + 4)
0262 2400      03430         ADDWF   r0x00, W
0264 6E00      03431         MOVWF   r0x06
0266 0E00      03432         MOVLW   HIGH(_AppConfig + 4)
0268 2000      03433         ADDWFC  r0x01, W
026A 6E00      03434         MOVWF   r0x07
026C C000 FFE9 03435         MOVFF   r0x04, FSR0L
0270 C000 FFEA 03436         MOVFF   r0x05, FSR0H
0274 CFEF F000 03437         MOVFF   INDF0, r0x04
0278 C000 FFE9 03438         MOVFF   r0x06, FSR0L
027C C000 FFEA 03439         MOVFF   r0x07, FSR0H
0280 CFEF F000 03440         MOVFF   INDF0, r0x06
0284 5000      03441         MOVF    r0x06, W
0286 1600      03442         ANDWF   r0x04, F
0288 1E00      03443         COMF    r0x06, F
028A 5000      03444         MOVF    r0x06, W
028C 1200      03445         IORWF   r0x04, F
028E C000 FFE9 03446         MOVFF   r0x02, FSR0L
0292 C000 FFEA 03447         MOVFF   r0x03, FSR0H
0296 C000 FFEF 03448         MOVFF   r0x04, INDF0
               03449 ;       .line   601; MainDemo.c for(i=0; i<sizeof(IP_ADDR); i++){
029A 2A00      03450         INCF    r0x00, F
029C B0D8      03451         BTFSC   STATUS, 0
029E 2A00      03452         INCF    r0x01, F
02A0 D000      03453         BRA     _00539_DS_
02A2 03454 _00542_DS_:
               03455 ;       .line   604; MainDemo.c UDPPutArray((BYTE*)&broadcast, sizeof(IP_ADDR));
02A2 0E00      03456         MOVLW   HIGH(_transfer_msg_to_client_broadcast_1_1)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02A4 6E00      03457         MOVWF   r0x01
02A6 0E00      03458         MOVLW   LOW(_transfer_msg_to_client_broadcast_1_1)
02A8 6E00      03459         MOVWF   r0x00
02AA 0E80      03460         MOVLW   0x80
02AC 6E00      03461         MOVWF   r0x02
02AE 0E00      03462         MOVLW   0x00
02B0 6EE5      03463         MOVWF   POSTDEC1
02B2 0E04      03464         MOVLW   0x04
02B4 6EE5      03465         MOVWF   POSTDEC1
02B6 5000      03466         MOVF    r0x02, W
02B8 6EE5      03467         MOVWF   POSTDEC1
02BA 5000      03468         MOVF    r0x01, W
02BC 6EE5      03469         MOVWF   POSTDEC1
02BE 5000      03470         MOVF    r0x00, W
02C0 6EE5      03471         MOVWF   POSTDEC1
02C2 EC00 F000 03472         CALL    _UDPPutArray
02C6 0E05      03473         MOVLW   0x05
02C8 26E1      03474         ADDWF   FSR1L, F
               03475 ;       .line   607; MainDemo.c UDPPut(DHCP_ROUTER);
02CA 0E03      03476         MOVLW   0x03
02CC 6EE5      03477         MOVWF   POSTDEC1
02CE EC00 F000 03478         CALL    _UDPPut
02D2 2AE1      03479         INCF    FSR1L, F
               03480 ;       .line   608; MainDemo.c UDPPut(sizeof(IP_ADDR));
02D4 0E04      03481         MOVLW   0x04
02D6 6EE5      03482         MOVWF   POSTDEC1
02D8 EC00 F000 03483         CALL    _UDPPut
02DC 2AE1      03484         INCF    FSR1L, F
               03485 ;       .line   609; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyGateway, sizeof(IP_ADDR));
02DE 0E00      03486         MOVLW   HIGH(_AppConfig + 8)
02E0 6E00      03487         MOVWF   r0x01
02E2 0E00      03488         MOVLW   LOW(_AppConfig + 8)
02E4 6E00      03489         MOVWF   r0x00
02E6 0E80      03490         MOVLW   0x80
02E8 6E00      03491         MOVWF   r0x02
02EA 0E00      03492         MOVLW   0x00
02EC 6EE5      03493         MOVWF   POSTDEC1
02EE 0E04      03494         MOVLW   0x04
02F0 6EE5      03495         MOVWF   POSTDEC1
02F2 5000      03496         MOVF    r0x02, W
02F4 6EE5      03497         MOVWF   POSTDEC1
02F6 5000      03498         MOVF    r0x01, W
02F8 6EE5      03499         MOVWF   POSTDEC1
02FA 5000      03500         MOVF    r0x00, W
02FC 6EE5      03501         MOVWF   POSTDEC1
02FE EC00 F000 03502         CALL    _UDPPutArray
0302 0E05      03503         MOVLW   0x05
0304 26E1      03504         ADDWF   FSR1L, F
               03505 ;       .line   611; MainDemo.c lease_time = RELAY_LEASE_TIME;
0306 0E2C      03506         MOVLW   0x2c
0308 0000      03507         BANKSEL _transfer_msg_to_client_lease_time_1_1
030A 6F00      03508         MOVWF   _transfer_msg_to_client_lease_time_1_1, B
030C 0E01      03509         MOVLW   0x01
030E 0000      03510         BANKSEL (_transfer_msg_to_client_lease_time_1_1 + 1)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0310 6F00      03511         MOVWF   (_transfer_msg_to_client_lease_time_1_1 + 1), B
               03512 ;       .line   612; MainDemo.c UDPPut(DHCP_IP_LEASE_TIME);
0312 0E33      03513         MOVLW   0x33
0314 6EE5      03514         MOVWF   POSTDEC1
0316 EC00 F000 03515         CALL    _UDPPut
031A 2AE1      03516         INCF    FSR1L, F
               03517 ;       .line   613; MainDemo.c UDPPut(4);
031C 0E04      03518         MOVLW   0x04
031E 6EE5      03519         MOVWF   POSTDEC1
0320 EC00 F000 03520         CALL    _UDPPut
0324 2AE1      03521         INCF    FSR1L, F
               03522 ;       .line   614; MainDemo.c UDPPut(0);
0326 0E00      03523         MOVLW   0x00
0328 6EE5      03524         MOVWF   POSTDEC1
032A EC00 F000 03525         CALL    _UDPPut
032E 2AE1      03526         INCF    FSR1L, F
               03527 ;       .line   615; MainDemo.c UDPPut(0);
0330 0E00      03528         MOVLW   0x00
0332 6EE5      03529         MOVWF   POSTDEC1
0334 EC00 F000 03530         CALL    _UDPPut
0338 2AE1      03531         INCF    FSR1L, F
               03532 ;       .line   616; MainDemo.c UDPPutArrayInvert((BYTE*)&lease_time, 2);
033A 0E00      03533         MOVLW   HIGH(_transfer_msg_to_client_lease_time_1_1)
033C 6E00      03534         MOVWF   r0x01
033E 0E00      03535         MOVLW   LOW(_transfer_msg_to_client_lease_time_1_1)
0340 6E00      03536         MOVWF   r0x00
0342 0E80      03537         MOVLW   0x80
0344 6E00      03538         MOVWF   r0x02
0346 0E00      03539         MOVLW   0x00
0348 6EE5      03540         MOVWF   POSTDEC1
034A 0E02      03541         MOVLW   0x02
034C 6EE5      03542         MOVWF   POSTDEC1
034E 5000      03543         MOVF    r0x02, W
0350 6EE5      03544         MOVWF   POSTDEC1
0352 5000      03545         MOVF    r0x01, W
0354 6EE5      03546         MOVWF   POSTDEC1
0356 5000      03547         MOVF    r0x00, W
0358 6EE5      03548         MOVWF   POSTDEC1
035A EC00 F000 03549         CALL    _UDPPutArrayInvert
035E 0E05      03550         MOVLW   0x05
0360 26E1      03551         ADDWF   FSR1L, F
               03552 ;       .line   619; MainDemo.c UDPPut(DHCP_SERVER_IDENTIFIER);
0362 0E36      03553         MOVLW   0x36
0364 6EE5      03554         MOVWF   POSTDEC1
0366 EC00 F000 03555         CALL    _UDPPut
036A 2AE1      03556         INCF    FSR1L, F
               03557 ;       .line   620; MainDemo.c UDPPut(sizeof(IP_ADDR));
036C 0E04      03558         MOVLW   0x04
036E 6EE5      03559         MOVWF   POSTDEC1
0370 EC00 F000 03560         CALL    _UDPPut
0374 2AE1      03561         INCF    FSR1L, F
               03562 ;       .line   621; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
0376 0E00      03563         MOVLW   HIGH(_AppConfig)
0378 6E00      03564         MOVWF   r0x01
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
037A 0E00      03565         MOVLW   LOW(_AppConfig)
037C 6E00      03566         MOVWF   r0x00
037E 0E80      03567         MOVLW   0x80
0380 6E00      03568         MOVWF   r0x02
0382 0E00      03569         MOVLW   0x00
0384 6EE5      03570         MOVWF   POSTDEC1
0386 0E04      03571         MOVLW   0x04
0388 6EE5      03572         MOVWF   POSTDEC1
038A 5000      03573         MOVF    r0x02, W
038C 6EE5      03574         MOVWF   POSTDEC1
038E 5000      03575         MOVF    r0x01, W
0390 6EE5      03576         MOVWF   POSTDEC1
0392 5000      03577         MOVF    r0x00, W
0394 6EE5      03578         MOVWF   POSTDEC1
0396 EC00 F000 03579         CALL    _UDPPutArray
039A 0E05      03580         MOVLW   0x05
039C 26E1      03581         ADDWF   FSR1L, F
               03582 ;       .line   622; MainDemo.c end_dhcp();
039E EC00 F000 03583         CALL    _end_dhcp
               03584 ;       .line   623; MainDemo.c UDPFlush();
03A2 EC00 F000 03585         CALL    _UDPFlush
03A6 CFE4 F000 03586         MOVFF   PREINC1, r0x14
03AA CFE4 F000 03587         MOVFF   PREINC1, r0x13
03AE CFE4 F000 03588         MOVFF   PREINC1, r0x12
03B2 CFE4 F000 03589         MOVFF   PREINC1, r0x11
03B6 CFE4 F000 03590         MOVFF   PREINC1, r0x10
03BA CFE4 F000 03591         MOVFF   PREINC1, r0x0f
03BE CFE4 F000 03592         MOVFF   PREINC1, r0x0e
03C2 CFE4 F000 03593         MOVFF   PREINC1, r0x0d
03C6 CFE4 F000 03594         MOVFF   PREINC1, r0x0c
03CA CFE4 F000 03595         MOVFF   PREINC1, r0x0b
03CE CFE4 F000 03596         MOVFF   PREINC1, r0x0a
03D2 CFE4 F000 03597         MOVFF   PREINC1, r0x09
03D6 CFE4 F000 03598         MOVFF   PREINC1, r0x08
03DA CFE4 F000 03599         MOVFF   PREINC1, r0x07
03DE CFE4 F000 03600         MOVFF   PREINC1, r0x06
03E2 CFE4 F000 03601         MOVFF   PREINC1, r0x05
03E6 CFE4 F000 03602         MOVFF   PREINC1, r0x04
03EA CFE4 F000 03603         MOVFF   PREINC1, r0x03
03EE CFE4 F000 03604         MOVFF   PREINC1, r0x02
03F2 CFE4 F000 03605         MOVFF   PREINC1, r0x01
03F6 CFE4 F000 03606         MOVFF   PREINC1, r0x00
03FA CFE4 FFD9 03607         MOVFF   PREINC1, FSR2L
03FE 0012      03608         RETURN  
               03609 
               03610 ; ; Starting pCode block
               03611 S_MainDemo__UDPPutArrayInvert   code
0000 03612 _UDPPutArrayInvert:
               03613 ;       .line   562; MainDemo.c void UDPPutArrayInvert(BYTE *val, int len)
0000 CFD9 FFE5 03614         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03615         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03616         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03617         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03618         MOVFF   r0x02, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014 C000 FFE5 03619         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03620         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03621         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03622         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03623         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03624         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03625         MOVFF   r0x09, POSTDEC1
0030 0E02      03626         MOVLW   0x02
0032 CFDB F000 03627         MOVFF   PLUSW2, r0x00
0036 0E03      03628         MOVLW   0x03
0038 CFDB F000 03629         MOVFF   PLUSW2, r0x01
003C 0E04      03630         MOVLW   0x04
003E CFDB F000 03631         MOVFF   PLUSW2, r0x02
0042 0E05      03632         MOVLW   0x05
0044 CFDB F000 03633         MOVFF   PLUSW2, r0x03
0048 0E06      03634         MOVLW   0x06
004A CFDB F000 03635         MOVFF   PLUSW2, r0x04
               03636 ;       .line   565; MainDemo.c for(i = 0; i < len; i++)
004E 6A00      03637         CLRF    r0x05
0050 6A00      03638         CLRF    r0x06
0052 03639 _00514_DS_:
0052 5000      03640         MOVF    r0x06, W
0054 0F80      03641         ADDLW   0x80
0056 6EF3      03642         MOVWF   PRODL
0058 5000      03643         MOVF    r0x04, W
005A 0F80      03644         ADDLW   0x80
005C 5CF3      03645         SUBWF   PRODL, W
005E E100      03646         BNZ     _00523_DS_
0060 5000      03647         MOVF    r0x03, W
0062 5C00      03648         SUBWF   r0x05, W
0064 03649 _00523_DS_:
0064 E200      03650         BC      _00518_DS_
               03651 ;       .line   566; MainDemo.c UDPPut(val[len-i-1]);
0066 5000      03652         MOVF    r0x05, W
0068 5C00      03653         SUBWF   r0x03, W
006A 6E00      03654         MOVWF   r0x07
006C 5000      03655         MOVF    r0x06, W
006E 5800      03656         SUBWFB  r0x04, W
0070 6E00      03657         MOVWF   r0x08
0072 0EFF      03658         MOVLW   0xff
0074 2600      03659         ADDWF   r0x07, F
0076 A0D8      03660         BTFSS   STATUS, 0
0078 0600      03661         DECF    r0x08, F
007A 6A00      03662         CLRF    r0x09
007C BE00      03663         BTFSC   r0x08, 7
007E 6800      03664         SETF    r0x09
0080 5000      03665         MOVF    r0x00, W
0082 2600      03666         ADDWF   r0x07, F
0084 5000      03667         MOVF    r0x01, W
0086 2200      03668         ADDWFC  r0x08, F
0088 5000      03669         MOVF    r0x02, W
008A 2200      03670         ADDWFC  r0x09, F
008C C000 FFE9 03671         MOVFF   r0x07, FSR0L
0090 C000 FFF3 03672         MOVFF   r0x08, PRODL
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0094 5000      03673         MOVF    r0x09, W
0096 EC00 F000 03674         CALL    __gptrget1
009A 6E00      03675         MOVWF   r0x07
009C 5000      03676         MOVF    r0x07, W
009E 6EE5      03677         MOVWF   POSTDEC1
00A0 EC00 F000 03678         CALL    _UDPPut
00A4 2AE1      03679         INCF    FSR1L, F
               03680 ;       .line   565; MainDemo.c for(i = 0; i < len; i++)
00A6 2A00      03681         INCF    r0x05, F
00A8 B0D8      03682         BTFSC   STATUS, 0
00AA 2A00      03683         INCF    r0x06, F
00AC D000      03684         BRA     _00514_DS_
00AE 03685 _00518_DS_:
00AE CFE4 F000 03686         MOVFF   PREINC1, r0x09
00B2 CFE4 F000 03687         MOVFF   PREINC1, r0x08
00B6 CFE4 F000 03688         MOVFF   PREINC1, r0x07
00BA CFE4 F000 03689         MOVFF   PREINC1, r0x06
00BE CFE4 F000 03690         MOVFF   PREINC1, r0x05
00C2 CFE4 F000 03691         MOVFF   PREINC1, r0x04
00C6 CFE4 F000 03692         MOVFF   PREINC1, r0x03
00CA CFE4 F000 03693         MOVFF   PREINC1, r0x02
00CE CFE4 F000 03694         MOVFF   PREINC1, r0x01
00D2 CFE4 F000 03695         MOVFF   PREINC1, r0x00
00D6 CFE4 FFD9 03696         MOVFF   PREINC1, FSR2L
00DA 0012      03697         RETURN  
               03698 
               03699 ; ; Starting pCode block
               03700 S_MainDemo__forgeBootpHeaderAck code
0000 03701 _forgeBootpHeaderAck:
               03702 ;       .line   556; MainDemo.c void forgeBootpHeaderAck(BOOTP_HEADER *bootp_header, DWORD transactionId, IP_ADDR *clientIP, IP_ADDR *yourIP, MAC_ADDR  *clientMAC)
0000 CFD9 FFE5 03703         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03704         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03705         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03706         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03707         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03708         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03709         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03710         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03711         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03712         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03713         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03714         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 03715         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 03716         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 03717         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 03718         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 03719         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 03720         MOVFF   r0x0f, POSTDEC1
0048 0E02      03721         MOVLW   0x02
004A CFDB F000 03722         MOVFF   PLUSW2, r0x00
004E 0E03      03723         MOVLW   0x03
0050 CFDB F000 03724         MOVFF   PLUSW2, r0x01
0054 0E04      03725         MOVLW   0x04
0056 CFDB F000 03726         MOVFF   PLUSW2, r0x02
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
005A 0E05      03727         MOVLW   0x05
005C CFDB F000 03728         MOVFF   PLUSW2, r0x03
0060 0E06      03729         MOVLW   0x06
0062 CFDB F000 03730         MOVFF   PLUSW2, r0x04
0066 0E07      03731         MOVLW   0x07
0068 CFDB F000 03732         MOVFF   PLUSW2, r0x05
006C 0E08      03733         MOVLW   0x08
006E CFDB F000 03734         MOVFF   PLUSW2, r0x06
0072 0E09      03735         MOVLW   0x09
0074 CFDB F000 03736         MOVFF   PLUSW2, r0x07
0078 0E0A      03737         MOVLW   0x0a
007A CFDB F000 03738         MOVFF   PLUSW2, r0x08
007E 0E0B      03739         MOVLW   0x0b
0080 CFDB F000 03740         MOVFF   PLUSW2, r0x09
0084 0E0C      03741         MOVLW   0x0c
0086 CFDB F000 03742         MOVFF   PLUSW2, r0x0a
008A 0E0D      03743         MOVLW   0x0d
008C CFDB F000 03744         MOVFF   PLUSW2, r0x0b
0090 0E0E      03745         MOVLW   0x0e
0092 CFDB F000 03746         MOVFF   PLUSW2, r0x0c
0096 0E0F      03747         MOVLW   0x0f
0098 CFDB F000 03748         MOVFF   PLUSW2, r0x0d
009C 0E10      03749         MOVLW   0x10
009E CFDB F000 03750         MOVFF   PLUSW2, r0x0e
00A2 0E11      03751         MOVLW   0x11
00A4 CFDB F000 03752         MOVFF   PLUSW2, r0x0f
               03753 ;       .line   558; MainDemo.c bootp_header->MessageType = BOOT_REPLY;
00A8 0E02      03754         MOVLW   0x02
00AA 6EE5      03755         MOVWF   POSTDEC1
00AC C000 FFE9 03756         MOVFF   r0x00, FSR0L
00B0 C000 FFF3 03757         MOVFF   r0x01, PRODL
00B4 5000      03758         MOVF    r0x02, W
00B6 EC00 F000 03759         CALL    __gptrput1
               03760 ;       .line   559; MainDemo.c forgeBootpHeader(bootp_header, transactionId, clientIP, yourIP, clientMAC);
00BA 5000      03761         MOVF    r0x0f, W
00BC 6EE5      03762         MOVWF   POSTDEC1
00BE 5000      03763         MOVF    r0x0e, W
00C0 6EE5      03764         MOVWF   POSTDEC1
00C2 5000      03765         MOVF    r0x0d, W
00C4 6EE5      03766         MOVWF   POSTDEC1
00C6 5000      03767         MOVF    r0x0c, W
00C8 6EE5      03768         MOVWF   POSTDEC1
00CA 5000      03769         MOVF    r0x0b, W
00CC 6EE5      03770         MOVWF   POSTDEC1
00CE 5000      03771         MOVF    r0x0a, W
00D0 6EE5      03772         MOVWF   POSTDEC1
00D2 5000      03773         MOVF    r0x09, W
00D4 6EE5      03774         MOVWF   POSTDEC1
00D6 5000      03775         MOVF    r0x08, W
00D8 6EE5      03776         MOVWF   POSTDEC1
00DA 5000      03777         MOVF    r0x07, W
00DC 6EE5      03778         MOVWF   POSTDEC1
00DE 5000      03779         MOVF    r0x06, W
00E0 6EE5      03780         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E2 5000      03781         MOVF    r0x05, W
00E4 6EE5      03782         MOVWF   POSTDEC1
00E6 5000      03783         MOVF    r0x04, W
00E8 6EE5      03784         MOVWF   POSTDEC1
00EA 5000      03785         MOVF    r0x03, W
00EC 6EE5      03786         MOVWF   POSTDEC1
00EE 5000      03787         MOVF    r0x02, W
00F0 6EE5      03788         MOVWF   POSTDEC1
00F2 5000      03789         MOVF    r0x01, W
00F4 6EE5      03790         MOVWF   POSTDEC1
00F6 5000      03791         MOVF    r0x00, W
00F8 6EE5      03792         MOVWF   POSTDEC1
00FA EC00 F000 03793         CALL    _forgeBootpHeader
00FE 0E10      03794         MOVLW   0x10
0100 26E1      03795         ADDWF   FSR1L, F
0102 CFE4 F000 03796         MOVFF   PREINC1, r0x0f
0106 CFE4 F000 03797         MOVFF   PREINC1, r0x0e
010A CFE4 F000 03798         MOVFF   PREINC1, r0x0d
010E CFE4 F000 03799         MOVFF   PREINC1, r0x0c
0112 CFE4 F000 03800         MOVFF   PREINC1, r0x0b
0116 CFE4 F000 03801         MOVFF   PREINC1, r0x0a
011A CFE4 F000 03802         MOVFF   PREINC1, r0x09
011E CFE4 F000 03803         MOVFF   PREINC1, r0x08
0122 CFE4 F000 03804         MOVFF   PREINC1, r0x07
0126 CFE4 F000 03805         MOVFF   PREINC1, r0x06
012A CFE4 F000 03806         MOVFF   PREINC1, r0x05
012E CFE4 F000 03807         MOVFF   PREINC1, r0x04
0132 CFE4 F000 03808         MOVFF   PREINC1, r0x03
0136 CFE4 F000 03809         MOVFF   PREINC1, r0x02
013A CFE4 F000 03810         MOVFF   PREINC1, r0x01
013E CFE4 F000 03811         MOVFF   PREINC1, r0x00
0142 CFE4 FFD9 03812         MOVFF   PREINC1, FSR2L
0146 0012      03813         RETURN  
               03814 
               03815 ; ; Starting pCode block
               03816 S_MainDemo__forgeBootpHeaderRequest     code
0000 03817 _forgeBootpHeaderRequest:
               03818 ;       .line   550; MainDemo.c void forgeBootpHeaderRequest(BOOTP_HEADER *bootp_header, DWORD transactionId, IP_ADDR *clientIP, IP_ADDR *yourIP, MAC_ADDR      *clientMAC)
0000 CFD9 FFE5 03819         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03820         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03821         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03822         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03823         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03824         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03825         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03826         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03827         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03828         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03829         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03830         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 03831         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 03832         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 03833         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 03834         MOVFF   r0x0d, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0040 C000 FFE5 03835         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 03836         MOVFF   r0x0f, POSTDEC1
0048 0E02      03837         MOVLW   0x02
004A CFDB F000 03838         MOVFF   PLUSW2, r0x00
004E 0E03      03839         MOVLW   0x03
0050 CFDB F000 03840         MOVFF   PLUSW2, r0x01
0054 0E04      03841         MOVLW   0x04
0056 CFDB F000 03842         MOVFF   PLUSW2, r0x02
005A 0E05      03843         MOVLW   0x05
005C CFDB F000 03844         MOVFF   PLUSW2, r0x03
0060 0E06      03845         MOVLW   0x06
0062 CFDB F000 03846         MOVFF   PLUSW2, r0x04
0066 0E07      03847         MOVLW   0x07
0068 CFDB F000 03848         MOVFF   PLUSW2, r0x05
006C 0E08      03849         MOVLW   0x08
006E CFDB F000 03850         MOVFF   PLUSW2, r0x06
0072 0E09      03851         MOVLW   0x09
0074 CFDB F000 03852         MOVFF   PLUSW2, r0x07
0078 0E0A      03853         MOVLW   0x0a
007A CFDB F000 03854         MOVFF   PLUSW2, r0x08
007E 0E0B      03855         MOVLW   0x0b
0080 CFDB F000 03856         MOVFF   PLUSW2, r0x09
0084 0E0C      03857         MOVLW   0x0c
0086 CFDB F000 03858         MOVFF   PLUSW2, r0x0a
008A 0E0D      03859         MOVLW   0x0d
008C CFDB F000 03860         MOVFF   PLUSW2, r0x0b
0090 0E0E      03861         MOVLW   0x0e
0092 CFDB F000 03862         MOVFF   PLUSW2, r0x0c
0096 0E0F      03863         MOVLW   0x0f
0098 CFDB F000 03864         MOVFF   PLUSW2, r0x0d
009C 0E10      03865         MOVLW   0x10
009E CFDB F000 03866         MOVFF   PLUSW2, r0x0e
00A2 0E11      03867         MOVLW   0x11
00A4 CFDB F000 03868         MOVFF   PLUSW2, r0x0f
               03869 ;       .line   552; MainDemo.c bootp_header->MessageType = BOOT_REQUEST;
00A8 0E01      03870         MOVLW   0x01
00AA 6EE5      03871         MOVWF   POSTDEC1
00AC C000 FFE9 03872         MOVFF   r0x00, FSR0L
00B0 C000 FFF3 03873         MOVFF   r0x01, PRODL
00B4 5000      03874         MOVF    r0x02, W
00B6 EC00 F000 03875         CALL    __gptrput1
               03876 ;       .line   553; MainDemo.c forgeBootpHeader(bootp_header, transactionId, clientIP, yourIP, clientMAC);
00BA 5000      03877         MOVF    r0x0f, W
00BC 6EE5      03878         MOVWF   POSTDEC1
00BE 5000      03879         MOVF    r0x0e, W
00C0 6EE5      03880         MOVWF   POSTDEC1
00C2 5000      03881         MOVF    r0x0d, W
00C4 6EE5      03882         MOVWF   POSTDEC1
00C6 5000      03883         MOVF    r0x0c, W
00C8 6EE5      03884         MOVWF   POSTDEC1
00CA 5000      03885         MOVF    r0x0b, W
00CC 6EE5      03886         MOVWF   POSTDEC1
00CE 5000      03887         MOVF    r0x0a, W
00D0 6EE5      03888         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D2 5000      03889         MOVF    r0x09, W
00D4 6EE5      03890         MOVWF   POSTDEC1
00D6 5000      03891         MOVF    r0x08, W
00D8 6EE5      03892         MOVWF   POSTDEC1
00DA 5000      03893         MOVF    r0x07, W
00DC 6EE5      03894         MOVWF   POSTDEC1
00DE 5000      03895         MOVF    r0x06, W
00E0 6EE5      03896         MOVWF   POSTDEC1
00E2 5000      03897         MOVF    r0x05, W
00E4 6EE5      03898         MOVWF   POSTDEC1
00E6 5000      03899         MOVF    r0x04, W
00E8 6EE5      03900         MOVWF   POSTDEC1
00EA 5000      03901         MOVF    r0x03, W
00EC 6EE5      03902         MOVWF   POSTDEC1
00EE 5000      03903         MOVF    r0x02, W
00F0 6EE5      03904         MOVWF   POSTDEC1
00F2 5000      03905         MOVF    r0x01, W
00F4 6EE5      03906         MOVWF   POSTDEC1
00F6 5000      03907         MOVF    r0x00, W
00F8 6EE5      03908         MOVWF   POSTDEC1
00FA EC00 F000 03909         CALL    _forgeBootpHeader
00FE 0E10      03910         MOVLW   0x10
0100 26E1      03911         ADDWF   FSR1L, F
0102 CFE4 F000 03912         MOVFF   PREINC1, r0x0f
0106 CFE4 F000 03913         MOVFF   PREINC1, r0x0e
010A CFE4 F000 03914         MOVFF   PREINC1, r0x0d
010E CFE4 F000 03915         MOVFF   PREINC1, r0x0c
0112 CFE4 F000 03916         MOVFF   PREINC1, r0x0b
0116 CFE4 F000 03917         MOVFF   PREINC1, r0x0a
011A CFE4 F000 03918         MOVFF   PREINC1, r0x09
011E CFE4 F000 03919         MOVFF   PREINC1, r0x08
0122 CFE4 F000 03920         MOVFF   PREINC1, r0x07
0126 CFE4 F000 03921         MOVFF   PREINC1, r0x06
012A CFE4 F000 03922         MOVFF   PREINC1, r0x05
012E CFE4 F000 03923         MOVFF   PREINC1, r0x04
0132 CFE4 F000 03924         MOVFF   PREINC1, r0x03
0136 CFE4 F000 03925         MOVFF   PREINC1, r0x02
013A CFE4 F000 03926         MOVFF   PREINC1, r0x01
013E CFE4 F000 03927         MOVFF   PREINC1, r0x00
0142 CFE4 FFD9 03928         MOVFF   PREINC1, FSR2L
0146 0012      03929         RETURN  
               03930 
               03931 ; ; Starting pCode block
               03932 S_MainDemo__forgeBootpHeader    code
0000 03933 _forgeBootpHeader:
               03934 ;       .line   535; MainDemo.c void forgeBootpHeader(BOOTP_HEADER *bootp_header, DWORD transactionId, IP_ADDR *clientIP, IP_ADDR *yourIP, MAC_ADDR     *clientMAC){
0000 CFD9 FFE5 03935         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03936         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03937         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03938         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03939         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03940         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03941         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03942         MOVFF   r0x05, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 C000 FFE5 03943         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03944         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03945         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03946         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 03947         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 03948         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 03949         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 03950         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 03951         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 03952         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 03953         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 03954         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 03955         MOVFF   r0x12, POSTDEC1
0054 0E02      03956         MOVLW   0x02
0056 CFDB F000 03957         MOVFF   PLUSW2, r0x00
005A 0E03      03958         MOVLW   0x03
005C CFDB F000 03959         MOVFF   PLUSW2, r0x01
0060 0E04      03960         MOVLW   0x04
0062 CFDB F000 03961         MOVFF   PLUSW2, r0x02
0066 0E05      03962         MOVLW   0x05
0068 CFDB F000 03963         MOVFF   PLUSW2, r0x03
006C 0E06      03964         MOVLW   0x06
006E CFDB F000 03965         MOVFF   PLUSW2, r0x04
0072 0E07      03966         MOVLW   0x07
0074 CFDB F000 03967         MOVFF   PLUSW2, r0x05
0078 0E08      03968         MOVLW   0x08
007A CFDB F000 03969         MOVFF   PLUSW2, r0x06
007E 0E09      03970         MOVLW   0x09
0080 CFDB F000 03971         MOVFF   PLUSW2, r0x07
0084 0E0A      03972         MOVLW   0x0a
0086 CFDB F000 03973         MOVFF   PLUSW2, r0x08
008A 0E0B      03974         MOVLW   0x0b
008C CFDB F000 03975         MOVFF   PLUSW2, r0x09
0090 0E0C      03976         MOVLW   0x0c
0092 CFDB F000 03977         MOVFF   PLUSW2, r0x0a
0096 0E0D      03978         MOVLW   0x0d
0098 CFDB F000 03979         MOVFF   PLUSW2, r0x0b
009C 0E0E      03980         MOVLW   0x0e
009E CFDB F000 03981         MOVFF   PLUSW2, r0x0c
00A2 0E0F      03982         MOVLW   0x0f
00A4 CFDB F000 03983         MOVFF   PLUSW2, r0x0d
00A8 0E10      03984         MOVLW   0x10
00AA CFDB F000 03985         MOVFF   PLUSW2, r0x0e
00AE 0E11      03986         MOVLW   0x11
00B0 CFDB F000 03987         MOVFF   PLUSW2, r0x0f
               03988 ;       .line   537; MainDemo.c bootp_header->HardwareType = BOOT_HW_TYPE;
00B4 5000      03989         MOVF    r0x00, W
00B6 0F01      03990         ADDLW   0x01
00B8 6E00      03991         MOVWF   r0x10
00BA 0E00      03992         MOVLW   0x00
00BC 2000      03993         ADDWFC  r0x01, W
00BE 6E00      03994         MOVWF   r0x11
00C0 0E00      03995         MOVLW   0x00
00C2 2000      03996         ADDWFC  r0x02, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C4 6E00      03997         MOVWF   r0x12
00C6 0E01      03998         MOVLW   0x01
00C8 6EE5      03999         MOVWF   POSTDEC1
00CA C000 FFE9 04000         MOVFF   r0x10, FSR0L
00CE C000 FFF3 04001         MOVFF   r0x11, PRODL
00D2 5000      04002         MOVF    r0x12, W
00D4 EC00 F000 04003         CALL    __gptrput1
               04004 ;       .line   538; MainDemo.c bootp_header->HardwareLen = BOOT_LEN_OF_HW_TYPE;
00D8 5000      04005         MOVF    r0x00, W
00DA 0F02      04006         ADDLW   0x02
00DC 6E00      04007         MOVWF   r0x10
00DE 0E00      04008         MOVLW   0x00
00E0 2000      04009         ADDWFC  r0x01, W
00E2 6E00      04010         MOVWF   r0x11
00E4 0E00      04011         MOVLW   0x00
00E6 2000      04012         ADDWFC  r0x02, W
00E8 6E00      04013         MOVWF   r0x12
00EA 0E06      04014         MOVLW   0x06
00EC 6EE5      04015         MOVWF   POSTDEC1
00EE C000 FFE9 04016         MOVFF   r0x10, FSR0L
00F2 C000 FFF3 04017         MOVFF   r0x11, PRODL
00F6 5000      04018         MOVF    r0x12, W
00F8 EC00 F000 04019         CALL    __gptrput1
               04020 ;       .line   539; MainDemo.c bootp_header->Hops = 1;
00FC 5000      04021         MOVF    r0x00, W
00FE 0F03      04022         ADDLW   0x03
0100 6E00      04023         MOVWF   r0x10
0102 0E00      04024         MOVLW   0x00
0104 2000      04025         ADDWFC  r0x01, W
0106 6E00      04026         MOVWF   r0x11
0108 0E00      04027         MOVLW   0x00
010A 2000      04028         ADDWFC  r0x02, W
010C 6E00      04029         MOVWF   r0x12
010E 0E01      04030         MOVLW   0x01
0110 6EE5      04031         MOVWF   POSTDEC1
0112 C000 FFE9 04032         MOVFF   r0x10, FSR0L
0116 C000 FFF3 04033         MOVFF   r0x11, PRODL
011A 5000      04034         MOVF    r0x12, W
011C EC00 F000 04035         CALL    __gptrput1
               04036 ;       .line   540; MainDemo.c bootp_header->TransactionID = transactionId;
0120 5000      04037         MOVF    r0x00, W
0122 0F04      04038         ADDLW   0x04
0124 6E00      04039         MOVWF   r0x10
0126 0E00      04040         MOVLW   0x00
0128 2000      04041         ADDWFC  r0x01, W
012A 6E00      04042         MOVWF   r0x11
012C 0E00      04043         MOVLW   0x00
012E 2000      04044         ADDWFC  r0x02, W
0130 6E00      04045         MOVWF   r0x12
0132 C000 FFE5 04046         MOVFF   r0x03, POSTDEC1
0136 C000 FFF4 04047         MOVFF   r0x04, PRODH
013A C000 FFF6 04048         MOVFF   r0x05, TBLPTRL
013E C000 FFF7 04049         MOVFF   r0x06, TBLPTRH
0142 C000 FFE9 04050         MOVFF   r0x10, FSR0L
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0146 C000 FFF3 04051         MOVFF   r0x11, PRODL
014A 5000      04052         MOVF    r0x12, W
014C EC00 F000 04053         CALL    __gptrput4
               04054 ;       .line   541; MainDemo.c bootp_header->SecondsElapsed = 0;
0150 5000      04055         MOVF    r0x00, W
0152 0F08      04056         ADDLW   0x08
0154 6E00      04057         MOVWF   r0x03
0156 0E00      04058         MOVLW   0x00
0158 2000      04059         ADDWFC  r0x01, W
015A 6E00      04060         MOVWF   r0x04
015C 0E00      04061         MOVLW   0x00
015E 2000      04062         ADDWFC  r0x02, W
0160 6E00      04063         MOVWF   r0x05
0162 0E00      04064         MOVLW   0x00
0164 6EE5      04065         MOVWF   POSTDEC1
0166 0E00      04066         MOVLW   0x00
0168 6EF4      04067         MOVWF   PRODH
016A C000 FFE9 04068         MOVFF   r0x03, FSR0L
016E C000 FFF3 04069         MOVFF   r0x04, PRODL
0172 5000      04070         MOVF    r0x05, W
0174 EC00 F000 04071         CALL    __gptrput2
               04072 ;       .line   542; MainDemo.c bootp_header->BootpFlags = 0;
0178 5000      04073         MOVF    r0x00, W
017A 0F0A      04074         ADDLW   0x0a
017C 6E00      04075         MOVWF   r0x03
017E 0E00      04076         MOVLW   0x00
0180 2000      04077         ADDWFC  r0x01, W
0182 6E00      04078         MOVWF   r0x04
0184 0E00      04079         MOVLW   0x00
0186 2000      04080         ADDWFC  r0x02, W
0188 6E00      04081         MOVWF   r0x05
018A 0E00      04082         MOVLW   0x00
018C 6EE5      04083         MOVWF   POSTDEC1
018E 0E00      04084         MOVLW   0x00
0190 6EF4      04085         MOVWF   PRODH
0192 C000 FFE9 04086         MOVFF   r0x03, FSR0L
0196 C000 FFF3 04087         MOVFF   r0x04, PRODL
019A 5000      04088         MOVF    r0x05, W
019C EC00 F000 04089         CALL    __gptrput2
               04090 ;       .line   543; MainDemo.c memcpy(&bootp_header->ClientIP, clientIP, sizeof(IP_ADDR));
01A0 5000      04091         MOVF    r0x00, W
01A2 0F0C      04092         ADDLW   0x0c
01A4 6E00      04093         MOVWF   r0x03
01A6 0E00      04094         MOVLW   0x00
01A8 2000      04095         ADDWFC  r0x01, W
01AA 6E00      04096         MOVWF   r0x04
01AC 0E00      04097         MOVLW   0x00
01AE 2000      04098         ADDWFC  r0x02, W
01B0 6E00      04099         MOVWF   r0x05
01B2 0E00      04100         MOVLW   0x00
01B4 6EE5      04101         MOVWF   POSTDEC1
01B6 0E04      04102         MOVLW   0x04
01B8 6EE5      04103         MOVWF   POSTDEC1
01BA 5000      04104         MOVF    r0x09, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01BC 6EE5      04105         MOVWF   POSTDEC1
01BE 5000      04106         MOVF    r0x08, W
01C0 6EE5      04107         MOVWF   POSTDEC1
01C2 5000      04108         MOVF    r0x07, W
01C4 6EE5      04109         MOVWF   POSTDEC1
01C6 5000      04110         MOVF    r0x05, W
01C8 6EE5      04111         MOVWF   POSTDEC1
01CA 5000      04112         MOVF    r0x04, W
01CC 6EE5      04113         MOVWF   POSTDEC1
01CE 5000      04114         MOVF    r0x03, W
01D0 6EE5      04115         MOVWF   POSTDEC1
01D2 EC00 F000 04116         CALL    _memcpy
01D6 0E08      04117         MOVLW   0x08
01D8 26E1      04118         ADDWF   FSR1L, F
               04119 ;       .line   544; MainDemo.c memcpy(&bootp_header->YourIP, yourIP, sizeof(IP_ADDR));
01DA 5000      04120         MOVF    r0x00, W
01DC 0F10      04121         ADDLW   0x10
01DE 6E00      04122         MOVWF   r0x03
01E0 0E00      04123         MOVLW   0x00
01E2 2000      04124         ADDWFC  r0x01, W
01E4 6E00      04125         MOVWF   r0x04
01E6 0E00      04126         MOVLW   0x00
01E8 2000      04127         ADDWFC  r0x02, W
01EA 6E00      04128         MOVWF   r0x05
01EC 0E00      04129         MOVLW   0x00
01EE 6EE5      04130         MOVWF   POSTDEC1
01F0 0E04      04131         MOVLW   0x04
01F2 6EE5      04132         MOVWF   POSTDEC1
01F4 5000      04133         MOVF    r0x0c, W
01F6 6EE5      04134         MOVWF   POSTDEC1
01F8 5000      04135         MOVF    r0x0b, W
01FA 6EE5      04136         MOVWF   POSTDEC1
01FC 5000      04137         MOVF    r0x0a, W
01FE 6EE5      04138         MOVWF   POSTDEC1
0200 5000      04139         MOVF    r0x05, W
0202 6EE5      04140         MOVWF   POSTDEC1
0204 5000      04141         MOVF    r0x04, W
0206 6EE5      04142         MOVWF   POSTDEC1
0208 5000      04143         MOVF    r0x03, W
020A 6EE5      04144         MOVWF   POSTDEC1
020C EC00 F000 04145         CALL    _memcpy
0210 0E08      04146         MOVLW   0x08
0212 26E1      04147         ADDWF   FSR1L, F
               04148 ;       .line   545; MainDemo.c memset((void*)&bootp_header->NextServerIP, 0, sizeof(IP_ADDR));
0214 5000      04149         MOVF    r0x00, W
0216 0F14      04150         ADDLW   0x14
0218 6E00      04151         MOVWF   r0x03
021A 0E00      04152         MOVLW   0x00
021C 2000      04153         ADDWFC  r0x01, W
021E 6E00      04154         MOVWF   r0x04
0220 0E00      04155         MOVLW   0x00
0222 2000      04156         ADDWFC  r0x02, W
0224 6E00      04157         MOVWF   r0x05
0226 0E00      04158         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0228 6EE5      04159         MOVWF   POSTDEC1
022A 0E04      04160         MOVLW   0x04
022C 6EE5      04161         MOVWF   POSTDEC1
022E 0E00      04162         MOVLW   0x00
0230 6EE5      04163         MOVWF   POSTDEC1
0232 5000      04164         MOVF    r0x04, W
0234 6EE5      04165         MOVWF   POSTDEC1
0236 5000      04166         MOVF    r0x03, W
0238 6EE5      04167         MOVWF   POSTDEC1
023A EC00 F000 04168         CALL    _memset
023E 0E05      04169         MOVLW   0x05
0240 26E1      04170         ADDWF   FSR1L, F
               04171 ;       .line   546; MainDemo.c memset((void*)&bootp_header->RelayAgentIP, 42, sizeof(IP_ADDR));
0242 5000      04172         MOVF    r0x00, W
0244 0F18      04173         ADDLW   0x18
0246 6E00      04174         MOVWF   r0x03
0248 0E00      04175         MOVLW   0x00
024A 2000      04176         ADDWFC  r0x01, W
024C 6E00      04177         MOVWF   r0x04
024E 0E00      04178         MOVLW   0x00
0250 2000      04179         ADDWFC  r0x02, W
0252 6E00      04180         MOVWF   r0x05
0254 0E00      04181         MOVLW   0x00
0256 6EE5      04182         MOVWF   POSTDEC1
0258 0E04      04183         MOVLW   0x04
025A 6EE5      04184         MOVWF   POSTDEC1
025C 0E2A      04185         MOVLW   0x2a
025E 6EE5      04186         MOVWF   POSTDEC1
0260 5000      04187         MOVF    r0x04, W
0262 6EE5      04188         MOVWF   POSTDEC1
0264 5000      04189         MOVF    r0x03, W
0266 6EE5      04190         MOVWF   POSTDEC1
0268 EC00 F000 04191         CALL    _memset
026C 0E05      04192         MOVLW   0x05
026E 26E1      04193         ADDWF   FSR1L, F
               04194 ;       .line   547; MainDemo.c memcpy(&bootp_header->ClientMAC, clientMAC->v, sizeof(MAC_ADDR));
0270 0E1C      04195         MOVLW   0x1c
0272 2600      04196         ADDWF   r0x00, F
0274 0E00      04197         MOVLW   0x00
0276 2200      04198         ADDWFC  r0x01, F
0278 0E00      04199         MOVLW   0x00
027A 2200      04200         ADDWFC  r0x02, F
027C 0E00      04201         MOVLW   0x00
027E 6EE5      04202         MOVWF   POSTDEC1
0280 0E06      04203         MOVLW   0x06
0282 6EE5      04204         MOVWF   POSTDEC1
0284 5000      04205         MOVF    r0x0f, W
0286 6EE5      04206         MOVWF   POSTDEC1
0288 5000      04207         MOVF    r0x0e, W
028A 6EE5      04208         MOVWF   POSTDEC1
028C 5000      04209         MOVF    r0x0d, W
028E 6EE5      04210         MOVWF   POSTDEC1
0290 5000      04211         MOVF    r0x02, W
0292 6EE5      04212         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0294 5000      04213         MOVF    r0x01, W
0296 6EE5      04214         MOVWF   POSTDEC1
0298 5000      04215         MOVF    r0x00, W
029A 6EE5      04216         MOVWF   POSTDEC1
029C EC00 F000 04217         CALL    _memcpy
02A0 0E08      04218         MOVLW   0x08
02A2 26E1      04219         ADDWF   FSR1L, F
02A4 CFE4 F000 04220         MOVFF   PREINC1, r0x12
02A8 CFE4 F000 04221         MOVFF   PREINC1, r0x11
02AC CFE4 F000 04222         MOVFF   PREINC1, r0x10
02B0 CFE4 F000 04223         MOVFF   PREINC1, r0x0f
02B4 CFE4 F000 04224         MOVFF   PREINC1, r0x0e
02B8 CFE4 F000 04225         MOVFF   PREINC1, r0x0d
02BC CFE4 F000 04226         MOVFF   PREINC1, r0x0c
02C0 CFE4 F000 04227         MOVFF   PREINC1, r0x0b
02C4 CFE4 F000 04228         MOVFF   PREINC1, r0x0a
02C8 CFE4 F000 04229         MOVFF   PREINC1, r0x09
02CC CFE4 F000 04230         MOVFF   PREINC1, r0x08
02D0 CFE4 F000 04231         MOVFF   PREINC1, r0x07
02D4 CFE4 F000 04232         MOVFF   PREINC1, r0x06
02D8 CFE4 F000 04233         MOVFF   PREINC1, r0x05
02DC CFE4 F000 04234         MOVFF   PREINC1, r0x04
02E0 CFE4 F000 04235         MOVFF   PREINC1, r0x03
02E4 CFE4 F000 04236         MOVFF   PREINC1, r0x02
02E8 CFE4 F000 04237         MOVFF   PREINC1, r0x01
02EC CFE4 F000 04238         MOVFF   PREINC1, r0x00
02F0 CFE4 FFD9 04239         MOVFF   PREINC1, FSR2L
02F4 0012      04240         RETURN  
               04241 
               04242 ; ; Starting pCode block
               04243 S_MainDemo__handle_server_msg   code
0000 04244 _handle_server_msg:
               04245 ;       .line   499; MainDemo.c void handle_server_msg(UDP_SOCKET *socket_sendto_client, UDP_SOCKET *socket_recv){
0000 CFD9 FFE5 04246         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 04247         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 04248         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 04249         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 04250         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 04251         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 04252         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 04253         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 04254         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 04255         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 04256         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 04257         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 04258         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 04259         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 04260         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 04261         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 04262         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 04263         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 04264         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 04265         MOVFF   r0x11, POSTDEC1
0050 0E02      04266         MOVLW   0x02
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0052 CFDB F000 04267         MOVFF   PLUSW2, r0x00
0056 0E03      04268         MOVLW   0x03
0058 CFDB F000 04269         MOVFF   PLUSW2, r0x01
005C 0E04      04270         MOVLW   0x04
005E CFDB F000 04271         MOVFF   PLUSW2, r0x02
0062 0E05      04272         MOVLW   0x05
0064 CFDB F000 04273         MOVFF   PLUSW2, r0x03
0068 0E06      04274         MOVLW   0x06
006A CFDB F000 04275         MOVFF   PLUSW2, r0x04
006E 0E07      04276         MOVLW   0x07
0070 CFDB F000 04277         MOVFF   PLUSW2, r0x05
               04278 ;       .line   508; MainDemo.c extract_bootp_header(&dhcp_type, &bootp_header, dhcp_header, &dhcp_header_length, socket_recv);
0074 0E00      04279         MOVLW   HIGH(_handle_server_msg_dhcp_type_1_1)
0076 6E00      04280         MOVWF   r0x07
0078 0E00      04281         MOVLW   LOW(_handle_server_msg_dhcp_type_1_1)
007A 6E00      04282         MOVWF   r0x06
007C 0E80      04283         MOVLW   0x80
007E 6E00      04284         MOVWF   r0x08
0080 0E00      04285         MOVLW   HIGH(_handle_server_msg_bootp_header_1_1)
0082 6E00      04286         MOVWF   r0x0a
0084 0E00      04287         MOVLW   LOW(_handle_server_msg_bootp_header_1_1)
0086 6E00      04288         MOVWF   r0x09
0088 0E80      04289         MOVLW   0x80
008A 6E00      04290         MOVWF   r0x0b
008C 0E00      04291         MOVLW   HIGH(_handle_server_msg_dhcp_header_1_1)
008E 6E00      04292         MOVWF   r0x0d
0090 0E00      04293         MOVLW   LOW(_handle_server_msg_dhcp_header_1_1)
0092 6E00      04294         MOVWF   r0x0c
0094 0E80      04295         MOVLW   0x80
0096 6E00      04296         MOVWF   r0x0e
0098 0E00      04297         MOVLW   HIGH(_handle_server_msg_dhcp_header_length_1_1)
009A 6E00      04298         MOVWF   r0x10
009C 0E00      04299         MOVLW   LOW(_handle_server_msg_dhcp_header_length_1_1)
009E 6E00      04300         MOVWF   r0x0f
00A0 0E80      04301         MOVLW   0x80
00A2 6E00      04302         MOVWF   r0x11
00A4 5000      04303         MOVF    r0x05, W
00A6 6EE5      04304         MOVWF   POSTDEC1
00A8 5000      04305         MOVF    r0x04, W
00AA 6EE5      04306         MOVWF   POSTDEC1
00AC 5000      04307         MOVF    r0x03, W
00AE 6EE5      04308         MOVWF   POSTDEC1
00B0 5000      04309         MOVF    r0x11, W
00B2 6EE5      04310         MOVWF   POSTDEC1
00B4 5000      04311         MOVF    r0x10, W
00B6 6EE5      04312         MOVWF   POSTDEC1
00B8 5000      04313         MOVF    r0x0f, W
00BA 6EE5      04314         MOVWF   POSTDEC1
00BC 5000      04315         MOVF    r0x0e, W
00BE 6EE5      04316         MOVWF   POSTDEC1
00C0 5000      04317         MOVF    r0x0d, W
00C2 6EE5      04318         MOVWF   POSTDEC1
00C4 5000      04319         MOVF    r0x0c, W
00C6 6EE5      04320         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C8 5000      04321         MOVF    r0x0b, W
00CA 6EE5      04322         MOVWF   POSTDEC1
00CC 5000      04323         MOVF    r0x0a, W
00CE 6EE5      04324         MOVWF   POSTDEC1
00D0 5000      04325         MOVF    r0x09, W
00D2 6EE5      04326         MOVWF   POSTDEC1
00D4 5000      04327         MOVF    r0x08, W
00D6 6EE5      04328         MOVWF   POSTDEC1
00D8 5000      04329         MOVF    r0x07, W
00DA 6EE5      04330         MOVWF   POSTDEC1
00DC 5000      04331         MOVF    r0x06, W
00DE 6EE5      04332         MOVWF   POSTDEC1
00E0 EC00 F000 04333         CALL    _extract_bootp_header
00E4 0E0F      04334         MOVLW   0x0f
00E6 26E1      04335         ADDWF   FSR1L, F
               04336 ;       .line   509; MainDemo.c UDPDiscard();
00E8 EC00 F000 04337         CALL    _UDPDiscard
               04338 ;       .line   511; MainDemo.c switch(dhcp_type){
00EC C000 F000 04339         MOVFF   _handle_server_msg_dhcp_type_1_1, r0x03
00F0 6A00      04340         CLRF    r0x04
00F2 5000      04341         MOVF    r0x03, W
00F4 0A02      04342         XORLW   0x02
00F6 E100      04343         BNZ     _00492_DS_
00F8 5000      04344         MOVF    r0x04, W
00FA E000      04345         BZ      _00480_DS_
00FC 04346 _00492_DS_:
00FC 5000      04347         MOVF    r0x03, W
00FE 0A05      04348         XORLW   0x05
0100 E100      04349         BNZ     _00494_DS_
0102 5000      04350         MOVF    r0x04, W
0104 E000      04351         BZ      _00481_DS_
0106 04352 _00494_DS_:
0106 D000      04353         BRA     _00484_DS_
0108 04354 _00480_DS_:
               04355 ;       .line   513; MainDemo.c DisplayString(0, "DHCP OFFER");
0108 0E00      04356         MOVLW   UPPER(__str_1)
010A 6EE5      04357         MOVWF   POSTDEC1
010C 0E00      04358         MOVLW   HIGH(__str_1)
010E 6EE5      04359         MOVWF   POSTDEC1
0110 0E00      04360         MOVLW   LOW(__str_1)
0112 6EE5      04361         MOVWF   POSTDEC1
0114 0E00      04362         MOVLW   0x00
0116 6EE5      04363         MOVWF   POSTDEC1
0118 EC00 F000 04364         CALL    _DisplayString
011C 0E04      04365         MOVLW   0x04
011E 26E1      04366         ADDWF   FSR1L, F
               04367 ;       .line   514; MainDemo.c transfer_msg_to_client(&bootp_header, socket_sendto_client, dhcp_type);
0120 0E00      04368         MOVLW   HIGH(_handle_server_msg_bootp_header_1_1)
0122 6E00      04369         MOVWF   r0x04
0124 0E00      04370         MOVLW   LOW(_handle_server_msg_bootp_header_1_1)
0126 6E00      04371         MOVWF   r0x03
0128 0E80      04372         MOVLW   0x80
012A 6E00      04373         MOVWF   r0x05
012C 0000      04374         BANKSEL _handle_server_msg_dhcp_type_1_1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012E 5100      04375         MOVF    _handle_server_msg_dhcp_type_1_1, W, B
0130 6EE5      04376         MOVWF   POSTDEC1
0132 5000      04377         MOVF    r0x02, W
0134 6EE5      04378         MOVWF   POSTDEC1
0136 5000      04379         MOVF    r0x01, W
0138 6EE5      04380         MOVWF   POSTDEC1
013A 5000      04381         MOVF    r0x00, W
013C 6EE5      04382         MOVWF   POSTDEC1
013E 5000      04383         MOVF    r0x05, W
0140 6EE5      04384         MOVWF   POSTDEC1
0142 5000      04385         MOVF    r0x04, W
0144 6EE5      04386         MOVWF   POSTDEC1
0146 5000      04387         MOVF    r0x03, W
0148 6EE5      04388         MOVWF   POSTDEC1
014A EC00 F000 04389         CALL    _transfer_msg_to_client
014E 0E07      04390         MOVLW   0x07
0150 26E1      04391         ADDWF   FSR1L, F
               04392 ;       .line   515; MainDemo.c break;
0152 D000      04393         BRA     _00486_DS_
0154 04394 _00481_DS_:
               04395 ;       .line   518; MainDemo.c DisplayString(0, "DHCP ACK");
0154 0E00      04396         MOVLW   UPPER(__str_2)
0156 6EE5      04397         MOVWF   POSTDEC1
0158 0E00      04398         MOVLW   HIGH(__str_2)
015A 6EE5      04399         MOVWF   POSTDEC1
015C 0E00      04400         MOVLW   LOW(__str_2)
015E 6EE5      04401         MOVWF   POSTDEC1
0160 0E00      04402         MOVLW   0x00
0162 6EE5      04403         MOVWF   POSTDEC1
0164 EC00 F000 04404         CALL    _DisplayString
0168 0E04      04405         MOVLW   0x04
016A 26E1      04406         ADDWF   FSR1L, F
               04407 ;       .line   519; MainDemo.c get_ack_lease_time(&lease_time, dhcp_header, dhcp_header_length);
016C 0E00      04408         MOVLW   HIGH(_handle_server_msg_lease_time_1_1)
016E 6E00      04409         MOVWF   r0x04
0170 0E00      04410         MOVLW   LOW(_handle_server_msg_lease_time_1_1)
0172 6E00      04411         MOVWF   r0x03
0174 0E80      04412         MOVLW   0x80
0176 6E00      04413         MOVWF   r0x05
0178 0E00      04414         MOVLW   HIGH(_handle_server_msg_dhcp_header_1_1)
017A 6E00      04415         MOVWF   r0x07
017C 0E00      04416         MOVLW   LOW(_handle_server_msg_dhcp_header_1_1)
017E 6E00      04417         MOVWF   r0x06
0180 0E80      04418         MOVLW   0x80
0182 6E00      04419         MOVWF   r0x08
0184 0000      04420         BANKSEL (_handle_server_msg_dhcp_header_length_1_1 + 1)
0186 5100      04421         MOVF    (_handle_server_msg_dhcp_header_length_1_1 + 1), W, B
0188 6EE5      04422         MOVWF   POSTDEC1
018A 0000      04423         BANKSEL _handle_server_msg_dhcp_header_length_1_1
018C 5100      04424         MOVF    _handle_server_msg_dhcp_header_length_1_1, W, B
018E 6EE5      04425         MOVWF   POSTDEC1
0190 5000      04426         MOVF    r0x08, W
0192 6EE5      04427         MOVWF   POSTDEC1
0194 5000      04428         MOVF    r0x07, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0196 6EE5      04429         MOVWF   POSTDEC1
0198 5000      04430         MOVF    r0x06, W
019A 6EE5      04431         MOVWF   POSTDEC1
019C 5000      04432         MOVF    r0x05, W
019E 6EE5      04433         MOVWF   POSTDEC1
01A0 5000      04434         MOVF    r0x04, W
01A2 6EE5      04435         MOVWF   POSTDEC1
01A4 5000      04436         MOVF    r0x03, W
01A6 6EE5      04437         MOVWF   POSTDEC1
01A8 EC00 F000 04438         CALL    _get_ack_lease_time
01AC 0E08      04439         MOVLW   0x08
01AE 26E1      04440         ADDWF   FSR1L, F
               04441 ;       .line   520; MainDemo.c nb_miss = 0;
01B0 6A00      04442         CLRF    r0x03
01B2 6A00      04443         CLRF    r0x04
               04444 ;       .line   521; MainDemo.c if(get_pool_el_mac(&bootp_header.ClientMAC, &node_pool_state)){
01B4 0E00      04445         MOVLW   HIGH(_handle_server_msg_bootp_header_1_1 + 28)
01B6 6E00      04446         MOVWF   r0x06
01B8 0E00      04447         MOVLW   LOW(_handle_server_msg_bootp_header_1_1 + 28)
01BA 6E00      04448         MOVWF   r0x05
01BC 0E80      04449         MOVLW   0x80
01BE 6E00      04450         MOVWF   r0x07
01C0 0E00      04451         MOVLW   HIGH(_handle_server_msg_node_pool_state_1_1)
01C2 6E00      04452         MOVWF   r0x09
01C4 0E00      04453         MOVLW   LOW(_handle_server_msg_node_pool_state_1_1)
01C6 6E00      04454         MOVWF   r0x08
01C8 0E80      04455         MOVLW   0x80
01CA 6E00      04456         MOVWF   r0x0a
01CC 5000      04457         MOVF    r0x0a, W
01CE 6EE5      04458         MOVWF   POSTDEC1
01D0 5000      04459         MOVF    r0x09, W
01D2 6EE5      04460         MOVWF   POSTDEC1
01D4 5000      04461         MOVF    r0x08, W
01D6 6EE5      04462         MOVWF   POSTDEC1
01D8 5000      04463         MOVF    r0x07, W
01DA 6EE5      04464         MOVWF   POSTDEC1
01DC 5000      04465         MOVF    r0x06, W
01DE 6EE5      04466         MOVWF   POSTDEC1
01E0 5000      04467         MOVF    r0x05, W
01E2 6EE5      04468         MOVWF   POSTDEC1
01E4 EC00 F000 04469         CALL    _get_pool_el_mac
01E8 6E00      04470         MOVWF   r0x05
01EA 0E06      04471         MOVLW   0x06
01EC 26E1      04472         ADDWF   FSR1L, F
01EE 5000      04473         MOVF    r0x05, W
01F0 E000      04474         BZ      _00483_DS_
               04475 ;       .line   522; MainDemo.c nb_miss = node_pool_state->miss_counter;
01F2 C000 F000 04476         MOVFF   _handle_server_msg_node_pool_state_1_1, r0x05
01F6 C000 F000 04477         MOVFF   (_handle_server_msg_node_pool_state_1_1 + 1), r0x06
01FA C000 F000 04478         MOVFF   (_handle_server_msg_node_pool_state_1_1 + 2), r0x07
01FE 5000      04479         MOVF    r0x05, W
0200 0F12      04480         ADDLW   0x12
0202 6E00      04481         MOVWF   r0x08
0204 0E00      04482         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0206 2000      04483         ADDWFC  r0x06, W
0208 6E00      04484         MOVWF   r0x09
020A 0E00      04485         MOVLW   0x00
020C 2000      04486         ADDWFC  r0x07, W
020E 6E00      04487         MOVWF   r0x0a
0210 C000 FFE9 04488         MOVFF   r0x08, FSR0L
0214 C000 FFF3 04489         MOVFF   r0x09, PRODL
0218 5000      04490         MOVF    r0x0a, W
021A EC00 F000 04491         CALL    __gptrget2
021E 6E00      04492         MOVWF   r0x03
0220 CFF3 F000 04493         MOVFF   PRODL, r0x04
               04494 ;       .line   523; MainDemo.c remove_from_pool(&node_pool_state->ip);
0224 5000      04495         MOVF    r0x07, W
0226 6EE5      04496         MOVWF   POSTDEC1
0228 5000      04497         MOVF    r0x06, W
022A 6EE5      04498         MOVWF   POSTDEC1
022C 5000      04499         MOVF    r0x05, W
022E 6EE5      04500         MOVWF   POSTDEC1
0230 EC00 F000 04501         CALL    _remove_from_pool
0234 0E03      04502         MOVLW   0x03
0236 26E1      04503         ADDWF   FSR1L, F
0238 04504 _00483_DS_:
               04505 ;       .line   525; MainDemo.c add_to_pool((IP_ADDR*)&bootp_header.YourIP, &bootp_header.ClientMAC, lease_time, nb_miss);    
0238 0E00      04506         MOVLW   HIGH(_handle_server_msg_bootp_header_1_1 + 16)
023A 6E00      04507         MOVWF   r0x06
023C 0E00      04508         MOVLW   LOW(_handle_server_msg_bootp_header_1_1 + 16)
023E 6E00      04509         MOVWF   r0x05
0240 0E80      04510         MOVLW   0x80
0242 6E00      04511         MOVWF   r0x07
0244 0E00      04512         MOVLW   HIGH(_handle_server_msg_bootp_header_1_1 + 28)
0246 6E00      04513         MOVWF   r0x09
0248 0E00      04514         MOVLW   LOW(_handle_server_msg_bootp_header_1_1 + 28)
024A 6E00      04515         MOVWF   r0x08
024C 0E80      04516         MOVLW   0x80
024E 6E00      04517         MOVWF   r0x0a
0250 5000      04518         MOVF    r0x04, W
0252 6EE5      04519         MOVWF   POSTDEC1
0254 5000      04520         MOVF    r0x03, W
0256 6EE5      04521         MOVWF   POSTDEC1
0258 0000      04522         BANKSEL (_handle_server_msg_lease_time_1_1 + 3)
025A 5100      04523         MOVF    (_handle_server_msg_lease_time_1_1 + 3), W, B
025C 6EE5      04524         MOVWF   POSTDEC1
025E 0000      04525         BANKSEL (_handle_server_msg_lease_time_1_1 + 2)
0260 5100      04526         MOVF    (_handle_server_msg_lease_time_1_1 + 2), W, B
0262 6EE5      04527         MOVWF   POSTDEC1
0264 0000      04528         BANKSEL (_handle_server_msg_lease_time_1_1 + 1)
0266 5100      04529         MOVF    (_handle_server_msg_lease_time_1_1 + 1), W, B
0268 6EE5      04530         MOVWF   POSTDEC1
026A 0000      04531         BANKSEL _handle_server_msg_lease_time_1_1
026C 5100      04532         MOVF    _handle_server_msg_lease_time_1_1, W, B
026E 6EE5      04533         MOVWF   POSTDEC1
0270 5000      04534         MOVF    r0x0a, W
0272 6EE5      04535         MOVWF   POSTDEC1
0274 5000      04536         MOVF    r0x09, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0276 6EE5      04537         MOVWF   POSTDEC1
0278 5000      04538         MOVF    r0x08, W
027A 6EE5      04539         MOVWF   POSTDEC1
027C 5000      04540         MOVF    r0x07, W
027E 6EE5      04541         MOVWF   POSTDEC1
0280 5000      04542         MOVF    r0x06, W
0282 6EE5      04543         MOVWF   POSTDEC1
0284 5000      04544         MOVF    r0x05, W
0286 6EE5      04545         MOVWF   POSTDEC1
0288 EC00 F000 04546         CALL    _add_to_pool
028C 0E0C      04547         MOVLW   0x0c
028E 26E1      04548         ADDWF   FSR1L, F
               04549 ;       .line   526; MainDemo.c transfer_msg_to_client(&bootp_header, socket_sendto_client, dhcp_type);
0290 0E00      04550         MOVLW   HIGH(_handle_server_msg_bootp_header_1_1)
0292 6E00      04551         MOVWF   r0x04
0294 0E00      04552         MOVLW   LOW(_handle_server_msg_bootp_header_1_1)
0296 6E00      04553         MOVWF   r0x03
0298 0E80      04554         MOVLW   0x80
029A 6E00      04555         MOVWF   r0x05
029C 0000      04556         BANKSEL _handle_server_msg_dhcp_type_1_1
029E 5100      04557         MOVF    _handle_server_msg_dhcp_type_1_1, W, B
02A0 6EE5      04558         MOVWF   POSTDEC1
02A2 5000      04559         MOVF    r0x02, W
02A4 6EE5      04560         MOVWF   POSTDEC1
02A6 5000      04561         MOVF    r0x01, W
02A8 6EE5      04562         MOVWF   POSTDEC1
02AA 5000      04563         MOVF    r0x00, W
02AC 6EE5      04564         MOVWF   POSTDEC1
02AE 5000      04565         MOVF    r0x05, W
02B0 6EE5      04566         MOVWF   POSTDEC1
02B2 5000      04567         MOVF    r0x04, W
02B4 6EE5      04568         MOVWF   POSTDEC1
02B6 5000      04569         MOVF    r0x03, W
02B8 6EE5      04570         MOVWF   POSTDEC1
02BA EC00 F000 04571         CALL    _transfer_msg_to_client
02BE 0E07      04572         MOVLW   0x07
02C0 26E1      04573         ADDWF   FSR1L, F
               04574 ;       .line   527; MainDemo.c break;
02C2 D000      04575         BRA     _00486_DS_
02C4 04576 _00484_DS_:
               04577 ;       .line   530; MainDemo.c DisplayString(0, "DISCARDED handle server");
02C4 0E00      04578         MOVLW   UPPER(__str_3)
02C6 6EE5      04579         MOVWF   POSTDEC1
02C8 0E00      04580         MOVLW   HIGH(__str_3)
02CA 6EE5      04581         MOVWF   POSTDEC1
02CC 0E00      04582         MOVLW   LOW(__str_3)
02CE 6EE5      04583         MOVWF   POSTDEC1
02D0 0E00      04584         MOVLW   0x00
02D2 6EE5      04585         MOVWF   POSTDEC1
02D4 EC00 F000 04586         CALL    _DisplayString
02D8 0E04      04587         MOVLW   0x04
02DA 26E1      04588         ADDWF   FSR1L, F
02DC 04589 _00486_DS_:
               04590 ;       .line   532; MainDemo.c }
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02DC CFE4 F000 04591         MOVFF   PREINC1, r0x11
02E0 CFE4 F000 04592         MOVFF   PREINC1, r0x10
02E4 CFE4 F000 04593         MOVFF   PREINC1, r0x0f
02E8 CFE4 F000 04594         MOVFF   PREINC1, r0x0e
02EC CFE4 F000 04595         MOVFF   PREINC1, r0x0d
02F0 CFE4 F000 04596         MOVFF   PREINC1, r0x0c
02F4 CFE4 F000 04597         MOVFF   PREINC1, r0x0b
02F8 CFE4 F000 04598         MOVFF   PREINC1, r0x0a
02FC CFE4 F000 04599         MOVFF   PREINC1, r0x09
0300 CFE4 F000 04600         MOVFF   PREINC1, r0x08
0304 CFE4 F000 04601         MOVFF   PREINC1, r0x07
0308 CFE4 F000 04602         MOVFF   PREINC1, r0x06
030C CFE4 F000 04603         MOVFF   PREINC1, r0x05
0310 CFE4 F000 04604         MOVFF   PREINC1, r0x04
0314 CFE4 F000 04605         MOVFF   PREINC1, r0x03
0318 CFE4 F000 04606         MOVFF   PREINC1, r0x02
031C CFE4 F000 04607         MOVFF   PREINC1, r0x01
0320 CFE4 F000 04608         MOVFF   PREINC1, r0x00
0324 CFE4 FFD9 04609         MOVFF   PREINC1, FSR2L
0328 0012      04610         RETURN  
               04611 
               04612 ; ; Starting pCode block
               04613 S_MainDemo__get_ack_lease_time  code
0000 04614 _get_ack_lease_time:
               04615 ;       .line   478; MainDemo.c BOOL get_ack_lease_time(DWORD *lease_time, BYTE *dhcp_header, unsigned int dhcp_header_length){
0000 CFD9 FFE5 04616         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 04617         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 04618         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 04619         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 04620         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 04621         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 04622         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 04623         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 04624         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 04625         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 04626         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 04627         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 04628         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 04629         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 04630         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 04631         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 04632         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 04633         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 04634         MOVFF   r0x10, POSTDEC1
004C 0E02      04635         MOVLW   0x02
004E CFDB F000 04636         MOVFF   PLUSW2, r0x00
0052 0E03      04637         MOVLW   0x03
0054 CFDB F000 04638         MOVFF   PLUSW2, r0x01
0058 0E04      04639         MOVLW   0x04
005A CFDB F000 04640         MOVFF   PLUSW2, r0x02
005E 0E05      04641         MOVLW   0x05
0060 CFDB F000 04642         MOVFF   PLUSW2, r0x03
0064 0E06      04643         MOVLW   0x06
0066 CFDB F000 04644         MOVFF   PLUSW2, r0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006A 0E07      04645         MOVLW   0x07
006C CFDB F000 04646         MOVFF   PLUSW2, r0x05
0070 0E08      04647         MOVLW   0x08
0072 CFDB F000 04648         MOVFF   PLUSW2, r0x06
0076 0E09      04649         MOVLW   0x09
0078 CFDB F000 04650         MOVFF   PLUSW2, r0x07
               04651 ;       .line   482; MainDemo.c i=0;
007C 6A00      04652         CLRF    r0x08
007E 6A00      04653         CLRF    r0x09
0080 04654 _00465_DS_:
               04655 ;       .line   484; MainDemo.c while(i<dhcp_header_length){
0080 C000 F000 04656         MOVFF   r0x08, r0x0a
0084 C000 F000 04657         MOVFF   r0x09, r0x0b
0088 5000      04658         MOVF    r0x07, W
008A 5C00      04659         SUBWF   r0x0b, W
008C E100      04660         BNZ     _00473_DS_
008E 5000      04661         MOVF    r0x06, W
0090 5C00      04662         SUBWF   r0x0a, W
0092 04663 _00473_DS_:
0092 B0D8      04664         BTFSC   STATUS, 0
0094 D000      04665         BRA     _00467_DS_
               04666 ;       .line   485; MainDemo.c opt = dhcp_header[i];
0096 5000      04667         MOVF    r0x08, W
0098 2400      04668         ADDWF   r0x03, W
009A 6E00      04669         MOVWF   r0x0a
009C 5000      04670         MOVF    r0x09, W
009E 2000      04671         ADDWFC  r0x04, W
00A0 6E00      04672         MOVWF   r0x0b
00A2 6AE8      04673         CLRF    WREG
00A4 BE00      04674         BTFSC   r0x09, 7
00A6 68E8      04675         SETF    WREG
00A8 2000      04676         ADDWFC  r0x05, W
00AA 6E00      04677         MOVWF   r0x0c
00AC C000 FFE9 04678         MOVFF   r0x0a, FSR0L
00B0 C000 FFF3 04679         MOVFF   r0x0b, PRODL
00B4 5000      04680         MOVF    r0x0c, W
00B6 EC00 F000 04681         CALL    __gptrget1
00BA 6E00      04682         MOVWF   r0x0a
               04683 ;       .line   486; MainDemo.c i++;
00BC 2A00      04684         INCF    r0x08, F
00BE B0D8      04685         BTFSC   STATUS, 0
00C0 2A00      04686         INCF    r0x09, F
               04687 ;       .line   487; MainDemo.c length = dhcp_header[i];
00C2 5000      04688         MOVF    r0x08, W
00C4 2400      04689         ADDWF   r0x03, W
00C6 6E00      04690         MOVWF   r0x0b
00C8 5000      04691         MOVF    r0x09, W
00CA 2000      04692         ADDWFC  r0x04, W
00CC 6E00      04693         MOVWF   r0x0c
00CE 6AE8      04694         CLRF    WREG
00D0 BE00      04695         BTFSC   r0x09, 7
00D2 68E8      04696         SETF    WREG
00D4 2000      04697         ADDWFC  r0x05, W
00D6 6E00      04698         MOVWF   r0x0d
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D8 C000 FFE9 04699         MOVFF   r0x0b, FSR0L
00DC C000 FFF3 04700         MOVFF   r0x0c, PRODL
00E0 5000      04701         MOVF    r0x0d, W
00E2 EC00 F000 04702         CALL    __gptrget1
00E6 6E00      04703         MOVWF   r0x0b
               04704 ;       .line   488; MainDemo.c i++;
00E8 2A00      04705         INCF    r0x08, F
00EA B0D8      04706         BTFSC   STATUS, 0
00EC 2A00      04707         INCF    r0x09, F
               04708 ;       .line   490; MainDemo.c if(opt == DHCP_IP_LEASE_TIME){
00EE 6A00      04709         CLRF    r0x0c
00F0 5000      04710         MOVF    r0x0a, W
00F2 0A33      04711         XORLW   0x33
00F4 E100      04712         BNZ     _00474_DS_
00F6 5000      04713         MOVF    r0x0c, W
00F8 E000      04714         BZ      _00475_DS_
00FA 04715 _00474_DS_:
00FA D000      04716         BRA     _00464_DS_
00FC 04717 _00475_DS_:
               04718 ;       .line   491; MainDemo.c *lease_time = dhcp_header[i+3]|dhcp_header[i+2]<<8|dhcp_header[i+1]<<16|dhcp_header[i]<<24;
00FC 5000      04719         MOVF    r0x08, W
00FE 0F03      04720         ADDLW   0x03
0100 6E00      04721         MOVWF   r0x0a
0102 0E00      04722         MOVLW   0x00
0104 2000      04723         ADDWFC  r0x09, W
0106 6E00      04724         MOVWF   r0x0c
0108 6A00      04725         CLRF    r0x0d
010A BE00      04726         BTFSC   r0x0c, 7
010C 6800      04727         SETF    r0x0d
010E 5000      04728         MOVF    r0x03, W
0110 2600      04729         ADDWF   r0x0a, F
0112 5000      04730         MOVF    r0x04, W
0114 2200      04731         ADDWFC  r0x0c, F
0116 5000      04732         MOVF    r0x05, W
0118 2200      04733         ADDWFC  r0x0d, F
011A C000 FFE9 04734         MOVFF   r0x0a, FSR0L
011E C000 FFF3 04735         MOVFF   r0x0c, PRODL
0122 5000      04736         MOVF    r0x0d, W
0124 EC00 F000 04737         CALL    __gptrget1
0128 6E00      04738         MOVWF   r0x0a
012A 5000      04739         MOVF    r0x08, W
012C 0F02      04740         ADDLW   0x02
012E 6E00      04741         MOVWF   r0x0c
0130 0E00      04742         MOVLW   0x00
0132 2000      04743         ADDWFC  r0x09, W
0134 6E00      04744         MOVWF   r0x0d
0136 6A00      04745         CLRF    r0x0e
0138 BE00      04746         BTFSC   r0x0d, 7
013A 6800      04747         SETF    r0x0e
013C 5000      04748         MOVF    r0x03, W
013E 2600      04749         ADDWF   r0x0c, F
0140 5000      04750         MOVF    r0x04, W
0142 2200      04751         ADDWFC  r0x0d, F
0144 5000      04752         MOVF    r0x05, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0146 2200      04753         ADDWFC  r0x0e, F
0148 C000 FFE9 04754         MOVFF   r0x0c, FSR0L
014C C000 FFF3 04755         MOVFF   r0x0d, PRODL
0150 5000      04756         MOVF    r0x0e, W
0152 EC00 F000 04757         CALL    __gptrget1
0156 6E00      04758         MOVWF   r0x0c
0158 6A00      04759         CLRF    r0x0d
015A 5000      04760         MOVF    r0x0c, W
015C 6E00      04761         MOVWF   r0x0f
015E 6A00      04762         CLRF    r0x0e
0160 6A00      04763         CLRF    r0x10
0162 5000      04764         MOVF    r0x0a, W
0164 1200      04765         IORWF   r0x0e, F
0166 5000      04766         MOVF    r0x10, W
0168 1200      04767         IORWF   r0x0f, F
016A 6AE8      04768         CLRF    WREG
016C BE00      04769         BTFSC   r0x0f, 7
016E 0EFF      04770         MOVLW   0xff
0170 6E00      04771         MOVWF   r0x0a
0172 6E00      04772         MOVWF   r0x0c
0174 C000 FFE5 04773         MOVFF   r0x0e, POSTDEC1
0178 C000 FFF4 04774         MOVFF   r0x0f, PRODH
017C C000 FFF6 04775         MOVFF   r0x0a, TBLPTRL
0180 C000 FFF7 04776         MOVFF   r0x0c, TBLPTRH
0184 C000 FFE9 04777         MOVFF   r0x00, FSR0L
0188 C000 FFF3 04778         MOVFF   r0x01, PRODL
018C 5000      04779         MOVF    r0x02, W
018E EC00 F000 04780         CALL    __gptrput4
               04781 ;       .line   492; MainDemo.c return TRUE;
0192 0E01      04782         MOVLW   0x01
0194 D000      04783         BRA     _00468_DS_
0196 04784 _00464_DS_:
               04785 ;       .line   494; MainDemo.c i+=length;
0196 6A00      04786         CLRF    r0x0a
0198 5000      04787         MOVF    r0x0b, W
019A 2600      04788         ADDWF   r0x08, F
019C 5000      04789         MOVF    r0x0a, W
019E 2200      04790         ADDWFC  r0x09, F
01A0 D000      04791         BRA     _00465_DS_
01A2 04792 _00467_DS_:
               04793 ;       .line   496; MainDemo.c return FALSE;    
01A2 6AE8      04794         CLRF    WREG
01A4 04795 _00468_DS_:
01A4 CFE4 F000 04796         MOVFF   PREINC1, r0x10
01A8 CFE4 F000 04797         MOVFF   PREINC1, r0x0f
01AC CFE4 F000 04798         MOVFF   PREINC1, r0x0e
01B0 CFE4 F000 04799         MOVFF   PREINC1, r0x0d
01B4 CFE4 F000 04800         MOVFF   PREINC1, r0x0c
01B8 CFE4 F000 04801         MOVFF   PREINC1, r0x0b
01BC CFE4 F000 04802         MOVFF   PREINC1, r0x0a
01C0 CFE4 F000 04803         MOVFF   PREINC1, r0x09
01C4 CFE4 F000 04804         MOVFF   PREINC1, r0x08
01C8 CFE4 F000 04805         MOVFF   PREINC1, r0x07
01CC CFE4 F000 04806         MOVFF   PREINC1, r0x06
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01D0 CFE4 F000 04807         MOVFF   PREINC1, r0x05
01D4 CFE4 F000 04808         MOVFF   PREINC1, r0x04
01D8 CFE4 F000 04809         MOVFF   PREINC1, r0x03
01DC CFE4 F000 04810         MOVFF   PREINC1, r0x02
01E0 CFE4 F000 04811         MOVFF   PREINC1, r0x01
01E4 CFE4 F000 04812         MOVFF   PREINC1, r0x00
01E8 CFE4 FFD9 04813         MOVFF   PREINC1, FSR2L
01EC 0012      04814         RETURN  
               04815 
               04816 ; ; Starting pCode block
               04817 S_MainDemo__extract_bootp_header        code
0000 04818 _extract_bootp_header:
               04819 ;       .line   430; MainDemo.c BOOL extract_bootp_header(BYTE *dhcp_type, BOOTP_HEADER *bootp_header,
0000 CFD9 FFE5 04820         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 04821         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 04822         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 04823         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 04824         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 04825         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 04826         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 04827         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 04828         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 04829         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 04830         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 04831         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 04832         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 04833         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 04834         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 04835         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 04836         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 04837         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 04838         MOVFF   r0x10, POSTDEC1
004C 0E02      04839         MOVLW   0x02
004E CFDB F000 04840         MOVFF   PLUSW2, r0x00
0052 0E03      04841         MOVLW   0x03
0054 CFDB F000 04842         MOVFF   PLUSW2, r0x01
0058 0E04      04843         MOVLW   0x04
005A CFDB F000 04844         MOVFF   PLUSW2, r0x02
005E 0E05      04845         MOVLW   0x05
0060 CFDB F000 04846         MOVFF   PLUSW2, r0x03
0064 0E06      04847         MOVLW   0x06
0066 CFDB F000 04848         MOVFF   PLUSW2, r0x04
006A 0E07      04849         MOVLW   0x07
006C CFDB F000 04850         MOVFF   PLUSW2, r0x05
0070 0E08      04851         MOVLW   0x08
0072 CFDB F000 04852         MOVFF   PLUSW2, r0x06
0076 0E09      04853         MOVLW   0x09
0078 CFDB F000 04854         MOVFF   PLUSW2, r0x07
007C 0E0A      04855         MOVLW   0x0a
007E CFDB F000 04856         MOVFF   PLUSW2, r0x08
0082 0E0B      04857         MOVLW   0x0b
0084 CFDB F000 04858         MOVFF   PLUSW2, r0x09
0088 0E0C      04859         MOVLW   0x0c
008A CFDB F000 04860         MOVFF   PLUSW2, r0x0a
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008E 0E0D      04861         MOVLW   0x0d
0090 CFDB F000 04862         MOVFF   PLUSW2, r0x0b
0094 0E0E      04863         MOVLW   0x0e
0096 CFDB F000 04864         MOVFF   PLUSW2, r0x0c
009A 0E0F      04865         MOVLW   0x0f
009C CFDB F000 04866         MOVFF   PLUSW2, r0x0d
00A0 0E10      04867         MOVLW   0x10
00A2 CFDB F000 04868         MOVFF   PLUSW2, r0x0e
00A6 04869 _00413_DS_:
               04870 ;       .line   442; MainDemo.c while(!UDPIsGetReady(*my_socket_recv));
00A6 C000 FFE9 04871         MOVFF   r0x0c, FSR0L
00AA C000 FFF3 04872         MOVFF   r0x0d, PRODL
00AE 5000      04873         MOVF    r0x0e, W
00B0 EC00 F000 04874         CALL    __gptrget1
00B4 6E00      04875         MOVWF   r0x0f
00B6 5000      04876         MOVF    r0x0f, W
00B8 6EE5      04877         MOVWF   POSTDEC1
00BA EC00 F000 04878         CALL    _UDPIsGetReady
00BE 6E00      04879         MOVWF   r0x0f
00C0 CFF3 F000 04880         MOVFF   PRODL, r0x10
00C4 2AE1      04881         INCF    FSR1L, F
00C6 5000      04882         MOVF    r0x0f, W
00C8 1000      04883         IORWF   r0x10, W
00CA E000      04884         BZ      _00413_DS_
               04885 ;       .line   444; MainDemo.c UDPGetArray((BYTE*)bootp_header, sizeof(BOOTP_HEADER)); //Read 34bytes
00CC 0E00      04886         MOVLW   0x00
00CE 6EE5      04887         MOVWF   POSTDEC1
00D0 0E22      04888         MOVLW   0x22
00D2 6EE5      04889         MOVWF   POSTDEC1
00D4 5000      04890         MOVF    r0x05, W
00D6 6EE5      04891         MOVWF   POSTDEC1
00D8 5000      04892         MOVF    r0x04, W
00DA 6EE5      04893         MOVWF   POSTDEC1
00DC 5000      04894         MOVF    r0x03, W
00DE 6EE5      04895         MOVWF   POSTDEC1
00E0 EC00 F000 04896         CALL    _UDPGetArray
00E4 0E05      04897         MOVLW   0x05
00E6 26E1      04898         ADDWF   FSR1L, F
               04899 ;       .line   446; MainDemo.c if(bootp_header->HardwareType != 1 || bootp_header->HardwareLen != 6){
00E8 5000      04900         MOVF    r0x03, W
00EA 0F01      04901         ADDLW   0x01
00EC 6E00      04902         MOVWF   r0x0c
00EE 0E00      04903         MOVLW   0x00
00F0 2000      04904         ADDWFC  r0x04, W
00F2 6E00      04905         MOVWF   r0x0d
00F4 0E00      04906         MOVLW   0x00
00F6 2000      04907         ADDWFC  r0x05, W
00F8 6E00      04908         MOVWF   r0x0e
00FA C000 FFE9 04909         MOVFF   r0x0c, FSR0L
00FE C000 FFF3 04910         MOVFF   r0x0d, PRODL
0102 5000      04911         MOVF    r0x0e, W
0104 EC00 F000 04912         CALL    __gptrget1
0108 6E00      04913         MOVWF   r0x0c
010A 5000      04914         MOVF    r0x0c, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010C 0A01      04915         XORLW   0x01
010E E100      04916         BNZ     _00416_DS_
0110 0E02      04917         MOVLW   0x02
0112 2600      04918         ADDWF   r0x03, F
0114 0E00      04919         MOVLW   0x00
0116 2200      04920         ADDWFC  r0x04, F
0118 0E00      04921         MOVLW   0x00
011A 2200      04922         ADDWFC  r0x05, F
011C C000 FFE9 04923         MOVFF   r0x03, FSR0L
0120 C000 FFF3 04924         MOVFF   r0x04, PRODL
0124 5000      04925         MOVF    r0x05, W
0126 EC00 F000 04926         CALL    __gptrget1
012A 6E00      04927         MOVWF   r0x03
012C 5000      04928         MOVF    r0x03, W
012E 0A06      04929         XORLW   0x06
0130 E000      04930         BZ      _00440_DS_
0132 04931 _00416_DS_:
               04932 ;       .line   447; MainDemo.c return FALSE;
0132 6AE8      04933         CLRF    WREG
0134 D000      04934         BRA     _00434_DS_
0136 04935 _00440_DS_:
               04936 ;       .line   451; MainDemo.c for(i=0; i<zero_to_skip; i++){ // On skip 202 bytes -> 192 + 10
0136 6A00      04937         CLRF    r0x03
0138 6A00      04938         CLRF    r0x04
013A 04939 _00430_DS_:
013A 0E00      04940         MOVLW   0x00
013C 5C00      04941         SUBWF   r0x04, W
013E E100      04942         BNZ     _00452_DS_
0140 0ECA      04943         MOVLW   0xca
0142 5C00      04944         SUBWF   r0x03, W
0144 04945 _00452_DS_:
0144 E200      04946         BC      _00433_DS_
               04947 ;       .line   452; MainDemo.c UDPGet(&opt);
0146 0E00      04948         MOVLW   HIGH(_extract_bootp_header_opt_1_1)
0148 6E00      04949         MOVWF   r0x0c
014A 0E00      04950         MOVLW   LOW(_extract_bootp_header_opt_1_1)
014C 6E00      04951         MOVWF   r0x05
014E 0E80      04952         MOVLW   0x80
0150 6E00      04953         MOVWF   r0x0d
0152 5000      04954         MOVF    r0x0d, W
0154 6EE5      04955         MOVWF   POSTDEC1
0156 5000      04956         MOVF    r0x0c, W
0158 6EE5      04957         MOVWF   POSTDEC1
015A 5000      04958         MOVF    r0x05, W
015C 6EE5      04959         MOVWF   POSTDEC1
015E EC00 F000 04960         CALL    _UDPGet
0162 0E03      04961         MOVLW   0x03
0164 26E1      04962         ADDWF   FSR1L, F
               04963 ;       .line   451; MainDemo.c for(i=0; i<zero_to_skip; i++){ // On skip 202 bytes -> 192 + 10
0166 2A00      04964         INCF    r0x03, F
0168 B0D8      04965         BTFSC   STATUS, 0
016A 2A00      04966         INCF    r0x04, F
016C D000      04967         BRA     _00430_DS_
016E 04968 _00433_DS_:
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               04969 ;       .line   455; MainDemo.c UDPGetArray((BYTE*)&word_buf, sizeof(DWORD));
016E 0E00      04970         MOVLW   HIGH(_extract_bootp_header_word_buf_1_1)
0170 6E00      04971         MOVWF   r0x04
0172 0E00      04972         MOVLW   LOW(_extract_bootp_header_word_buf_1_1)
0174 6E00      04973         MOVWF   r0x03
0176 0E80      04974         MOVLW   0x80
0178 6E00      04975         MOVWF   r0x05
017A 0E00      04976         MOVLW   0x00
017C 6EE5      04977         MOVWF   POSTDEC1
017E 0E04      04978         MOVLW   0x04
0180 6EE5      04979         MOVWF   POSTDEC1
0182 5000      04980         MOVF    r0x05, W
0184 6EE5      04981         MOVWF   POSTDEC1
0186 5000      04982         MOVF    r0x04, W
0188 6EE5      04983         MOVWF   POSTDEC1
018A 5000      04984         MOVF    r0x03, W
018C 6EE5      04985         MOVWF   POSTDEC1
018E EC00 F000 04986         CALL    _UDPGetArray
0192 0E05      04987         MOVLW   0x05
0194 26E1      04988         ADDWF   FSR1L, F
0196 0000      04989         BANKSEL _extract_bootp_header_word_buf_1_1
               04990 ;       .line   456; MainDemo.c if(word_buf != magic_cookie){
0198 5100      04991         MOVF    _extract_bootp_header_word_buf_1_1, W, B
019A 0A63      04992         XORLW   0x63
019C E100      04993         BNZ     _00454_DS_
019E 0000      04994         BANKSEL (_extract_bootp_header_word_buf_1_1 + 1)
01A0 5100      04995         MOVF    (_extract_bootp_header_word_buf_1_1 + 1), W, B
01A2 0A82      04996         XORLW   0x82
01A4 E100      04997         BNZ     _00454_DS_
01A6 0000      04998         BANKSEL (_extract_bootp_header_word_buf_1_1 + 2)
01A8 5100      04999         MOVF    (_extract_bootp_header_word_buf_1_1 + 2), W, B
01AA 0A53      05000         XORLW   0x53
01AC E100      05001         BNZ     _00454_DS_
01AE 0000      05002         BANKSEL (_extract_bootp_header_word_buf_1_1 + 3)
01B0 5100      05003         MOVF    (_extract_bootp_header_word_buf_1_1 + 3), W, B
01B2 0A63      05004         XORLW   0x63
01B4 E000      05005         BZ      _00420_DS_
01B6 05006 _00454_DS_:
               05007 ;       .line   457; MainDemo.c return FALSE;
01B6 6AE8      05008         CLRF    WREG
01B8 D000      05009         BRA     _00434_DS_
01BA 05010 _00420_DS_:
               05011 ;       .line   460; MainDemo.c *dhcp_header_size = 0;
01BA 0E00      05012         MOVLW   0x00
01BC 6EE5      05013         MOVWF   POSTDEC1
01BE 0E00      05014         MOVLW   0x00
01C0 6EF4      05015         MOVWF   PRODH
01C2 C000 FFE9 05016         MOVFF   r0x09, FSR0L
01C6 C000 FFF3 05017         MOVFF   r0x0a, PRODL
01CA 5000      05018         MOVF    r0x0b, W
01CC EC00 F000 05019         CALL    __gptrput2
               05020 ;       .line   461; MainDemo.c wrong_packet = TRUE;
01D0 0E01      05021         MOVLW   0x01
01D2 6E00      05022         MOVWF   r0x03
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01D4 05023 _00427_DS_:
               05024 ;       .line   462; MainDemo.c while(UDPGet(&opt) && opt != DHCP_END_OPTION){
01D4 0E00      05025         MOVLW   HIGH(_extract_bootp_header_opt_1_1)
01D6 6E00      05026         MOVWF   r0x05
01D8 0E00      05027         MOVLW   LOW(_extract_bootp_header_opt_1_1)
01DA 6E00      05028         MOVWF   r0x04
01DC 0E80      05029         MOVLW   0x80
01DE 6E00      05030         MOVWF   r0x0c
01E0 5000      05031         MOVF    r0x0c, W
01E2 6EE5      05032         MOVWF   POSTDEC1
01E4 5000      05033         MOVF    r0x05, W
01E6 6EE5      05034         MOVWF   POSTDEC1
01E8 5000      05035         MOVF    r0x04, W
01EA 6EE5      05036         MOVWF   POSTDEC1
01EC EC00 F000 05037         CALL    _UDPGet
01F0 6E00      05038         MOVWF   r0x04
01F2 0E03      05039         MOVLW   0x03
01F4 26E1      05040         ADDWF   FSR1L, F
01F6 5000      05041         MOVF    r0x04, W
01F8 B4D8      05042         BTFSC   STATUS, 2
01FA D000      05043         BRA     _00429_DS_
01FC C000 F000 05044         MOVFF   _extract_bootp_header_opt_1_1, r0x04
0200 6A00      05045         CLRF    r0x05
0202 5000      05046         MOVF    r0x04, W
0204 0AFF      05047         XORLW   0xff
0206 E100      05048         BNZ     _00456_DS_
0208 5000      05049         MOVF    r0x05, W
020A E100      05050         BNZ     _00456_DS_
020C D000      05051         BRA     _00429_DS_
020E 05052 _00456_DS_:
               05053 ;       .line   463; MainDemo.c UDPGet(&length);
020E 0E00      05054         MOVLW   HIGH(_extract_bootp_header_length_1_1)
0210 6E00      05055         MOVWF   r0x05
0212 0E00      05056         MOVLW   LOW(_extract_bootp_header_length_1_1)
0214 6E00      05057         MOVWF   r0x04
0216 0E80      05058         MOVLW   0x80
0218 6E00      05059         MOVWF   r0x0c
021A 5000      05060         MOVF    r0x0c, W
021C 6EE5      05061         MOVWF   POSTDEC1
021E 5000      05062         MOVF    r0x05, W
0220 6EE5      05063         MOVWF   POSTDEC1
0222 5000      05064         MOVF    r0x04, W
0224 6EE5      05065         MOVWF   POSTDEC1
0226 EC00 F000 05066         CALL    _UDPGet
022A 0E03      05067         MOVLW   0x03
022C 26E1      05068         ADDWF   FSR1L, F
               05069 ;       .line   464; MainDemo.c if(opt == DHCP_MESSAGE_TYPE){
022E C000 F000 05070         MOVFF   _extract_bootp_header_opt_1_1, r0x04
0232 6A00      05071         CLRF    r0x05
0234 5000      05072         MOVF    r0x04, W
0236 0A35      05073         XORLW   0x35
0238 E100      05074         BNZ     _00457_DS_
023A 5000      05075         MOVF    r0x05, W
023C E000      05076         BZ      _00458_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
023E 05077 _00457_DS_:
023E D000      05078         BRA     _00424_DS_
0240 05079 _00458_DS_:
               05080 ;       .line   465; MainDemo.c UDPGet(dhcp_type);
0240 5000      05081         MOVF    r0x02, W
0242 6EE5      05082         MOVWF   POSTDEC1
0244 5000      05083         MOVF    r0x01, W
0246 6EE5      05084         MOVWF   POSTDEC1
0248 5000      05085         MOVF    r0x00, W
024A 6EE5      05086         MOVWF   POSTDEC1
024C EC00 F000 05087         CALL    _UDPGet
0250 0E03      05088         MOVLW   0x03
0252 26E1      05089         ADDWF   FSR1L, F
               05090 ;       .line   466; MainDemo.c wrong_packet = FALSE;
0254 6A00      05091         CLRF    r0x03
0256 D000      05092         BRA     _00427_DS_
0258 05093 _00424_DS_:
               05094 ;       .line   468; MainDemo.c else if(dhcp_header != NULL){
0258 5000      05095         MOVF    r0x06, W
025A 1000      05096         IORWF   r0x07, W
025C 1000      05097         IORWF   r0x08, W
025E B4D8      05098         BTFSC   STATUS, 2
0260 D000      05099         BRA     _00427_DS_
               05100 ;       .line   469; MainDemo.c dhcp_header[*dhcp_header_size] = opt;
0262 C000 FFE9 05101         MOVFF   r0x09, FSR0L
0266 C000 FFF3 05102         MOVFF   r0x0a, PRODL
026A 5000      05103         MOVF    r0x0b, W
026C EC00 F000 05104         CALL    __gptrget2
0270 6E00      05105         MOVWF   r0x04
0272 CFF3 F000 05106         MOVFF   PRODL, r0x05
0276 5000      05107         MOVF    r0x04, W
0278 2400      05108         ADDWF   r0x06, W
027A 6E00      05109         MOVWF   r0x0c
027C 5000      05110         MOVF    r0x05, W
027E 2000      05111         ADDWFC  r0x07, W
0280 6E00      05112         MOVWF   r0x0d
0282 6AE8      05113         CLRF    WREG
0284 BE00      05114         BTFSC   r0x05, 7
0286 68E8      05115         SETF    WREG
0288 2000      05116         ADDWFC  r0x08, W
028A 6E00      05117         MOVWF   r0x0e
028C C000 FFE5 05118         MOVFF   _extract_bootp_header_opt_1_1, POSTDEC1
0290 C000 FFE9 05119         MOVFF   r0x0c, FSR0L
0294 C000 FFF3 05120         MOVFF   r0x0d, PRODL
0298 5000      05121         MOVF    r0x0e, W
029A EC00 F000 05122         CALL    __gptrput1
               05123 ;       .line   470; MainDemo.c dhcp_header[*dhcp_header_size+1] = length;
029E 5000      05124         MOVF    r0x04, W
02A0 0F01      05125         ADDLW   0x01
02A2 6E00      05126         MOVWF   r0x0c
02A4 0E00      05127         MOVLW   0x00
02A6 2000      05128         ADDWFC  r0x05, W
02A8 6E00      05129         MOVWF   r0x0d
02AA 6A00      05130         CLRF    r0x0e
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02AC BE00      05131         BTFSC   r0x0d, 7
02AE 6800      05132         SETF    r0x0e
02B0 5000      05133         MOVF    r0x06, W
02B2 2600      05134         ADDWF   r0x0c, F
02B4 5000      05135         MOVF    r0x07, W
02B6 2200      05136         ADDWFC  r0x0d, F
02B8 5000      05137         MOVF    r0x08, W
02BA 2200      05138         ADDWFC  r0x0e, F
02BC C000 FFE5 05139         MOVFF   _extract_bootp_header_length_1_1, POSTDEC1
02C0 C000 FFE9 05140         MOVFF   r0x0c, FSR0L
02C4 C000 FFF3 05141         MOVFF   r0x0d, PRODL
02C8 5000      05142         MOVF    r0x0e, W
02CA EC00 F000 05143         CALL    __gptrput1
               05144 ;       .line   471; MainDemo.c UDPGetArray(&dhcp_header[*dhcp_header_size+2], length);
02CE 0E02      05145         MOVLW   0x02
02D0 2600      05146         ADDWF   r0x04, F
02D2 B0D8      05147         BTFSC   STATUS, 0
02D4 2A00      05148         INCF    r0x05, F
02D6 6A00      05149         CLRF    r0x0c
02D8 BE00      05150         BTFSC   r0x05, 7
02DA 6800      05151         SETF    r0x0c
02DC 5000      05152         MOVF    r0x06, W
02DE 2600      05153         ADDWF   r0x04, F
02E0 5000      05154         MOVF    r0x07, W
02E2 2200      05155         ADDWFC  r0x05, F
02E4 5000      05156         MOVF    r0x08, W
02E6 2200      05157         ADDWFC  r0x0c, F
02E8 C000 F000 05158         MOVFF   _extract_bootp_header_length_1_1, r0x0d
02EC 6A00      05159         CLRF    r0x0e
02EE 5000      05160         MOVF    r0x0e, W
02F0 6EE5      05161         MOVWF   POSTDEC1
02F2 5000      05162         MOVF    r0x0d, W
02F4 6EE5      05163         MOVWF   POSTDEC1
02F6 5000      05164         MOVF    r0x0c, W
02F8 6EE5      05165         MOVWF   POSTDEC1
02FA 5000      05166         MOVF    r0x05, W
02FC 6EE5      05167         MOVWF   POSTDEC1
02FE 5000      05168         MOVF    r0x04, W
0300 6EE5      05169         MOVWF   POSTDEC1
0302 EC00 F000 05170         CALL    _UDPGetArray
0306 0E05      05171         MOVLW   0x05
0308 26E1      05172         ADDWF   FSR1L, F
               05173 ;       .line   472; MainDemo.c *dhcp_header_size += 2+length;
030A C000 FFE9 05174         MOVFF   r0x09, FSR0L
030E C000 FFF3 05175         MOVFF   r0x0a, PRODL
0312 5000      05176         MOVF    r0x0b, W
0314 EC00 F000 05177         CALL    __gptrget2
0318 6E00      05178         MOVWF   r0x04
031A CFF3 F000 05179         MOVFF   PRODL, r0x05
031E C000 F000 05180         MOVFF   _extract_bootp_header_length_1_1, r0x0c
0322 6A00      05181         CLRF    r0x0d
0324 0E02      05182         MOVLW   0x02
0326 2600      05183         ADDWF   r0x0c, F
0328 B0D8      05184         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
032A 2A00      05185         INCF    r0x0d, F
032C 5000      05186         MOVF    r0x0c, W
032E 2600      05187         ADDWF   r0x04, F
0330 5000      05188         MOVF    r0x0d, W
0332 2200      05189         ADDWFC  r0x05, F
0334 C000 FFE5 05190         MOVFF   r0x04, POSTDEC1
0338 C000 FFF4 05191         MOVFF   r0x05, PRODH
033C C000 FFE9 05192         MOVFF   r0x09, FSR0L
0340 C000 FFF3 05193         MOVFF   r0x0a, PRODL
0344 5000      05194         MOVF    r0x0b, W
0346 EC00 F000 05195         CALL    __gptrput2
034A D000      05196         BRA     _00427_DS_
034C 05197 _00429_DS_:
               05198 ;       .line   475; MainDemo.c return !wrong_packet;
034C 5000      05199         MOVF    r0x03, W
034E 80D8      05200         BSF     STATUS, 0
0350 66E8      05201         TSTFSZ  WREG
0352 90D8      05202         BCF     STATUS, 0
0354 6A00      05203         CLRF    r0x03
0356 3600      05204         RLCF    r0x03, F
0358 5000      05205         MOVF    r0x03, W
035A 05206 _00434_DS_:
035A CFE4 F000 05207         MOVFF   PREINC1, r0x10
035E CFE4 F000 05208         MOVFF   PREINC1, r0x0f
0362 CFE4 F000 05209         MOVFF   PREINC1, r0x0e
0366 CFE4 F000 05210         MOVFF   PREINC1, r0x0d
036A CFE4 F000 05211         MOVFF   PREINC1, r0x0c
036E CFE4 F000 05212         MOVFF   PREINC1, r0x0b
0372 CFE4 F000 05213         MOVFF   PREINC1, r0x0a
0376 CFE4 F000 05214         MOVFF   PREINC1, r0x09
037A CFE4 F000 05215         MOVFF   PREINC1, r0x08
037E CFE4 F000 05216         MOVFF   PREINC1, r0x07
0382 CFE4 F000 05217         MOVFF   PREINC1, r0x06
0386 CFE4 F000 05218         MOVFF   PREINC1, r0x05
038A CFE4 F000 05219         MOVFF   PREINC1, r0x04
038E CFE4 F000 05220         MOVFF   PREINC1, r0x03
0392 CFE4 F000 05221         MOVFF   PREINC1, r0x02
0396 CFE4 F000 05222         MOVFF   PREINC1, r0x01
039A CFE4 F000 05223         MOVFF   PREINC1, r0x00
039E CFE4 FFD9 05224         MOVFF   PREINC1, FSR2L
03A2 0012      05225         RETURN  
               05226 
               05227 ; ; Starting pCode block
               05228 S_MainDemo__wait_network_data   code
0000 05229 _wait_network_data:
               05230 ;       .line   392; MainDemo.c void wait_network_data(BYTE *gateway_MAC){
0000 CFD9 FFE5 05231         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 05232         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 05233         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 05234         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 05235         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 05236         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 05237         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 05238         MOVFF   r0x05, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 C000 FFE5 05239         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 05240         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 05241         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 05242         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 05243         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 05244         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 05245         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 05246         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 05247         MOVFF   r0x0e, POSTDEC1
0044 0E02      05248         MOVLW   0x02
0046 CFDB F000 05249         MOVFF   PLUSW2, r0x00
004A 0E03      05250         MOVLW   0x03
004C CFDB F000 05251         MOVFF   PLUSW2, r0x01
0050 0E04      05252         MOVLW   0x04
0052 CFDB F000 05253         MOVFF   PLUSW2, r0x02
               05254 ;       .line   400; MainDemo.c set_to_dhcp_ip(&dhcp_server_ip);
0056 0E00      05255         MOVLW   HIGH(_wait_network_data_dhcp_server_ip_1_1)
0058 6E00      05256         MOVWF   r0x04
005A 0E00      05257         MOVLW   LOW(_wait_network_data_dhcp_server_ip_1_1)
005C 6E00      05258         MOVWF   r0x03
005E 0E80      05259         MOVLW   0x80
0060 6E00      05260         MOVWF   r0x05
0062 5000      05261         MOVF    r0x05, W
0064 6EE5      05262         MOVWF   POSTDEC1
0066 5000      05263         MOVF    r0x04, W
0068 6EE5      05264         MOVWF   POSTDEC1
006A 5000      05265         MOVF    r0x03, W
006C 6EE5      05266         MOVWF   POSTDEC1
006E EC00 F000 05267         CALL    _set_to_dhcp_ip
0072 0E03      05268         MOVLW   0x03
0074 26E1      05269         ADDWF   FSR1L, F
               05270 ;       .line   402; MainDemo.c socket_sendto_server = UDPOpen(0, NULL, 67);
0076 0E00      05271         MOVLW   0x00
0078 6EE5      05272         MOVWF   POSTDEC1
007A 0E43      05273         MOVLW   0x43
007C 6EE5      05274         MOVWF   POSTDEC1
007E 0E00      05275         MOVLW   0x00
0080 6EE5      05276         MOVWF   POSTDEC1
0082 0E00      05277         MOVLW   0x00
0084 6EE5      05278         MOVWF   POSTDEC1
0086 0E00      05279         MOVLW   0x00
0088 6EE5      05280         MOVWF   POSTDEC1
008A 0E00      05281         MOVLW   0x00
008C 6EE5      05282         MOVWF   POSTDEC1
008E 0E00      05283         MOVLW   0x00
0090 6EE5      05284         MOVWF   POSTDEC1
0092 EC00 F000 05285         CALL    _UDPOpen
0096 6E00      05286         MOVWF   r0x03
0098 0E07      05287         MOVLW   0x07
009A 26E1      05288         ADDWF   FSR1L, F
009C C000 F000 05289         MOVFF   r0x03, _wait_network_data_socket_sendto_server_1_1
               05290 ;       .line   403; MainDemo.c socket_recv = UDPOpen(67, NULL, 0);
00A0 0E00      05291         MOVLW   0x00
00A2 6EE5      05292         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A4 0E00      05293         MOVLW   0x00
00A6 6EE5      05294         MOVWF   POSTDEC1
00A8 0E00      05295         MOVLW   0x00
00AA 6EE5      05296         MOVWF   POSTDEC1
00AC 0E00      05297         MOVLW   0x00
00AE 6EE5      05298         MOVWF   POSTDEC1
00B0 0E00      05299         MOVLW   0x00
00B2 6EE5      05300         MOVWF   POSTDEC1
00B4 0E00      05301         MOVLW   0x00
00B6 6EE5      05302         MOVWF   POSTDEC1
00B8 0E43      05303         MOVLW   0x43
00BA 6EE5      05304         MOVWF   POSTDEC1
00BC EC00 F000 05305         CALL    _UDPOpen
00C0 6E00      05306         MOVWF   r0x04
00C2 0E07      05307         MOVLW   0x07
00C4 26E1      05308         ADDWF   FSR1L, F
00C6 C000 F000 05309         MOVFF   r0x04, _wait_network_data_socket_recv_1_1
               05310 ;       .line   404; MainDemo.c socket_sendto_client = UDPOpen(0, NULL, 68);
00CA 0E00      05311         MOVLW   0x00
00CC 6EE5      05312         MOVWF   POSTDEC1
00CE 0E44      05313         MOVLW   0x44
00D0 6EE5      05314         MOVWF   POSTDEC1
00D2 0E00      05315         MOVLW   0x00
00D4 6EE5      05316         MOVWF   POSTDEC1
00D6 0E00      05317         MOVLW   0x00
00D8 6EE5      05318         MOVWF   POSTDEC1
00DA 0E00      05319         MOVLW   0x00
00DC 6EE5      05320         MOVWF   POSTDEC1
00DE 0E00      05321         MOVLW   0x00
00E0 6EE5      05322         MOVWF   POSTDEC1
00E2 0E00      05323         MOVLW   0x00
00E4 6EE5      05324         MOVWF   POSTDEC1
00E6 EC00 F000 05325         CALL    _UDPOpen
00EA 6E00      05326         MOVWF   r0x05
00EC 0E07      05327         MOVLW   0x07
00EE 26E1      05328         ADDWF   FSR1L, F
00F0 C000 F000 05329         MOVFF   r0x05, _wait_network_data_socket_sendto_client_1_1
               05330 ;       .line   406; MainDemo.c if(socket_sendto_server == INVALID_UDP_SOCKET ||
00F4 6A00      05331         CLRF    r0x06
00F6 5000      05332         MOVF    r0x03, W
00F8 0AFF      05333         XORLW   0xff
00FA E100      05334         BNZ     _00404_DS_
00FC 5000      05335         MOVF    r0x06, W
00FE E000      05336         BZ      _00384_DS_
0100 05337 _00404_DS_:
               05338 ;       .line   407; MainDemo.c socket_recv == INVALID_UDP_SOCKET ||
0100 6A00      05339         CLRF    r0x03
0102 5000      05340         MOVF    r0x04, W
0104 0AFF      05341         XORLW   0xff
0106 E100      05342         BNZ     _00406_DS_
0108 5000      05343         MOVF    r0x03, W
010A E000      05344         BZ      _00384_DS_
010C 05345 _00406_DS_:
               05346 ;       .line   408; MainDemo.c socket_sendto_client == INVALID_UDP_SOCKET){
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010C 6A00      05347         CLRF    r0x03
010E 5000      05348         MOVF    r0x05, W
0110 0AFF      05349         XORLW   0xff
0112 E100      05350         BNZ     _00407_DS_
0114 5000      05351         MOVF    r0x03, W
0116 E000      05352         BZ      _00384_DS_
0118 05353 _00407_DS_:
0118 D000      05354         BRA     _00385_DS_
011A 05355 _00384_DS_:
               05356 ;       .line   410; MainDemo.c DisplayString (0,"invalid socket");
011A 0E00      05357         MOVLW   UPPER(__str_0)
011C 6EE5      05358         MOVWF   POSTDEC1
011E 0E00      05359         MOVLW   HIGH(__str_0)
0120 6EE5      05360         MOVWF   POSTDEC1
0122 0E00      05361         MOVLW   LOW(__str_0)
0124 6EE5      05362         MOVWF   POSTDEC1
0126 0E00      05363         MOVLW   0x00
0128 6EE5      05364         MOVWF   POSTDEC1
012A EC00 F000 05365         CALL    _DisplayString
012E 0E04      05366         MOVLW   0x04
0130 26E1      05367         ADDWF   FSR1L, F
               05368 ;       .line   411; MainDemo.c return;
0132 D000      05369         BRA     _00396_DS_
0134 05370 _00385_DS_:
               05371 ;       .line   413; MainDemo.c LED0_IO = 1; //DEBUG
0134 8000      05372         BSF     _LATJbits, 0
0136 05373 _00394_DS_:
               05374 ;       .line   416; MainDemo.c time_action(&socket_sendto_server);
0136 0E00      05375         MOVLW   HIGH(_wait_network_data_socket_sendto_server_1_1)
0138 6E00      05376         MOVWF   r0x04
013A 0E00      05377         MOVLW   LOW(_wait_network_data_socket_sendto_server_1_1)
013C 6E00      05378         MOVWF   r0x03
013E 0E80      05379         MOVLW   0x80
0140 6E00      05380         MOVWF   r0x05
0142 5000      05381         MOVF    r0x05, W
0144 6EE5      05382         MOVWF   POSTDEC1
0146 5000      05383         MOVF    r0x04, W
0148 6EE5      05384         MOVWF   POSTDEC1
014A 5000      05385         MOVF    r0x03, W
014C 6EE5      05386         MOVWF   POSTDEC1
014E EC00 F000 05387         CALL    _time_action
0152 0E03      05388         MOVLW   0x03
0154 26E1      05389         ADDWF   FSR1L, F
               05390 ;       .line   417; MainDemo.c StackTaskHelp(&last_ip);
0156 0E00      05391         MOVLW   HIGH(_wait_network_data_last_ip_1_1)
0158 6E00      05392         MOVWF   r0x04
015A 0E00      05393         MOVLW   LOW(_wait_network_data_last_ip_1_1)
015C 6E00      05394         MOVWF   r0x03
015E 0E80      05395         MOVLW   0x80
0160 6E00      05396         MOVWF   r0x05
0162 5000      05397         MOVF    r0x05, W
0164 6EE5      05398         MOVWF   POSTDEC1
0166 5000      05399         MOVF    r0x04, W
0168 6EE5      05400         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
016A 5000      05401         MOVF    r0x03, W
016C 6EE5      05402         MOVWF   POSTDEC1
016E EC00 F000 05403         CALL    _StackTaskHelp
0172 0E03      05404         MOVLW   0x03
0174 26E1      05405         ADDWF   FSR1L, F
0176 0000      05406         BANKSEL _wait_network_data_socket_recv_1_1
               05407 ;       .line   419; MainDemo.c if(count = UDPIsGetReady(socket_recv)){
0178 5100      05408         MOVF    _wait_network_data_socket_recv_1_1, W, B
017A 6EE5      05409         MOVWF   POSTDEC1
017C EC00 F000 05410         CALL    _UDPIsGetReady
0180 6E00      05411         MOVWF   r0x03
0182 CFF3 F000 05412         MOVFF   PRODL, r0x04
0186 2AE1      05413         INCF    FSR1L, F
0188 5000      05414         MOVF    r0x03, W
018A 1000      05415         IORWF   r0x04, W
018C E000      05416         BZ      _00394_DS_
               05417 ;       .line   420; MainDemo.c if(ip_cmp(&last_ip, &dhcp_server_ip)){
018E 0E00      05418         MOVLW   HIGH(_wait_network_data_last_ip_1_1)
0190 6E00      05419         MOVWF   r0x04
0192 0E00      05420         MOVLW   LOW(_wait_network_data_last_ip_1_1)
0194 6E00      05421         MOVWF   r0x03
0196 0E80      05422         MOVLW   0x80
0198 6E00      05423         MOVWF   r0x05
019A 0E00      05424         MOVLW   HIGH(_wait_network_data_dhcp_server_ip_1_1)
019C 6E00      05425         MOVWF   r0x07
019E 0E00      05426         MOVLW   LOW(_wait_network_data_dhcp_server_ip_1_1)
01A0 6E00      05427         MOVWF   r0x06
01A2 0E80      05428         MOVLW   0x80
01A4 6E00      05429         MOVWF   r0x08
01A6 5000      05430         MOVF    r0x08, W
01A8 6EE5      05431         MOVWF   POSTDEC1
01AA 5000      05432         MOVF    r0x07, W
01AC 6EE5      05433         MOVWF   POSTDEC1
01AE 5000      05434         MOVF    r0x06, W
01B0 6EE5      05435         MOVWF   POSTDEC1
01B2 5000      05436         MOVF    r0x05, W
01B4 6EE5      05437         MOVWF   POSTDEC1
01B6 5000      05438         MOVF    r0x04, W
01B8 6EE5      05439         MOVWF   POSTDEC1
01BA 5000      05440         MOVF    r0x03, W
01BC 6EE5      05441         MOVWF   POSTDEC1
01BE EC00 F000 05442         CALL    _ip_cmp
01C2 6E00      05443         MOVWF   r0x03
01C4 0E06      05444         MOVLW   0x06
01C6 26E1      05445         ADDWF   FSR1L, F
01C8 5000      05446         MOVF    r0x03, W
01CA E000      05447         BZ      _00389_DS_
               05448 ;       .line   421; MainDemo.c handle_server_msg(&socket_sendto_client, &socket_recv);
01CC 0E00      05449         MOVLW   HIGH(_wait_network_data_socket_sendto_client_1_1)
01CE 6E00      05450         MOVWF   r0x04
01D0 0E00      05451         MOVLW   LOW(_wait_network_data_socket_sendto_client_1_1)
01D2 6E00      05452         MOVWF   r0x03
01D4 0E80      05453         MOVLW   0x80
01D6 6E00      05454         MOVWF   r0x05
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01D8 0E00      05455         MOVLW   HIGH(_wait_network_data_socket_recv_1_1)
01DA 6E00      05456         MOVWF   r0x07
01DC 0E00      05457         MOVLW   LOW(_wait_network_data_socket_recv_1_1)
01DE 6E00      05458         MOVWF   r0x06
01E0 0E80      05459         MOVLW   0x80
01E2 6E00      05460         MOVWF   r0x08
01E4 5000      05461         MOVF    r0x08, W
01E6 6EE5      05462         MOVWF   POSTDEC1
01E8 5000      05463         MOVF    r0x07, W
01EA 6EE5      05464         MOVWF   POSTDEC1
01EC 5000      05465         MOVF    r0x06, W
01EE 6EE5      05466         MOVWF   POSTDEC1
01F0 5000      05467         MOVF    r0x05, W
01F2 6EE5      05468         MOVWF   POSTDEC1
01F4 5000      05469         MOVF    r0x04, W
01F6 6EE5      05470         MOVWF   POSTDEC1
01F8 5000      05471         MOVF    r0x03, W
01FA 6EE5      05472         MOVWF   POSTDEC1
01FC EC00 F000 05473         CALL    _handle_server_msg
0200 0E06      05474         MOVLW   0x06
0202 26E1      05475         ADDWF   FSR1L, F
0204 D000      05476         BRA     _00394_DS_
0206 05477 _00389_DS_:
               05478 ;       .line   424; MainDemo.c handle_client_msg(&socket_sendto_server, &socket_sendto_client, &socket_recv, gateway_MAC, &last_ip);
0206 0E00      05479         MOVLW   HIGH(_wait_network_data_socket_sendto_server_1_1)
0208 6E00      05480         MOVWF   r0x04
020A 0E00      05481         MOVLW   LOW(_wait_network_data_socket_sendto_server_1_1)
020C 6E00      05482         MOVWF   r0x03
020E 0E80      05483         MOVLW   0x80
0210 6E00      05484         MOVWF   r0x05
0212 0E00      05485         MOVLW   HIGH(_wait_network_data_socket_sendto_client_1_1)
0214 6E00      05486         MOVWF   r0x07
0216 0E00      05487         MOVLW   LOW(_wait_network_data_socket_sendto_client_1_1)
0218 6E00      05488         MOVWF   r0x06
021A 0E80      05489         MOVLW   0x80
021C 6E00      05490         MOVWF   r0x08
021E 0E00      05491         MOVLW   HIGH(_wait_network_data_socket_recv_1_1)
0220 6E00      05492         MOVWF   r0x0a
0222 0E00      05493         MOVLW   LOW(_wait_network_data_socket_recv_1_1)
0224 6E00      05494         MOVWF   r0x09
0226 0E80      05495         MOVLW   0x80
0228 6E00      05496         MOVWF   r0x0b
022A 0E00      05497         MOVLW   HIGH(_wait_network_data_last_ip_1_1)
022C 6E00      05498         MOVWF   r0x0d
022E 0E00      05499         MOVLW   LOW(_wait_network_data_last_ip_1_1)
0230 6E00      05500         MOVWF   r0x0c
0232 0E80      05501         MOVLW   0x80
0234 6E00      05502         MOVWF   r0x0e
0236 5000      05503         MOVF    r0x0e, W
0238 6EE5      05504         MOVWF   POSTDEC1
023A 5000      05505         MOVF    r0x0d, W
023C 6EE5      05506         MOVWF   POSTDEC1
023E 5000      05507         MOVF    r0x0c, W
0240 6EE5      05508         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0242 5000      05509         MOVF    r0x02, W
0244 6EE5      05510         MOVWF   POSTDEC1
0246 5000      05511         MOVF    r0x01, W
0248 6EE5      05512         MOVWF   POSTDEC1
024A 5000      05513         MOVF    r0x00, W
024C 6EE5      05514         MOVWF   POSTDEC1
024E 5000      05515         MOVF    r0x0b, W
0250 6EE5      05516         MOVWF   POSTDEC1
0252 5000      05517         MOVF    r0x0a, W
0254 6EE5      05518         MOVWF   POSTDEC1
0256 5000      05519         MOVF    r0x09, W
0258 6EE5      05520         MOVWF   POSTDEC1
025A 5000      05521         MOVF    r0x08, W
025C 6EE5      05522         MOVWF   POSTDEC1
025E 5000      05523         MOVF    r0x07, W
0260 6EE5      05524         MOVWF   POSTDEC1
0262 5000      05525         MOVF    r0x06, W
0264 6EE5      05526         MOVWF   POSTDEC1
0266 5000      05527         MOVF    r0x05, W
0268 6EE5      05528         MOVWF   POSTDEC1
026A 5000      05529         MOVF    r0x04, W
026C 6EE5      05530         MOVWF   POSTDEC1
026E 5000      05531         MOVF    r0x03, W
0270 6EE5      05532         MOVWF   POSTDEC1
0272 EC00 F000 05533         CALL    _handle_client_msg
0276 0E0F      05534         MOVLW   0x0f
0278 26E1      05535         ADDWF   FSR1L, F
027A D000      05536         BRA     _00394_DS_
027C 05537 _00396_DS_:
027C CFE4 F000 05538         MOVFF   PREINC1, r0x0e
0280 CFE4 F000 05539         MOVFF   PREINC1, r0x0d
0284 CFE4 F000 05540         MOVFF   PREINC1, r0x0c
0288 CFE4 F000 05541         MOVFF   PREINC1, r0x0b
028C CFE4 F000 05542         MOVFF   PREINC1, r0x0a
0290 CFE4 F000 05543         MOVFF   PREINC1, r0x09
0294 CFE4 F000 05544         MOVFF   PREINC1, r0x08
0298 CFE4 F000 05545         MOVFF   PREINC1, r0x07
029C CFE4 F000 05546         MOVFF   PREINC1, r0x06
02A0 CFE4 F000 05547         MOVFF   PREINC1, r0x05
02A4 CFE4 F000 05548         MOVFF   PREINC1, r0x04
02A8 CFE4 F000 05549         MOVFF   PREINC1, r0x03
02AC CFE4 F000 05550         MOVFF   PREINC1, r0x02
02B0 CFE4 F000 05551         MOVFF   PREINC1, r0x01
02B4 CFE4 F000 05552         MOVFF   PREINC1, r0x00
02B8 CFE4 FFD9 05553         MOVFF   PREINC1, FSR2L
02BC 0012      05554         RETURN  
               05555 
               05556 ; ; Starting pCode block
               05557 S_MainDemo__send_release        code
0000 05558 _send_release:
               05559 ;       .line   375; MainDemo.c void send_release(UDP_SOCKET *socket_sendto_server, IP_ADDR *ip, MAC_ADDR *mac){
0000 CFD9 FFE5 05560         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 05561         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 05562         MOVFF   r0x00, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000C C000 FFE5 05563         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 05564         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 05565         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 05566         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 05567         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 05568         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 05569         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 05570         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 05571         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 05572         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 05573         MOVFF   r0x0b, POSTDEC1
0038 0E02      05574         MOVLW   0x02
003A CFDB F000 05575         MOVFF   PLUSW2, r0x00
003E 0E03      05576         MOVLW   0x03
0040 CFDB F000 05577         MOVFF   PLUSW2, r0x01
0044 0E04      05578         MOVLW   0x04
0046 CFDB F000 05579         MOVFF   PLUSW2, r0x02
004A 0E05      05580         MOVLW   0x05
004C CFDB F000 05581         MOVFF   PLUSW2, r0x03
0050 0E06      05582         MOVLW   0x06
0052 CFDB F000 05583         MOVFF   PLUSW2, r0x04
0056 0E07      05584         MOVLW   0x07
0058 CFDB F000 05585         MOVFF   PLUSW2, r0x05
005C 0E08      05586         MOVLW   0x08
005E CFDB F000 05587         MOVFF   PLUSW2, r0x06
0062 0E09      05588         MOVLW   0x09
0064 CFDB F000 05589         MOVFF   PLUSW2, r0x07
0068 0E0A      05590         MOVLW   0x0a
006A CFDB F000 05591         MOVFF   PLUSW2, r0x08
006E 05592 _00376_DS_:
               05593 ;       .line   377; MainDemo.c while(!UDPIsPutReady(*socket_sendto_server));
006E C000 FFE9 05594         MOVFF   r0x00, FSR0L
0072 C000 FFF3 05595         MOVFF   r0x01, PRODL
0076 5000      05596         MOVF    r0x02, W
0078 EC00 F000 05597         CALL    __gptrget1
007C 6E00      05598         MOVWF   r0x09
007E 5000      05599         MOVF    r0x09, W
0080 6EE5      05600         MOVWF   POSTDEC1
0082 EC00 F000 05601         CALL    _UDPIsPutReady
0086 6E00      05602         MOVWF   r0x09
0088 CFF3 F000 05603         MOVFF   PRODL, r0x0a
008C 2AE1      05604         INCF    FSR1L, F
008E 5000      05605         MOVF    r0x09, W
0090 1000      05606         IORWF   r0x0a, W
0092 E000      05607         BZ      _00376_DS_
               05608 ;       .line   378; MainDemo.c set_mac_to_dhcp_server();
0094 EC00 F000 05609         CALL    _set_mac_to_dhcp_server
               05610 ;       .line   379; MainDemo.c forgeBootpHeaderAck(&bootp_header, 0, ip, ip, mac);
0098 0E00      05611         MOVLW   HIGH(_send_release_bootp_header_1_1)
009A 6E00      05612         MOVWF   r0x0a
009C 0E00      05613         MOVLW   LOW(_send_release_bootp_header_1_1)
009E 6E00      05614         MOVWF   r0x09
00A0 0E80      05615         MOVLW   0x80
00A2 6E00      05616         MOVWF   r0x0b
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A4 5000      05617         MOVF    r0x08, W
00A6 6EE5      05618         MOVWF   POSTDEC1
00A8 5000      05619         MOVF    r0x07, W
00AA 6EE5      05620         MOVWF   POSTDEC1
00AC 5000      05621         MOVF    r0x06, W
00AE 6EE5      05622         MOVWF   POSTDEC1
00B0 5000      05623         MOVF    r0x05, W
00B2 6EE5      05624         MOVWF   POSTDEC1
00B4 5000      05625         MOVF    r0x04, W
00B6 6EE5      05626         MOVWF   POSTDEC1
00B8 5000      05627         MOVF    r0x03, W
00BA 6EE5      05628         MOVWF   POSTDEC1
00BC 5000      05629         MOVF    r0x05, W
00BE 6EE5      05630         MOVWF   POSTDEC1
00C0 5000      05631         MOVF    r0x04, W
00C2 6EE5      05632         MOVWF   POSTDEC1
00C4 5000      05633         MOVF    r0x03, W
00C6 6EE5      05634         MOVWF   POSTDEC1
00C8 0E00      05635         MOVLW   0x00
00CA 6EE5      05636         MOVWF   POSTDEC1
00CC 0E00      05637         MOVLW   0x00
00CE 6EE5      05638         MOVWF   POSTDEC1
00D0 0E00      05639         MOVLW   0x00
00D2 6EE5      05640         MOVWF   POSTDEC1
00D4 0E00      05641         MOVLW   0x00
00D6 6EE5      05642         MOVWF   POSTDEC1
00D8 5000      05643         MOVF    r0x0b, W
00DA 6EE5      05644         MOVWF   POSTDEC1
00DC 5000      05645         MOVF    r0x0a, W
00DE 6EE5      05646         MOVWF   POSTDEC1
00E0 5000      05647         MOVF    r0x09, W
00E2 6EE5      05648         MOVWF   POSTDEC1
00E4 EC00 F000 05649         CALL    _forgeBootpHeaderAck
00E8 0E10      05650         MOVLW   0x10
00EA 26E1      05651         ADDWF   FSR1L, F
               05652 ;       .line   380; MainDemo.c build_bootp(&bootp_header, socket_sendto_server);
00EC 0E00      05653         MOVLW   HIGH(_send_release_bootp_header_1_1)
00EE 6E00      05654         MOVWF   r0x04
00F0 0E00      05655         MOVLW   LOW(_send_release_bootp_header_1_1)
00F2 6E00      05656         MOVWF   r0x03
00F4 0E80      05657         MOVLW   0x80
00F6 6E00      05658         MOVWF   r0x05
00F8 5000      05659         MOVF    r0x02, W
00FA 6EE5      05660         MOVWF   POSTDEC1
00FC 5000      05661         MOVF    r0x01, W
00FE 6EE5      05662         MOVWF   POSTDEC1
0100 5000      05663         MOVF    r0x00, W
0102 6EE5      05664         MOVWF   POSTDEC1
0104 5000      05665         MOVF    r0x05, W
0106 6EE5      05666         MOVWF   POSTDEC1
0108 5000      05667         MOVF    r0x04, W
010A 6EE5      05668         MOVWF   POSTDEC1
010C 5000      05669         MOVF    r0x03, W
010E 6EE5      05670         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0110 EC00 F000 05671         CALL    _build_bootp
0114 0E06      05672         MOVLW   0x06
0116 26E1      05673         ADDWF   FSR1L, F
               05674 ;       .line   381; MainDemo.c UDPPut(DHCP_RELEASE_MESSAGE);
0118 0E07      05675         MOVLW   0x07
011A 6EE5      05676         MOVWF   POSTDEC1
011C EC00 F000 05677         CALL    _UDPPut
0120 2AE1      05678         INCF    FSR1L, F
               05679 ;       .line   383; MainDemo.c UDPPut(DHCP_SERVER_IDENTIFIER);
0122 0E36      05680         MOVLW   0x36
0124 6EE5      05681         MOVWF   POSTDEC1
0126 EC00 F000 05682         CALL    _UDPPut
012A 2AE1      05683         INCF    FSR1L, F
               05684 ;       .line   384; MainDemo.c UDPPut(sizeof(IP_ADDR));
012C 0E04      05685         MOVLW   0x04
012E 6EE5      05686         MOVWF   POSTDEC1
0130 EC00 F000 05687         CALL    _UDPPut
0134 2AE1      05688         INCF    FSR1L, F
               05689 ;       .line   385; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
0136 0E00      05690         MOVLW   HIGH(_AppConfig)
0138 6E00      05691         MOVWF   r0x01
013A 0E00      05692         MOVLW   LOW(_AppConfig)
013C 6E00      05693         MOVWF   r0x00
013E 0E80      05694         MOVLW   0x80
0140 6E00      05695         MOVWF   r0x02
0142 0E00      05696         MOVLW   0x00
0144 6EE5      05697         MOVWF   POSTDEC1
0146 0E04      05698         MOVLW   0x04
0148 6EE5      05699         MOVWF   POSTDEC1
014A 5000      05700         MOVF    r0x02, W
014C 6EE5      05701         MOVWF   POSTDEC1
014E 5000      05702         MOVF    r0x01, W
0150 6EE5      05703         MOVWF   POSTDEC1
0152 5000      05704         MOVF    r0x00, W
0154 6EE5      05705         MOVWF   POSTDEC1
0156 EC00 F000 05706         CALL    _UDPPutArray
015A 0E05      05707         MOVLW   0x05
015C 26E1      05708         ADDWF   FSR1L, F
               05709 ;       .line   387; MainDemo.c end_dhcp();
015E EC00 F000 05710         CALL    _end_dhcp
               05711 ;       .line   389; MainDemo.c UDPFlush();
0162 EC00 F000 05712         CALL    _UDPFlush
0166 CFE4 F000 05713         MOVFF   PREINC1, r0x0b
016A CFE4 F000 05714         MOVFF   PREINC1, r0x0a
016E CFE4 F000 05715         MOVFF   PREINC1, r0x09
0172 CFE4 F000 05716         MOVFF   PREINC1, r0x08
0176 CFE4 F000 05717         MOVFF   PREINC1, r0x07
017A CFE4 F000 05718         MOVFF   PREINC1, r0x06
017E CFE4 F000 05719         MOVFF   PREINC1, r0x05
0182 CFE4 F000 05720         MOVFF   PREINC1, r0x04
0186 CFE4 F000 05721         MOVFF   PREINC1, r0x03
018A CFE4 F000 05722         MOVFF   PREINC1, r0x02
018E CFE4 F000 05723         MOVFF   PREINC1, r0x01
0192 CFE4 F000 05724         MOVFF   PREINC1, r0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0196 CFE4 FFD9 05725         MOVFF   PREINC1, FSR2L
019A 0012      05726         RETURN  
               05727 
               05728 ; ; Starting pCode block
               05729 S_MainDemo__update_pool code
0000 05730 _update_pool:
               05731 ;       .line   346; MainDemo.c void update_pool(UDP_SOCKET *socket_sendto_server){
0000 CFD9 FFE5 05732         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 05733         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 05734         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 05735         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 05736         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 05737         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 05738         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 05739         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 05740         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 05741         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 05742         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 05743         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 05744         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 05745         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 05746         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 05747         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 05748         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 05749         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 05750         MOVFF   r0x10, POSTDEC1
004C 0E02      05751         MOVLW   0x02
004E CFDB F000 05752         MOVFF   PLUSW2, r0x00
0052 0E03      05753         MOVLW   0x03
0054 CFDB F000 05754         MOVFF   PLUSW2, r0x01
0058 0E04      05755         MOVLW   0x04
005A CFDB F000 05756         MOVFF   PLUSW2, r0x02
               05757 ;       .line   348; MainDemo.c for(i=0; i<POOL_SIZE; i++){
005E 6A00      05758         CLRF    r0x03
0060 6A00      05759         CLRF    r0x04
0062 6A00      05760         CLRF    r0x05
0064 6A00      05761         CLRF    r0x06
0066 6A00      05762         CLRF    r0x07
0068 6A00      05763         CLRF    r0x08
006A 05764 _00353_DS_:
006A 5000      05765         MOVF    r0x04, W
006C 0F80      05766         ADDLW   0x80
006E 0F80      05767         ADDLW   0x80
0070 E100      05768         BNZ     _00367_DS_
0072 0E0A      05769         MOVLW   0x0a
0074 5C00      05770         SUBWF   r0x03, W
0076 05771 _00367_DS_:
0076 B0D8      05772         BTFSC   STATUS, 0
0078 D000      05773         BRA     _00357_DS_
               05774 ;       .line   349; MainDemo.c if(!is_free(&pool[i])){
007A 0E00      05775         MOVLW   LOW(_pool)
007C 2400      05776         ADDWF   r0x07, W
007E 6E00      05777         MOVWF   r0x09
0080 0E00      05778         MOVLW   HIGH(_pool)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0082 2000      05779         ADDWFC  r0x08, W
0084 6E00      05780         MOVWF   r0x0a
0086 5000      05781         MOVF    r0x0a, W
0088 6E00      05782         MOVWF   r0x0a
008A 5000      05783         MOVF    r0x09, W
008C 6E00      05784         MOVWF   r0x09
008E 0E80      05785         MOVLW   0x80
0090 6E00      05786         MOVWF   r0x0b
0092 5000      05787         MOVF    r0x0b, W
0094 6EE5      05788         MOVWF   POSTDEC1
0096 5000      05789         MOVF    r0x0a, W
0098 6EE5      05790         MOVWF   POSTDEC1
009A 5000      05791         MOVF    r0x09, W
009C 6EE5      05792         MOVWF   POSTDEC1
009E EC00 F000 05793         CALL    _is_free
00A2 6E00      05794         MOVWF   r0x09
00A4 0E03      05795         MOVLW   0x03
00A6 26E1      05796         ADDWF   FSR1L, F
00A8 5000      05797         MOVF    r0x09, W
00AA A4D8      05798         BTFSS   STATUS, 2
00AC D000      05799         BRA     _00355_DS_
               05800 ;       .line   351; MainDemo.c if(pool[i].server_deadline < 60)
00AE 0E00      05801         MOVLW   LOW(_pool)
00B0 2400      05802         ADDWF   r0x07, W
00B2 6E00      05803         MOVWF   r0x09
00B4 0E00      05804         MOVLW   HIGH(_pool)
00B6 2000      05805         ADDWFC  r0x08, W
00B8 6E00      05806         MOVWF   r0x0a
00BA 0E0E      05807         MOVLW   0x0e
00BC 2600      05808         ADDWF   r0x09, F
00BE B0D8      05809         BTFSC   STATUS, 0
00C0 2A00      05810         INCF    r0x0a, F
00C2 C000 FFE9 05811         MOVFF   r0x09, FSR0L
00C6 C000 FFEA 05812         MOVFF   r0x0a, FSR0H
00CA CFEE F000 05813         MOVFF   POSTINC0, r0x0b
00CE CFEE F000 05814         MOVFF   POSTINC0, r0x0c
00D2 CFEE F000 05815         MOVFF   POSTINC0, r0x0d
00D6 CFEF F000 05816         MOVFF   INDF0, r0x0e
00DA 0E00      05817         MOVLW   0x00
00DC 5C00      05818         SUBWF   r0x0e, W
00DE E100      05819         BNZ     _00368_DS_
00E0 0E00      05820         MOVLW   0x00
00E2 5C00      05821         SUBWF   r0x0d, W
00E4 E100      05822         BNZ     _00368_DS_
00E6 0E00      05823         MOVLW   0x00
00E8 5C00      05824         SUBWF   r0x0c, W
00EA E100      05825         BNZ     _00368_DS_
00EC 0E3C      05826         MOVLW   0x3c
00EE 5C00      05827         SUBWF   r0x0b, W
00F0 05828 _00368_DS_:
00F0 E200      05829         BC      _00342_DS_
               05830 ;       .line   352; MainDemo.c pool[i].server_deadline = 0;
00F2 C000 FFE9 05831         MOVFF   r0x09, FSR0L
00F6 C000 FFEA 05832         MOVFF   r0x0a, FSR0H
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FA 0E00      05833         MOVLW   0x00
00FC 6EEE      05834         MOVWF   POSTINC0
00FE 0E00      05835         MOVLW   0x00
0100 6EEE      05836         MOVWF   POSTINC0
0102 0E00      05837         MOVLW   0x00
0104 6EEE      05838         MOVWF   POSTINC0
0106 0E00      05839         MOVLW   0x00
0108 6EEF      05840         MOVWF   INDF0
010A D000      05841         BRA     _00343_DS_
010C 05842 _00342_DS_:
               05843 ;       .line   353; MainDemo.c else pool[i].server_deadline -= 60;
010C C000 FFE9 05844         MOVFF   r0x09, FSR0L
0110 C000 FFEA 05845         MOVFF   r0x0a, FSR0H
0114 CFEE F000 05846         MOVFF   POSTINC0, r0x0b
0118 CFEE F000 05847         MOVFF   POSTINC0, r0x0c
011C CFEE F000 05848         MOVFF   POSTINC0, r0x0d
0120 CFEF F000 05849         MOVFF   INDF0, r0x0e
0124 0EC4      05850         MOVLW   0xc4
0126 2600      05851         ADDWF   r0x0b, F
0128 0EFF      05852         MOVLW   0xff
012A 2200      05853         ADDWFC  r0x0c, F
012C 0EFF      05854         MOVLW   0xff
012E 2200      05855         ADDWFC  r0x0d, F
0130 0EFF      05856         MOVLW   0xff
0132 2200      05857         ADDWFC  r0x0e, F
0134 C000 FFE9 05858         MOVFF   r0x09, FSR0L
0138 C000 FFEA 05859         MOVFF   r0x0a, FSR0H
013C C000 FFEE 05860         MOVFF   r0x0b, POSTINC0
0140 C000 FFEE 05861         MOVFF   r0x0c, POSTINC0
0144 C000 FFEE 05862         MOVFF   r0x0d, POSTINC0
0148 C000 FFEF 05863         MOVFF   r0x0e, INDF0
014C 05864 _00343_DS_:
               05865 ;       .line   355; MainDemo.c if(pool[i].client_deadline <= 60){
014C 0E00      05866         MOVLW   LOW(_pool)
014E 2400      05867         ADDWF   r0x05, W
0150 6E00      05868         MOVWF   r0x09
0152 0E00      05869         MOVLW   HIGH(_pool)
0154 2000      05870         ADDWFC  r0x06, W
0156 6E00      05871         MOVWF   r0x0a
0158 5000      05872         MOVF    r0x09, W
015A 0F0A      05873         ADDLW   0x0a
015C 6E00      05874         MOVWF   r0x0b
015E 0E00      05875         MOVLW   0x00
0160 2000      05876         ADDWFC  r0x0a, W
0162 6E00      05877         MOVWF   r0x0c
0164 C000 FFE9 05878         MOVFF   r0x0b, FSR0L
0168 C000 FFEA 05879         MOVFF   r0x0c, FSR0H
016C CFEE F000 05880         MOVFF   POSTINC0, r0x0d
0170 CFEE F000 05881         MOVFF   POSTINC0, r0x0e
0174 CFEE F000 05882         MOVFF   POSTINC0, r0x0f
0178 CFEF F000 05883         MOVFF   INDF0, r0x10
017C 0E00      05884         MOVLW   0x00
017E 5C00      05885         SUBWF   r0x10, W
0180 E100      05886         BNZ     _00369_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0182 0E00      05887         MOVLW   0x00
0184 5C00      05888         SUBWF   r0x0f, W
0186 E100      05889         BNZ     _00369_DS_
0188 0E00      05890         MOVLW   0x00
018A 5C00      05891         SUBWF   r0x0e, W
018C E100      05892         BNZ     _00369_DS_
018E 0E3D      05893         MOVLW   0x3d
0190 5C00      05894         SUBWF   r0x0d, W
0192 05895 _00369_DS_:
0192 B0D8      05896         BTFSC   STATUS, 0
0194 D000      05897         BRA     _00347_DS_
               05898 ;       .line   357; MainDemo.c pool[i].miss_counter++;
0196 5000      05899         MOVF    r0x09, W
0198 0F12      05900         ADDLW   0x12
019A 6E00      05901         MOVWF   r0x0d
019C 0E00      05902         MOVLW   0x00
019E 2000      05903         ADDWFC  r0x0a, W
01A0 6E00      05904         MOVWF   r0x0e
01A2 C000 FFE9 05905         MOVFF   r0x0d, FSR0L
01A6 C000 FFEA 05906         MOVFF   r0x0e, FSR0H
01AA CFEE F000 05907         MOVFF   POSTINC0, r0x0f
01AE CFEF F000 05908         MOVFF   INDF0, r0x10
01B2 2A00      05909         INCF    r0x0f, F
01B4 B0D8      05910         BTFSC   STATUS, 0
01B6 2A00      05911         INCF    r0x10, F
01B8 C000 FFE9 05912         MOVFF   r0x0d, FSR0L
01BC C000 FFEA 05913         MOVFF   r0x0e, FSR0H
01C0 C000 FFEE 05914         MOVFF   r0x0f, POSTINC0
01C4 C000 FFEF 05915         MOVFF   r0x10, INDF0
               05916 ;       .line   358; MainDemo.c pool[i].client_deadline = RELAY_LEASE_TIME;
01C8 C000 FFE9 05917         MOVFF   r0x0b, FSR0L
01CC C000 FFEA 05918         MOVFF   r0x0c, FSR0H
01D0 0E2C      05919         MOVLW   0x2c
01D2 6EEE      05920         MOVWF   POSTINC0
01D4 0E01      05921         MOVLW   0x01
01D6 6EEE      05922         MOVWF   POSTINC0
01D8 0E00      05923         MOVLW   0x00
01DA 6EEE      05924         MOVWF   POSTINC0
01DC 0E00      05925         MOVLW   0x00
01DE 6EEF      05926         MOVWF   INDF0
               05927 ;       .line   360; MainDemo.c if(pool[i].miss_counter >= 5){
01E0 0E00      05928         MOVLW   0x00
01E2 5C00      05929         SUBWF   r0x10, W
01E4 E100      05930         BNZ     _00370_DS_
01E6 0E05      05931         MOVLW   0x05
01E8 5C00      05932         SUBWF   r0x0f, W
01EA 05933 _00370_DS_:
01EA A0D8      05934         BTFSS   STATUS, 0
01EC D000      05935         BRA     _00348_DS_
               05936 ;       .line   362; MainDemo.c send_release(socket_sendto_server, &pool[i].ip, &pool[i].mac);
01EE C000 F000 05937         MOVFF   r0x09, r0x0d
01F2 C000 F000 05938         MOVFF   r0x0a, r0x0e
01F6 5000      05939         MOVF    r0x0e, W
01F8 6E00      05940         MOVWF   r0x0e
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01FA 5000      05941         MOVF    r0x0d, W
01FC 6E00      05942         MOVWF   r0x0d
01FE 0E80      05943         MOVLW   0x80
0200 6E00      05944         MOVWF   r0x0f
0202 0E04      05945         MOVLW   0x04
0204 2600      05946         ADDWF   r0x09, F
0206 B0D8      05947         BTFSC   STATUS, 0
0208 2A00      05948         INCF    r0x0a, F
020A 5000      05949         MOVF    r0x0a, W
020C 6E00      05950         MOVWF   r0x0a
020E 5000      05951         MOVF    r0x09, W
0210 6E00      05952         MOVWF   r0x09
0212 0E80      05953         MOVLW   0x80
0214 6E00      05954         MOVWF   r0x10
0216 5000      05955         MOVF    r0x10, W
0218 6EE5      05956         MOVWF   POSTDEC1
021A 5000      05957         MOVF    r0x0a, W
021C 6EE5      05958         MOVWF   POSTDEC1
021E 5000      05959         MOVF    r0x09, W
0220 6EE5      05960         MOVWF   POSTDEC1
0222 5000      05961         MOVF    r0x0f, W
0224 6EE5      05962         MOVWF   POSTDEC1
0226 5000      05963         MOVF    r0x0e, W
0228 6EE5      05964         MOVWF   POSTDEC1
022A 5000      05965         MOVF    r0x0d, W
022C 6EE5      05966         MOVWF   POSTDEC1
022E 5000      05967         MOVF    r0x02, W
0230 6EE5      05968         MOVWF   POSTDEC1
0232 5000      05969         MOVF    r0x01, W
0234 6EE5      05970         MOVWF   POSTDEC1
0236 5000      05971         MOVF    r0x00, W
0238 6EE5      05972         MOVWF   POSTDEC1
023A EC00 F000 05973         CALL    _send_release
023E 0E09      05974         MOVLW   0x09
0240 26E1      05975         ADDWF   FSR1L, F
               05976 ;       .line   363; MainDemo.c remove_from_pool(&pool[i].ip);
0242 0E00      05977         MOVLW   LOW(_pool)
0244 2400      05978         ADDWF   r0x05, W
0246 6E00      05979         MOVWF   r0x09
0248 0E00      05980         MOVLW   HIGH(_pool)
024A 2000      05981         ADDWFC  r0x06, W
024C 6E00      05982         MOVWF   r0x0a
024E 5000      05983         MOVF    r0x0a, W
0250 6E00      05984         MOVWF   r0x0a
0252 5000      05985         MOVF    r0x09, W
0254 6E00      05986         MOVWF   r0x09
0256 0E80      05987         MOVLW   0x80
0258 6E00      05988         MOVWF   r0x0d
025A 5000      05989         MOVF    r0x0d, W
025C 6EE5      05990         MOVWF   POSTDEC1
025E 5000      05991         MOVF    r0x0a, W
0260 6EE5      05992         MOVWF   POSTDEC1
0262 5000      05993         MOVF    r0x09, W
0264 6EE5      05994         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0266 EC00 F000 05995         CALL    _remove_from_pool
026A 0E03      05996         MOVLW   0x03
026C 26E1      05997         ADDWF   FSR1L, F
               05998 ;       .line   364; MainDemo.c continue; 
026E D000      05999         BRA     _00355_DS_
0270 06000 _00347_DS_:
               06001 ;       .line   367; MainDemo.c else pool[i].client_deadline -= 60;            
0270 C000 FFE9 06002         MOVFF   r0x0b, FSR0L
0274 C000 FFEA 06003         MOVFF   r0x0c, FSR0H
0278 CFEE F000 06004         MOVFF   POSTINC0, r0x09
027C CFEE F000 06005         MOVFF   POSTINC0, r0x0a
0280 CFEE F000 06006         MOVFF   POSTINC0, r0x0d
0284 CFEF F000 06007         MOVFF   INDF0, r0x0e
0288 0EC4      06008         MOVLW   0xc4
028A 2600      06009         ADDWF   r0x09, F
028C 0EFF      06010         MOVLW   0xff
028E 2200      06011         ADDWFC  r0x0a, F
0290 0EFF      06012         MOVLW   0xff
0292 2200      06013         ADDWFC  r0x0d, F
0294 0EFF      06014         MOVLW   0xff
0296 2200      06015         ADDWFC  r0x0e, F
0298 C000 FFE9 06016         MOVFF   r0x0b, FSR0L
029C C000 FFEA 06017         MOVFF   r0x0c, FSR0H
02A0 C000 FFEE 06018         MOVFF   r0x09, POSTINC0
02A4 C000 FFEE 06019         MOVFF   r0x0a, POSTINC0
02A8 C000 FFEE 06020         MOVFF   r0x0d, POSTINC0
02AC C000 FFEF 06021         MOVFF   r0x0e, INDF0
02B0 06022 _00348_DS_:
               06023 ;       .line   368; MainDemo.c if(pool[i].server_deadline <= RELAY_LEASE_TIME){
02B0 0E00      06024         MOVLW   LOW(_pool)
02B2 2400      06025         ADDWF   r0x05, W
02B4 6E00      06026         MOVWF   r0x09
02B6 0E00      06027         MOVLW   HIGH(_pool)
02B8 2000      06028         ADDWFC  r0x06, W
02BA 6E00      06029         MOVWF   r0x0a
02BC 5000      06030         MOVF    r0x09, W
02BE 0F0E      06031         ADDLW   0x0e
02C0 6E00      06032         MOVWF   r0x0b
02C2 0E00      06033         MOVLW   0x00
02C4 2000      06034         ADDWFC  r0x0a, W
02C6 6E00      06035         MOVWF   r0x0c
02C8 C000 FFE9 06036         MOVFF   r0x0b, FSR0L
02CC C000 FFEA 06037         MOVFF   r0x0c, FSR0H
02D0 CFEE F000 06038         MOVFF   POSTINC0, r0x0b
02D4 CFEE F000 06039         MOVFF   POSTINC0, r0x0c
02D8 CFEE F000 06040         MOVFF   POSTINC0, r0x0d
02DC CFEF F000 06041         MOVFF   INDF0, r0x0e
02E0 0E00      06042         MOVLW   0x00
02E2 5C00      06043         SUBWF   r0x0e, W
02E4 E100      06044         BNZ     _00371_DS_
02E6 0E00      06045         MOVLW   0x00
02E8 5C00      06046         SUBWF   r0x0d, W
02EA E100      06047         BNZ     _00371_DS_
02EC 0E01      06048         MOVLW   0x01
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02EE 5C00      06049         SUBWF   r0x0c, W
02F0 E100      06050         BNZ     _00371_DS_
02F2 0E2D      06051         MOVLW   0x2d
02F4 5C00      06052         SUBWF   r0x0b, W
02F6 06053 _00371_DS_:
02F6 E200      06054         BC      _00355_DS_
               06055 ;       .line   369; MainDemo.c send_request(socket_sendto_server, &pool[i]);       
02F8 5000      06056         MOVF    r0x0a, W
02FA 6E00      06057         MOVWF   r0x0a
02FC 5000      06058         MOVF    r0x09, W
02FE 6E00      06059         MOVWF   r0x09
0300 0E80      06060         MOVLW   0x80
0302 6E00      06061         MOVWF   r0x0b
0304 5000      06062         MOVF    r0x0b, W
0306 6EE5      06063         MOVWF   POSTDEC1
0308 5000      06064         MOVF    r0x0a, W
030A 6EE5      06065         MOVWF   POSTDEC1
030C 5000      06066         MOVF    r0x09, W
030E 6EE5      06067         MOVWF   POSTDEC1
0310 5000      06068         MOVF    r0x02, W
0312 6EE5      06069         MOVWF   POSTDEC1
0314 5000      06070         MOVF    r0x01, W
0316 6EE5      06071         MOVWF   POSTDEC1
0318 5000      06072         MOVF    r0x00, W
031A 6EE5      06073         MOVWF   POSTDEC1
031C EC00 F000 06074         CALL    _send_request
0320 0E06      06075         MOVLW   0x06
0322 26E1      06076         ADDWF   FSR1L, F
0324 06077 _00355_DS_:
               06078 ;       .line   348; MainDemo.c for(i=0; i<POOL_SIZE; i++){
0324 0E14      06079         MOVLW   0x14
0326 2600      06080         ADDWF   r0x05, F
0328 B0D8      06081         BTFSC   STATUS, 0
032A 2A00      06082         INCF    r0x06, F
032C 0E14      06083         MOVLW   0x14
032E 2600      06084         ADDWF   r0x07, F
0330 B0D8      06085         BTFSC   STATUS, 0
0332 2A00      06086         INCF    r0x08, F
0334 2A00      06087         INCF    r0x03, F
0336 B0D8      06088         BTFSC   STATUS, 0
0338 2A00      06089         INCF    r0x04, F
033A D000      06090         BRA     _00353_DS_
033C 06091 _00357_DS_:
033C CFE4 F000 06092         MOVFF   PREINC1, r0x10
0340 CFE4 F000 06093         MOVFF   PREINC1, r0x0f
0344 CFE4 F000 06094         MOVFF   PREINC1, r0x0e
0348 CFE4 F000 06095         MOVFF   PREINC1, r0x0d
034C CFE4 F000 06096         MOVFF   PREINC1, r0x0c
0350 CFE4 F000 06097         MOVFF   PREINC1, r0x0b
0354 CFE4 F000 06098         MOVFF   PREINC1, r0x0a
0358 CFE4 F000 06099         MOVFF   PREINC1, r0x09
035C CFE4 F000 06100         MOVFF   PREINC1, r0x08
0360 CFE4 F000 06101         MOVFF   PREINC1, r0x07
0364 CFE4 F000 06102         MOVFF   PREINC1, r0x06
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0368 CFE4 F000 06103         MOVFF   PREINC1, r0x05
036C CFE4 F000 06104         MOVFF   PREINC1, r0x04
0370 CFE4 F000 06105         MOVFF   PREINC1, r0x03
0374 CFE4 F000 06106         MOVFF   PREINC1, r0x02
0378 CFE4 F000 06107         MOVFF   PREINC1, r0x01
037C CFE4 F000 06108         MOVFF   PREINC1, r0x00
0380 CFE4 FFD9 06109         MOVFF   PREINC1, FSR2L
0384 0012      06110         RETURN  
               06111 
               06112 ; ; Starting pCode block
               06113 S_MainDemo__send_request        code
0000 06114 _send_request:
               06115 ;       .line   332; MainDemo.c void send_request(UDP_SOCKET *socket_sendto_server, POOL_ELEMENT *pool_el){
0000 CFD9 FFE5 06116         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06117         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06118         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06119         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06120         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06121         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06122         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06123         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06124         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06125         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06126         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 06127         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 06128         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 06129         MOVFF   r0x0b, POSTDEC1
0038 0E02      06130         MOVLW   0x02
003A CFDB F000 06131         MOVFF   PLUSW2, r0x00
003E 0E03      06132         MOVLW   0x03
0040 CFDB F000 06133         MOVFF   PLUSW2, r0x01
0044 0E04      06134         MOVLW   0x04
0046 CFDB F000 06135         MOVFF   PLUSW2, r0x02
004A 0E05      06136         MOVLW   0x05
004C CFDB F000 06137         MOVFF   PLUSW2, r0x03
0050 0E06      06138         MOVLW   0x06
0052 CFDB F000 06139         MOVFF   PLUSW2, r0x04
0056 0E07      06140         MOVLW   0x07
0058 CFDB F000 06141         MOVFF   PLUSW2, r0x05
005C 06142 _00333_DS_:
               06143 ;       .line   337; MainDemo.c while(!UDPIsPutReady(*socket_sendto_server));
005C C000 FFE9 06144         MOVFF   r0x00, FSR0L
0060 C000 FFF3 06145         MOVFF   r0x01, PRODL
0064 5000      06146         MOVF    r0x02, W
0066 EC00 F000 06147         CALL    __gptrget1
006A 6E00      06148         MOVWF   r0x06
006C 5000      06149         MOVF    r0x06, W
006E 6EE5      06150         MOVWF   POSTDEC1
0070 EC00 F000 06151         CALL    _UDPIsPutReady
0074 6E00      06152         MOVWF   r0x06
0076 CFF3 F000 06153         MOVFF   PRODL, r0x07
007A 2AE1      06154         INCF    FSR1L, F
007C 5000      06155         MOVF    r0x06, W
007E 1000      06156         IORWF   r0x07, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0080 E000      06157         BZ      _00333_DS_
               06158 ;       .line   338; MainDemo.c set_mac_to_dhcp_server();
0082 EC00 F000 06159         CALL    _set_mac_to_dhcp_server
               06160 ;       .line   340; MainDemo.c forgeBootpHeaderRequest(&bootp_header, 0, &pool_el->ip, &pool_el->ip, &pool_el->mac);
0086 0E00      06161         MOVLW   HIGH(_send_request_bootp_header_1_1)
0088 6E00      06162         MOVWF   r0x07
008A 0E00      06163         MOVLW   LOW(_send_request_bootp_header_1_1)
008C 6E00      06164         MOVWF   r0x06
008E 0E80      06165         MOVLW   0x80
0090 6E00      06166         MOVWF   r0x08
0092 5000      06167         MOVF    r0x03, W
0094 0F04      06168         ADDLW   0x04
0096 6E00      06169         MOVWF   r0x09
0098 0E00      06170         MOVLW   0x00
009A 2000      06171         ADDWFC  r0x04, W
009C 6E00      06172         MOVWF   r0x0a
009E 0E00      06173         MOVLW   0x00
00A0 2000      06174         ADDWFC  r0x05, W
00A2 6E00      06175         MOVWF   r0x0b
00A4 5000      06176         MOVF    r0x0b, W
00A6 6EE5      06177         MOVWF   POSTDEC1
00A8 5000      06178         MOVF    r0x0a, W
00AA 6EE5      06179         MOVWF   POSTDEC1
00AC 5000      06180         MOVF    r0x09, W
00AE 6EE5      06181         MOVWF   POSTDEC1
00B0 5000      06182         MOVF    r0x05, W
00B2 6EE5      06183         MOVWF   POSTDEC1
00B4 5000      06184         MOVF    r0x04, W
00B6 6EE5      06185         MOVWF   POSTDEC1
00B8 5000      06186         MOVF    r0x03, W
00BA 6EE5      06187         MOVWF   POSTDEC1
00BC 5000      06188         MOVF    r0x05, W
00BE 6EE5      06189         MOVWF   POSTDEC1
00C0 5000      06190         MOVF    r0x04, W
00C2 6EE5      06191         MOVWF   POSTDEC1
00C4 5000      06192         MOVF    r0x03, W
00C6 6EE5      06193         MOVWF   POSTDEC1
00C8 0E00      06194         MOVLW   0x00
00CA 6EE5      06195         MOVWF   POSTDEC1
00CC 0E00      06196         MOVLW   0x00
00CE 6EE5      06197         MOVWF   POSTDEC1
00D0 0E00      06198         MOVLW   0x00
00D2 6EE5      06199         MOVWF   POSTDEC1
00D4 0E00      06200         MOVLW   0x00
00D6 6EE5      06201         MOVWF   POSTDEC1
00D8 5000      06202         MOVF    r0x08, W
00DA 6EE5      06203         MOVWF   POSTDEC1
00DC 5000      06204         MOVF    r0x07, W
00DE 6EE5      06205         MOVWF   POSTDEC1
00E0 5000      06206         MOVF    r0x06, W
00E2 6EE5      06207         MOVWF   POSTDEC1
00E4 EC00 F000 06208         CALL    _forgeBootpHeaderRequest
00E8 0E10      06209         MOVLW   0x10
00EA 26E1      06210         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               06211 ;       .line   341; MainDemo.c build_dhcp_header(dhcp_header, &dhcp_header_length, pool_el);
00EC 0E00      06212         MOVLW   HIGH(_send_request_dhcp_header_1_1)
00EE 6E00      06213         MOVWF   r0x07
00F0 0E00      06214         MOVLW   LOW(_send_request_dhcp_header_1_1)
00F2 6E00      06215         MOVWF   r0x06
00F4 0E80      06216         MOVLW   0x80
00F6 6E00      06217         MOVWF   r0x08
00F8 0E00      06218         MOVLW   HIGH(_send_request_dhcp_header_length_1_1)
00FA 6E00      06219         MOVWF   r0x0a
00FC 0E00      06220         MOVLW   LOW(_send_request_dhcp_header_length_1_1)
00FE 6E00      06221         MOVWF   r0x09
0100 0E80      06222         MOVLW   0x80
0102 6E00      06223         MOVWF   r0x0b
0104 5000      06224         MOVF    r0x05, W
0106 6EE5      06225         MOVWF   POSTDEC1
0108 5000      06226         MOVF    r0x04, W
010A 6EE5      06227         MOVWF   POSTDEC1
010C 5000      06228         MOVF    r0x03, W
010E 6EE5      06229         MOVWF   POSTDEC1
0110 5000      06230         MOVF    r0x0b, W
0112 6EE5      06231         MOVWF   POSTDEC1
0114 5000      06232         MOVF    r0x0a, W
0116 6EE5      06233         MOVWF   POSTDEC1
0118 5000      06234         MOVF    r0x09, W
011A 6EE5      06235         MOVWF   POSTDEC1
011C 5000      06236         MOVF    r0x08, W
011E 6EE5      06237         MOVWF   POSTDEC1
0120 5000      06238         MOVF    r0x07, W
0122 6EE5      06239         MOVWF   POSTDEC1
0124 5000      06240         MOVF    r0x06, W
0126 6EE5      06241         MOVWF   POSTDEC1
0128 EC00 F000 06242         CALL    _build_dhcp_header
012C 0E09      06243         MOVLW   0x09
012E 26E1      06244         ADDWF   FSR1L, F
               06245 ;       .line   342; MainDemo.c build_bootp(&bootp_header, socket_sendto_server);
0130 0E00      06246         MOVLW   HIGH(_send_request_bootp_header_1_1)
0132 6E00      06247         MOVWF   r0x04
0134 0E00      06248         MOVLW   LOW(_send_request_bootp_header_1_1)
0136 6E00      06249         MOVWF   r0x03
0138 0E80      06250         MOVLW   0x80
013A 6E00      06251         MOVWF   r0x05
013C 5000      06252         MOVF    r0x02, W
013E 6EE5      06253         MOVWF   POSTDEC1
0140 5000      06254         MOVF    r0x01, W
0142 6EE5      06255         MOVWF   POSTDEC1
0144 5000      06256         MOVF    r0x00, W
0146 6EE5      06257         MOVWF   POSTDEC1
0148 5000      06258         MOVF    r0x05, W
014A 6EE5      06259         MOVWF   POSTDEC1
014C 5000      06260         MOVF    r0x04, W
014E 6EE5      06261         MOVWF   POSTDEC1
0150 5000      06262         MOVF    r0x03, W
0152 6EE5      06263         MOVWF   POSTDEC1
0154 EC00 F000 06264         CALL    _build_bootp
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0158 0E06      06265         MOVLW   0x06
015A 26E1      06266         ADDWF   FSR1L, F
               06267 ;       .line   343; MainDemo.c request_msg(dhcp_header, dhcp_header_length);
015C 0E00      06268         MOVLW   HIGH(_send_request_dhcp_header_1_1)
015E 6E00      06269         MOVWF   r0x01
0160 0E00      06270         MOVLW   LOW(_send_request_dhcp_header_1_1)
0162 6E00      06271         MOVWF   r0x00
0164 0E80      06272         MOVLW   0x80
0166 6E00      06273         MOVWF   r0x02
0168 C000 F000 06274         MOVFF   _send_request_dhcp_header_length_1_1, r0x03
016C C000 F000 06275         MOVFF   (_send_request_dhcp_header_length_1_1 + 1), r0x04
0170 5000      06276         MOVF    r0x04, W
0172 6EE5      06277         MOVWF   POSTDEC1
0174 5000      06278         MOVF    r0x03, W
0176 6EE5      06279         MOVWF   POSTDEC1
0178 5000      06280         MOVF    r0x02, W
017A 6EE5      06281         MOVWF   POSTDEC1
017C 5000      06282         MOVF    r0x01, W
017E 6EE5      06283         MOVWF   POSTDEC1
0180 5000      06284         MOVF    r0x00, W
0182 6EE5      06285         MOVWF   POSTDEC1
0184 EC00 F000 06286         CALL    _request_msg
0188 0E05      06287         MOVLW   0x05
018A 26E1      06288         ADDWF   FSR1L, F
018C CFE4 F000 06289         MOVFF   PREINC1, r0x0b
0190 CFE4 F000 06290         MOVFF   PREINC1, r0x0a
0194 CFE4 F000 06291         MOVFF   PREINC1, r0x09
0198 CFE4 F000 06292         MOVFF   PREINC1, r0x08
019C CFE4 F000 06293         MOVFF   PREINC1, r0x07
01A0 CFE4 F000 06294         MOVFF   PREINC1, r0x06
01A4 CFE4 F000 06295         MOVFF   PREINC1, r0x05
01A8 CFE4 F000 06296         MOVFF   PREINC1, r0x04
01AC CFE4 F000 06297         MOVFF   PREINC1, r0x03
01B0 CFE4 F000 06298         MOVFF   PREINC1, r0x02
01B4 CFE4 F000 06299         MOVFF   PREINC1, r0x01
01B8 CFE4 F000 06300         MOVFF   PREINC1, r0x00
01BC CFE4 FFD9 06301         MOVFF   PREINC1, FSR2L
01C0 0012      06302         RETURN  
               06303 
               06304 ; ; Starting pCode block
               06305 S_MainDemo__build_dhcp_header   code
0000 06306 _build_dhcp_header:
               06307 ;       .line   314; MainDemo.c void build_dhcp_header(BYTE *dhcp_header, unsigned int *dhcp_header_length, POOL_ELEMENT *pool_el){
0000 CFD9 FFE5 06308         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06309         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06310         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06311         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06312         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06313         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06314         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06315         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06316         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06317         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06318         MOVFF   r0x08, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002C C000 FFE5 06319         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 06320         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 06321         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 06322         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 06323         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 06324         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 06325         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 06326         MOVFF   r0x10, POSTDEC1
004C 0E02      06327         MOVLW   0x02
004E CFDB F000 06328         MOVFF   PLUSW2, r0x00
0052 0E03      06329         MOVLW   0x03
0054 CFDB F000 06330         MOVFF   PLUSW2, r0x01
0058 0E04      06331         MOVLW   0x04
005A CFDB F000 06332         MOVFF   PLUSW2, r0x02
005E 0E05      06333         MOVLW   0x05
0060 CFDB F000 06334         MOVFF   PLUSW2, r0x03
0064 0E06      06335         MOVLW   0x06
0066 CFDB F000 06336         MOVFF   PLUSW2, r0x04
006A 0E07      06337         MOVLW   0x07
006C CFDB F000 06338         MOVFF   PLUSW2, r0x05
0070 0E08      06339         MOVLW   0x08
0072 CFDB F000 06340         MOVFF   PLUSW2, r0x06
0076 0E09      06341         MOVLW   0x09
0078 CFDB F000 06342         MOVFF   PLUSW2, r0x07
007C 0E0A      06343         MOVLW   0x0a
007E CFDB F000 06344         MOVFF   PLUSW2, r0x08
               06345 ;       .line   317; MainDemo.c dhcp_header[0] = DHCP_MESSAGE_TYPE;
0082 0E35      06346         MOVLW   0x35
0084 6EE5      06347         MOVWF   POSTDEC1
0086 C000 FFE9 06348         MOVFF   r0x00, FSR0L
008A C000 FFF3 06349         MOVFF   r0x01, PRODL
008E 5000      06350         MOVF    r0x02, W
0090 EC00 F000 06351         CALL    __gptrput1
               06352 ;       .line   318; MainDemo.c dhcp_header[1] = DHCP_MESSAGE_TYPE_LEN;
0094 5000      06353         MOVF    r0x00, W
0096 0F01      06354         ADDLW   0x01
0098 6E00      06355         MOVWF   r0x09
009A 0E00      06356         MOVLW   0x00
009C 2000      06357         ADDWFC  r0x01, W
009E 6E00      06358         MOVWF   r0x0a
00A0 0E00      06359         MOVLW   0x00
00A2 2000      06360         ADDWFC  r0x02, W
00A4 6E00      06361         MOVWF   r0x0b
00A6 0E01      06362         MOVLW   0x01
00A8 6EE5      06363         MOVWF   POSTDEC1
00AA C000 FFE9 06364         MOVFF   r0x09, FSR0L
00AE C000 FFF3 06365         MOVFF   r0x0a, PRODL
00B2 5000      06366         MOVF    r0x0b, W
00B4 EC00 F000 06367         CALL    __gptrput1
               06368 ;       .line   319; MainDemo.c dhcp_header[2] = DHCP_REQUEST_MESSAGE;
00B8 5000      06369         MOVF    r0x00, W
00BA 0F02      06370         ADDLW   0x02
00BC 6E00      06371         MOVWF   r0x09
00BE 0E00      06372         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C0 2000      06373         ADDWFC  r0x01, W
00C2 6E00      06374         MOVWF   r0x0a
00C4 0E00      06375         MOVLW   0x00
00C6 2000      06376         ADDWFC  r0x02, W
00C8 6E00      06377         MOVWF   r0x0b
00CA 0E03      06378         MOVLW   0x03
00CC 6EE5      06379         MOVWF   POSTDEC1
00CE C000 FFE9 06380         MOVFF   r0x09, FSR0L
00D2 C000 FFF3 06381         MOVFF   r0x0a, PRODL
00D6 5000      06382         MOVF    r0x0b, W
00D8 EC00 F000 06383         CALL    __gptrput1
               06384 ;       .line   321; MainDemo.c dhcp_header[3] = DHCP_PARAM_REQUEST_IP_ADDRESS;
00DC 5000      06385         MOVF    r0x00, W
00DE 0F03      06386         ADDLW   0x03
00E0 6E00      06387         MOVWF   r0x09
00E2 0E00      06388         MOVLW   0x00
00E4 2000      06389         ADDWFC  r0x01, W
00E6 6E00      06390         MOVWF   r0x0a
00E8 0E00      06391         MOVLW   0x00
00EA 2000      06392         ADDWFC  r0x02, W
00EC 6E00      06393         MOVWF   r0x0b
00EE 0E32      06394         MOVLW   0x32
00F0 6EE5      06395         MOVWF   POSTDEC1
00F2 C000 FFE9 06396         MOVFF   r0x09, FSR0L
00F6 C000 FFF3 06397         MOVFF   r0x0a, PRODL
00FA 5000      06398         MOVF    r0x0b, W
00FC EC00 F000 06399         CALL    __gptrput1
               06400 ;       .line   322; MainDemo.c dhcp_header[4] = DHCP_PARAM_REQUEST_IP_ADDRESS_LEN;
0100 5000      06401         MOVF    r0x00, W
0102 0F04      06402         ADDLW   0x04
0104 6E00      06403         MOVWF   r0x09
0106 0E00      06404         MOVLW   0x00
0108 2000      06405         ADDWFC  r0x01, W
010A 6E00      06406         MOVWF   r0x0a
010C 0E00      06407         MOVLW   0x00
010E 2000      06408         ADDWFC  r0x02, W
0110 6E00      06409         MOVWF   r0x0b
0112 0E04      06410         MOVLW   0x04
0114 6EE5      06411         MOVWF   POSTDEC1
0116 C000 FFE9 06412         MOVFF   r0x09, FSR0L
011A C000 FFF3 06413         MOVFF   r0x0a, PRODL
011E 5000      06414         MOVF    r0x0b, W
0120 EC00 F000 06415         CALL    __gptrput1
               06416 ;       .line   323; MainDemo.c for(i=5; i<9; i++){
0124 0E05      06417         MOVLW   0x05
0126 6E00      06418         MOVWF   r0x09
0128 6A00      06419         CLRF    r0x0a
012A 06420 _00319_DS_:
012A 5000      06421         MOVF    r0x0a, W
012C 0F80      06422         ADDLW   0x80
012E 0F80      06423         ADDLW   0x80
0130 E100      06424         BNZ     _00328_DS_
0132 0E09      06425         MOVLW   0x09
0134 5C00      06426         SUBWF   r0x09, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0136 06427 _00328_DS_:
0136 E200      06428         BC      _00322_DS_
               06429 ;       .line   324; MainDemo.c dhcp_header[i] = pool_el->ip.v[i-5];
0138 5000      06430         MOVF    r0x09, W
013A 2400      06431         ADDWF   r0x00, W
013C 6E00      06432         MOVWF   r0x0b
013E 5000      06433         MOVF    r0x0a, W
0140 2000      06434         ADDWFC  r0x01, W
0142 6E00      06435         MOVWF   r0x0c
0144 6AE8      06436         CLRF    WREG
0146 BE00      06437         BTFSC   r0x0a, 7
0148 68E8      06438         SETF    WREG
014A 2000      06439         ADDWFC  r0x02, W
014C 6E00      06440         MOVWF   r0x0d
014E 5000      06441         MOVF    r0x09, W
0150 6E00      06442         MOVWF   r0x0e
0152 0EFB      06443         MOVLW   0xfb
0154 2600      06444         ADDWF   r0x0e, F
0156 0E00      06445         MOVLW   0x00
0158 BE00      06446         BTFSC   r0x0e, 7
015A 0EFF      06447         MOVLW   0xff
015C 6E00      06448         MOVWF   r0x10
015E 6E00      06449         MOVWF   r0x0f
0160 5000      06450         MOVF    r0x06, W
0162 2600      06451         ADDWF   r0x0e, F
0164 5000      06452         MOVF    r0x07, W
0166 2200      06453         ADDWFC  r0x0f, F
0168 5000      06454         MOVF    r0x08, W
016A 2200      06455         ADDWFC  r0x10, F
016C C000 FFE9 06456         MOVFF   r0x0e, FSR0L
0170 C000 FFF3 06457         MOVFF   r0x0f, PRODL
0174 5000      06458         MOVF    r0x10, W
0176 EC00 F000 06459         CALL    __gptrget1
017A 6E00      06460         MOVWF   r0x0e
017C C000 FFE5 06461         MOVFF   r0x0e, POSTDEC1
0180 C000 FFE9 06462         MOVFF   r0x0b, FSR0L
0184 C000 FFF3 06463         MOVFF   r0x0c, PRODL
0188 5000      06464         MOVF    r0x0d, W
018A EC00 F000 06465         CALL    __gptrput1
               06466 ;       .line   323; MainDemo.c for(i=5; i<9; i++){
018E 2A00      06467         INCF    r0x09, F
0190 B0D8      06468         BTFSC   STATUS, 0
0192 2A00      06469         INCF    r0x0a, F
0194 D000      06470         BRA     _00319_DS_
0196 06471 _00322_DS_:
               06472 ;       .line   327; MainDemo.c dhcp_header[9] = DHCP_SERVER_IDENTIFIER;
0196 5000      06473         MOVF    r0x00, W
0198 0F09      06474         ADDLW   0x09
019A 6E00      06475         MOVWF   r0x06
019C 0E00      06476         MOVLW   0x00
019E 2000      06477         ADDWFC  r0x01, W
01A0 6E00      06478         MOVWF   r0x07
01A2 0E00      06479         MOVLW   0x00
01A4 2000      06480         ADDWFC  r0x02, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01A6 6E00      06481         MOVWF   r0x08
01A8 0E36      06482         MOVLW   0x36
01AA 6EE5      06483         MOVWF   POSTDEC1
01AC C000 FFE9 06484         MOVFF   r0x06, FSR0L
01B0 C000 FFF3 06485         MOVFF   r0x07, PRODL
01B4 5000      06486         MOVF    r0x08, W
01B6 EC00 F000 06487         CALL    __gptrput1
               06488 ;       .line   328; MainDemo.c dhcp_header[10] = sizeof(IP_ADDR);
01BA 0E0A      06489         MOVLW   0x0a
01BC 2600      06490         ADDWF   r0x00, F
01BE 0E00      06491         MOVLW   0x00
01C0 2200      06492         ADDWFC  r0x01, F
01C2 0E00      06493         MOVLW   0x00
01C4 2200      06494         ADDWFC  r0x02, F
01C6 0E04      06495         MOVLW   0x04
01C8 6EE5      06496         MOVWF   POSTDEC1
01CA C000 FFE9 06497         MOVFF   r0x00, FSR0L
01CE C000 FFF3 06498         MOVFF   r0x01, PRODL
01D2 5000      06499         MOVF    r0x02, W
01D4 EC00 F000 06500         CALL    __gptrput1
               06501 ;       .line   329; MainDemo.c *dhcp_header_length = 15;
01D8 0E0F      06502         MOVLW   0x0f
01DA 6EE5      06503         MOVWF   POSTDEC1
01DC 0E00      06504         MOVLW   0x00
01DE 6EF4      06505         MOVWF   PRODH
01E0 C000 FFE9 06506         MOVFF   r0x03, FSR0L
01E4 C000 FFF3 06507         MOVFF   r0x04, PRODL
01E8 5000      06508         MOVF    r0x05, W
01EA EC00 F000 06509         CALL    __gptrput2
01EE CFE4 F000 06510         MOVFF   PREINC1, r0x10
01F2 CFE4 F000 06511         MOVFF   PREINC1, r0x0f
01F6 CFE4 F000 06512         MOVFF   PREINC1, r0x0e
01FA CFE4 F000 06513         MOVFF   PREINC1, r0x0d
01FE CFE4 F000 06514         MOVFF   PREINC1, r0x0c
0202 CFE4 F000 06515         MOVFF   PREINC1, r0x0b
0206 CFE4 F000 06516         MOVFF   PREINC1, r0x0a
020A CFE4 F000 06517         MOVFF   PREINC1, r0x09
020E CFE4 F000 06518         MOVFF   PREINC1, r0x08
0212 CFE4 F000 06519         MOVFF   PREINC1, r0x07
0216 CFE4 F000 06520         MOVFF   PREINC1, r0x06
021A CFE4 F000 06521         MOVFF   PREINC1, r0x05
021E CFE4 F000 06522         MOVFF   PREINC1, r0x04
0222 CFE4 F000 06523         MOVFF   PREINC1, r0x03
0226 CFE4 F000 06524         MOVFF   PREINC1, r0x02
022A CFE4 F000 06525         MOVFF   PREINC1, r0x01
022E CFE4 F000 06526         MOVFF   PREINC1, r0x00
0232 CFE4 FFD9 06527         MOVFF   PREINC1, FSR2L
0236 0012      06528         RETURN  
               06529 
               06530 ; ; Starting pCode block
               06531 S_MainDemo__time_action code
0000 06532 _time_action:
               06533 ;       .line   295; MainDemo.c void time_action(UDP_SOCKET *socket_sendto_server){
0000 CFD9 FFE5 06534         MOVFF   FSR2L, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0004 CFE1 FFD9 06535         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06536         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06537         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06538         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06539         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06540         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06541         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06542         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06543         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06544         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 06545         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 06546         MOVFF   r0x0a, POSTDEC1
0034 0E02      06547         MOVLW   0x02
0036 CFDB F000 06548         MOVFF   PLUSW2, r0x00
003A 0E03      06549         MOVLW   0x03
003C CFDB F000 06550         MOVFF   PLUSW2, r0x01
0040 0E04      06551         MOVLW   0x04
0042 CFDB F000 06552         MOVFF   PLUSW2, r0x02
               06553 ;       .line   301; MainDemo.c m = TickConvertToMilliseconds(TickGet());
0046 EC00 F000 06554         CALL    _TickGet
004A 6E00      06555         MOVWF   r0x03
004C CFF3 F000 06556         MOVFF   PRODL, r0x04
0050 CFF4 F000 06557         MOVFF   PRODH, r0x05
0054 CFE9 F000 06558         MOVFF   FSR0L, r0x06
0058 5000      06559         MOVF    r0x06, W
005A 6EE5      06560         MOVWF   POSTDEC1
005C 5000      06561         MOVF    r0x05, W
005E 6EE5      06562         MOVWF   POSTDEC1
0060 5000      06563         MOVF    r0x04, W
0062 6EE5      06564         MOVWF   POSTDEC1
0064 5000      06565         MOVF    r0x03, W
0066 6EE5      06566         MOVWF   POSTDEC1
0068 EC00 F000 06567         CALL    _TickConvertToMilliseconds
006C 6E00      06568         MOVWF   r0x03
006E CFF3 F000 06569         MOVFF   PRODL, r0x04
0072 CFF4 F000 06570         MOVFF   PRODH, r0x05
0076 CFE9 F000 06571         MOVFF   FSR0L, r0x06
007A 0E04      06572         MOVLW   0x04
007C 26E1      06573         ADDWF   FSR1L, F
007E 0000      06574         BANKSEL _time_action_prev_1_1
               06575 ;       .line   303; MainDemo.c if (m-prev >= 1000 || m < prev) {
0080 5100      06576         MOVF    _time_action_prev_1_1, W, B
0082 5C00      06577         SUBWF   r0x03, W
0084 6E00      06578         MOVWF   r0x07
0086 0000      06579         BANKSEL (_time_action_prev_1_1 + 1)
0088 5100      06580         MOVF    (_time_action_prev_1_1 + 1), W, B
008A 5800      06581         SUBWFB  r0x04, W
008C 6E00      06582         MOVWF   r0x08
008E 0000      06583         BANKSEL (_time_action_prev_1_1 + 2)
0090 5100      06584         MOVF    (_time_action_prev_1_1 + 2), W, B
0092 5800      06585         SUBWFB  r0x05, W
0094 6E00      06586         MOVWF   r0x09
0096 0000      06587         BANKSEL (_time_action_prev_1_1 + 3)
0098 5100      06588         MOVF    (_time_action_prev_1_1 + 3), W, B
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009A 5800      06589         SUBWFB  r0x06, W
009C 6E00      06590         MOVWF   r0x0a
009E 0E00      06591         MOVLW   0x00
00A0 5C00      06592         SUBWF   r0x0a, W
00A2 E100      06593         BNZ     _00313_DS_
00A4 0E00      06594         MOVLW   0x00
00A6 5C00      06595         SUBWF   r0x09, W
00A8 E100      06596         BNZ     _00313_DS_
00AA 0E03      06597         MOVLW   0x03
00AC 5C00      06598         SUBWF   r0x08, W
00AE E100      06599         BNZ     _00313_DS_
00B0 0EE8      06600         MOVLW   0xe8
00B2 5C00      06601         SUBWF   r0x07, W
00B4 06602 _00313_DS_:
00B4 E200      06603         BC      _00306_DS_
00B6 0000      06604         BANKSEL (_time_action_prev_1_1 + 3)
00B8 5100      06605         MOVF    (_time_action_prev_1_1 + 3), W, B
00BA 5C00      06606         SUBWF   r0x06, W
00BC E100      06607         BNZ     _00314_DS_
00BE 0000      06608         BANKSEL (_time_action_prev_1_1 + 2)
00C0 5100      06609         MOVF    (_time_action_prev_1_1 + 2), W, B
00C2 5C00      06610         SUBWF   r0x05, W
00C4 E100      06611         BNZ     _00314_DS_
00C6 0000      06612         BANKSEL (_time_action_prev_1_1 + 1)
00C8 5100      06613         MOVF    (_time_action_prev_1_1 + 1), W, B
00CA 5C00      06614         SUBWF   r0x04, W
00CC E100      06615         BNZ     _00314_DS_
00CE 0000      06616         BANKSEL _time_action_prev_1_1
00D0 5100      06617         MOVF    _time_action_prev_1_1, W, B
00D2 5C00      06618         SUBWF   r0x03, W
00D4 06619 _00314_DS_:
00D4 B0D8      06620         BTFSC   STATUS, 0
00D6 D000      06621         BRA     _00309_DS_
00D8 06622 _00306_DS_:
               06623 ;       .line   304; MainDemo.c prev += 1000;
00D8 0EE8      06624         MOVLW   0xe8
00DA 0000      06625         BANKSEL _time_action_prev_1_1
00DC 2700      06626         ADDWF   _time_action_prev_1_1, F, B
00DE 0E03      06627         MOVLW   0x03
00E0 0000      06628         BANKSEL (_time_action_prev_1_1 + 1)
00E2 2300      06629         ADDWFC  (_time_action_prev_1_1 + 1), F, B
00E4 0E00      06630         MOVLW   0x00
00E6 0000      06631         BANKSEL (_time_action_prev_1_1 + 2)
00E8 2300      06632         ADDWFC  (_time_action_prev_1_1 + 2), F, B
00EA 0E00      06633         MOVLW   0x00
00EC 0000      06634         BANKSEL (_time_action_prev_1_1 + 3)
00EE 2300      06635         ADDWFC  (_time_action_prev_1_1 + 3), F, B
               06636 ;       .line   305; MainDemo.c LED0_IO ^= 1;
00F0 6A00      06637         CLRF    r0x03
00F2 B000      06638         BTFSC   _LATJbits, 0
00F4 2A00      06639         INCF    r0x03, F
00F6 0E01      06640         MOVLW   0x01
00F8 1A00      06641         XORWF   r0x03, F
00FA 5000      06642         MOVF    r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FC 0B01      06643         ANDLW   0x01
00FE 6EF4      06644         MOVWF   PRODH
0100 5000      06645         MOVF    _LATJbits, W
0102 0BFE      06646         ANDLW   0xfe
0104 10F4      06647         IORWF   PRODH, W
0106 6E00      06648         MOVWF   _LATJbits
0108 0000      06649         BANKSEL _time_action_count_1_1
               06650 ;       .line   306; MainDemo.c count++;
010A 2B00      06651         INCF    _time_action_count_1_1, F, B
010C E300      06652         BNC     _10768_DS_
010E 0000      06653         BANKSEL (_time_action_count_1_1 + 1)
0110 2B00      06654         INCF    (_time_action_count_1_1 + 1), F, B
0112 06655 _10768_DS_:
0112 E300      06656         BNC     _20769_DS_
0114 0000      06657         BANKSEL (_time_action_count_1_1 + 2)
0116 2B00      06658         INCF    (_time_action_count_1_1 + 2), F, B
0118 06659 _20769_DS_:
0118 E300      06660         BNC     _30770_DS_
011A 0000      06661         BANKSEL (_time_action_count_1_1 + 3)
011C 2B00      06662         INCF    (_time_action_count_1_1 + 3), F, B
011E 06663 _30770_DS_:
               06664 ;       .line   307; MainDemo.c if(count%OVERFLOW_TIME == 0){
011E 0E00      06665         MOVLW   0x00
0120 6EE5      06666         MOVWF   POSTDEC1
0122 0E00      06667         MOVLW   0x00
0124 6EE5      06668         MOVWF   POSTDEC1
0126 0E00      06669         MOVLW   0x00
0128 6EE5      06670         MOVWF   POSTDEC1
012A 0E3D      06671         MOVLW   0x3d
012C 6EE5      06672         MOVWF   POSTDEC1
012E 0000      06673         BANKSEL (_time_action_count_1_1 + 3)
0130 5100      06674         MOVF    (_time_action_count_1_1 + 3), W, B
0132 6EE5      06675         MOVWF   POSTDEC1
0134 0000      06676         BANKSEL (_time_action_count_1_1 + 2)
0136 5100      06677         MOVF    (_time_action_count_1_1 + 2), W, B
0138 6EE5      06678         MOVWF   POSTDEC1
013A 0000      06679         BANKSEL (_time_action_count_1_1 + 1)
013C 5100      06680         MOVF    (_time_action_count_1_1 + 1), W, B
013E 6EE5      06681         MOVWF   POSTDEC1
0140 0000      06682         BANKSEL _time_action_count_1_1
0142 5100      06683         MOVF    _time_action_count_1_1, W, B
0144 6EE5      06684         MOVWF   POSTDEC1
0146 EC00 F000 06685         CALL    __modulong
014A 6E00      06686         MOVWF   r0x03
014C CFF3 F000 06687         MOVFF   PRODL, r0x04
0150 CFF4 F000 06688         MOVFF   PRODH, r0x05
0154 CFE9 F000 06689         MOVFF   FSR0L, r0x06
0158 0E08      06690         MOVLW   0x08
015A 26E1      06691         ADDWF   FSR1L, F
015C 5000      06692         MOVF    r0x03, W
015E 1000      06693         IORWF   r0x04, W
0160 1000      06694         IORWF   r0x05, W
0162 1000      06695         IORWF   r0x06, W
0164 E100      06696         BNZ     _00309_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               06697 ;       .line   308; MainDemo.c update_pool(socket_sendto_server);
0166 5000      06698         MOVF    r0x02, W
0168 6EE5      06699         MOVWF   POSTDEC1
016A 5000      06700         MOVF    r0x01, W
016C 6EE5      06701         MOVWF   POSTDEC1
016E 5000      06702         MOVF    r0x00, W
0170 6EE5      06703         MOVWF   POSTDEC1
0172 EC00 F000 06704         CALL    _update_pool
0176 0E03      06705         MOVLW   0x03
0178 26E1      06706         ADDWF   FSR1L, F
017A 0000      06707         BANKSEL _time_action_count_1_1
               06708 ;       .line   309; MainDemo.c count = 0;
017C 6B00      06709         CLRF    _time_action_count_1_1, B
017E 0000      06710         BANKSEL (_time_action_count_1_1 + 1)
0180 6B00      06711         CLRF    (_time_action_count_1_1 + 1), B
0182 0000      06712         BANKSEL (_time_action_count_1_1 + 2)
0184 6B00      06713         CLRF    (_time_action_count_1_1 + 2), B
0186 0000      06714         BANKSEL (_time_action_count_1_1 + 3)
0188 6B00      06715         CLRF    (_time_action_count_1_1 + 3), B
018A 06716 _00309_DS_:
018A CFE4 F000 06717         MOVFF   PREINC1, r0x0a
018E CFE4 F000 06718         MOVFF   PREINC1, r0x09
0192 CFE4 F000 06719         MOVFF   PREINC1, r0x08
0196 CFE4 F000 06720         MOVFF   PREINC1, r0x07
019A CFE4 F000 06721         MOVFF   PREINC1, r0x06
019E CFE4 F000 06722         MOVFF   PREINC1, r0x05
01A2 CFE4 F000 06723         MOVFF   PREINC1, r0x04
01A6 CFE4 F000 06724         MOVFF   PREINC1, r0x03
01AA CFE4 F000 06725         MOVFF   PREINC1, r0x02
01AE CFE4 F000 06726         MOVFF   PREINC1, r0x01
01B2 CFE4 F000 06727         MOVFF   PREINC1, r0x00
01B6 CFE4 FFD9 06728         MOVFF   PREINC1, FSR2L
01BA 0012      06729         RETURN  
               06730 
               06731 ; ; Starting pCode block
               06732 S_MainDemo__ip_cmp      code
0000 06733 _ip_cmp:
               06734 ;       .line   285; MainDemo.c BOOL ip_cmp(IP_ADDR *ip1, IP_ADDR *ip2){
0000 CFD9 FFE5 06735         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06736         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06737         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06738         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06739         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06740         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06741         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06742         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06743         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06744         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06745         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 06746         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 06747         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 06748         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 06749         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 06750         MOVFF   r0x0d, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0040 0E02      06751         MOVLW   0x02
0042 CFDB F000 06752         MOVFF   PLUSW2, r0x00
0046 0E03      06753         MOVLW   0x03
0048 CFDB F000 06754         MOVFF   PLUSW2, r0x01
004C 0E04      06755         MOVLW   0x04
004E CFDB F000 06756         MOVFF   PLUSW2, r0x02
0052 0E05      06757         MOVLW   0x05
0054 CFDB F000 06758         MOVFF   PLUSW2, r0x03
0058 0E06      06759         MOVLW   0x06
005A CFDB F000 06760         MOVFF   PLUSW2, r0x04
005E 0E07      06761         MOVLW   0x07
0060 CFDB F000 06762         MOVFF   PLUSW2, r0x05
               06763 ;       .line   287; MainDemo.c for(i=0; i<4; i++){
0064 6A00      06764         CLRF    r0x06
0066 6A00      06765         CLRF    r0x07
0068 06766 _00288_DS_:
0068 5000      06767         MOVF    r0x07, W
006A 0F80      06768         ADDLW   0x80
006C 0F80      06769         ADDLW   0x80
006E E100      06770         BNZ     _00297_DS_
0070 0E04      06771         MOVLW   0x04
0072 5C00      06772         SUBWF   r0x06, W
0074 06773 _00297_DS_:
0074 E200      06774         BC      _00291_DS_
               06775 ;       .line   288; MainDemo.c if(ip1->v[i] != ip2->v[i]){
0076 5000      06776         MOVF    r0x06, W
0078 2400      06777         ADDWF   r0x00, W
007A 6E00      06778         MOVWF   r0x08
007C 5000      06779         MOVF    r0x07, W
007E 2000      06780         ADDWFC  r0x01, W
0080 6E00      06781         MOVWF   r0x09
0082 6AE8      06782         CLRF    WREG
0084 BE00      06783         BTFSC   r0x07, 7
0086 68E8      06784         SETF    WREG
0088 2000      06785         ADDWFC  r0x02, W
008A 6E00      06786         MOVWF   r0x0a
008C 5000      06787         MOVF    r0x06, W
008E 2400      06788         ADDWF   r0x03, W
0090 6E00      06789         MOVWF   r0x0b
0092 5000      06790         MOVF    r0x07, W
0094 2000      06791         ADDWFC  r0x04, W
0096 6E00      06792         MOVWF   r0x0c
0098 6AE8      06793         CLRF    WREG
009A BE00      06794         BTFSC   r0x07, 7
009C 68E8      06795         SETF    WREG
009E 2000      06796         ADDWFC  r0x05, W
00A0 6E00      06797         MOVWF   r0x0d
00A2 C000 FFE9 06798         MOVFF   r0x08, FSR0L
00A6 C000 FFF3 06799         MOVFF   r0x09, PRODL
00AA 5000      06800         MOVF    r0x0a, W
00AC EC00 F000 06801         CALL    __gptrget1
00B0 6E00      06802         MOVWF   r0x08
00B2 C000 FFE9 06803         MOVFF   r0x0b, FSR0L
00B6 C000 FFF3 06804         MOVFF   r0x0c, PRODL
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BA 5000      06805         MOVF    r0x0d, W
00BC EC00 F000 06806         CALL    __gptrget1
00C0 6E00      06807         MOVWF   r0x0b
00C2 5000      06808         MOVF    r0x08, W
00C4 1800      06809         XORWF   r0x0b, W
00C6 E000      06810         BZ      _00290_DS_
               06811 ;       .line   289; MainDemo.c return FALSE;
00C8 6AE8      06812         CLRF    WREG
00CA D000      06813         BRA     _00292_DS_
00CC 06814 _00290_DS_:
               06815 ;       .line   287; MainDemo.c for(i=0; i<4; i++){
00CC 2A00      06816         INCF    r0x06, F
00CE B0D8      06817         BTFSC   STATUS, 0
00D0 2A00      06818         INCF    r0x07, F
00D2 D000      06819         BRA     _00288_DS_
00D4 06820 _00291_DS_:
               06821 ;       .line   292; MainDemo.c return TRUE;
00D4 0E01      06822         MOVLW   0x01
00D6 06823 _00292_DS_:
00D6 CFE4 F000 06824         MOVFF   PREINC1, r0x0d
00DA CFE4 F000 06825         MOVFF   PREINC1, r0x0c
00DE CFE4 F000 06826         MOVFF   PREINC1, r0x0b
00E2 CFE4 F000 06827         MOVFF   PREINC1, r0x0a
00E6 CFE4 F000 06828         MOVFF   PREINC1, r0x09
00EA CFE4 F000 06829         MOVFF   PREINC1, r0x08
00EE CFE4 F000 06830         MOVFF   PREINC1, r0x07
00F2 CFE4 F000 06831         MOVFF   PREINC1, r0x06
00F6 CFE4 F000 06832         MOVFF   PREINC1, r0x05
00FA CFE4 F000 06833         MOVFF   PREINC1, r0x04
00FE CFE4 F000 06834         MOVFF   PREINC1, r0x03
0102 CFE4 F000 06835         MOVFF   PREINC1, r0x02
0106 CFE4 F000 06836         MOVFF   PREINC1, r0x01
010A CFE4 F000 06837         MOVFF   PREINC1, r0x00
010E CFE4 FFD9 06838         MOVFF   PREINC1, FSR2L
0112 0012      06839         RETURN  
               06840 
               06841 ; ; Starting pCode block
               06842 S_MainDemo__mac_cmp     code
0000 06843 _mac_cmp:
               06844 ;       .line   275; MainDemo.c BOOL mac_cmp(MAC_ADDR *m1, MAC_ADDR *m2){
0000 CFD9 FFE5 06845         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06846         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06847         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06848         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06849         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06850         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06851         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06852         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06853         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06854         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06855         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 06856         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 06857         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 06858         MOVFF   r0x0b, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 C000 FFE5 06859         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 06860         MOVFF   r0x0d, POSTDEC1
0040 0E02      06861         MOVLW   0x02
0042 CFDB F000 06862         MOVFF   PLUSW2, r0x00
0046 0E03      06863         MOVLW   0x03
0048 CFDB F000 06864         MOVFF   PLUSW2, r0x01
004C 0E04      06865         MOVLW   0x04
004E CFDB F000 06866         MOVFF   PLUSW2, r0x02
0052 0E05      06867         MOVLW   0x05
0054 CFDB F000 06868         MOVFF   PLUSW2, r0x03
0058 0E06      06869         MOVLW   0x06
005A CFDB F000 06870         MOVFF   PLUSW2, r0x04
005E 0E07      06871         MOVLW   0x07
0060 CFDB F000 06872         MOVFF   PLUSW2, r0x05
               06873 ;       .line   277; MainDemo.c for(i=0; i<6; i++){
0064 6A00      06874         CLRF    r0x06
0066 6A00      06875         CLRF    r0x07
0068 06876 _00270_DS_:
0068 5000      06877         MOVF    r0x07, W
006A 0F80      06878         ADDLW   0x80
006C 0F80      06879         ADDLW   0x80
006E E100      06880         BNZ     _00279_DS_
0070 0E06      06881         MOVLW   0x06
0072 5C00      06882         SUBWF   r0x06, W
0074 06883 _00279_DS_:
0074 E200      06884         BC      _00273_DS_
               06885 ;       .line   278; MainDemo.c if(m1->v[i] != m2->v[i]){
0076 5000      06886         MOVF    r0x06, W
0078 2400      06887         ADDWF   r0x00, W
007A 6E00      06888         MOVWF   r0x08
007C 5000      06889         MOVF    r0x07, W
007E 2000      06890         ADDWFC  r0x01, W
0080 6E00      06891         MOVWF   r0x09
0082 6AE8      06892         CLRF    WREG
0084 BE00      06893         BTFSC   r0x07, 7
0086 68E8      06894         SETF    WREG
0088 2000      06895         ADDWFC  r0x02, W
008A 6E00      06896         MOVWF   r0x0a
008C 5000      06897         MOVF    r0x06, W
008E 2400      06898         ADDWF   r0x03, W
0090 6E00      06899         MOVWF   r0x0b
0092 5000      06900         MOVF    r0x07, W
0094 2000      06901         ADDWFC  r0x04, W
0096 6E00      06902         MOVWF   r0x0c
0098 6AE8      06903         CLRF    WREG
009A BE00      06904         BTFSC   r0x07, 7
009C 68E8      06905         SETF    WREG
009E 2000      06906         ADDWFC  r0x05, W
00A0 6E00      06907         MOVWF   r0x0d
00A2 C000 FFE9 06908         MOVFF   r0x08, FSR0L
00A6 C000 FFF3 06909         MOVFF   r0x09, PRODL
00AA 5000      06910         MOVF    r0x0a, W
00AC EC00 F000 06911         CALL    __gptrget1
00B0 6E00      06912         MOVWF   r0x08
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B2 C000 FFE9 06913         MOVFF   r0x0b, FSR0L
00B6 C000 FFF3 06914         MOVFF   r0x0c, PRODL
00BA 5000      06915         MOVF    r0x0d, W
00BC EC00 F000 06916         CALL    __gptrget1
00C0 6E00      06917         MOVWF   r0x0b
00C2 5000      06918         MOVF    r0x08, W
00C4 1800      06919         XORWF   r0x0b, W
00C6 E000      06920         BZ      _00272_DS_
               06921 ;       .line   279; MainDemo.c return FALSE;
00C8 6AE8      06922         CLRF    WREG
00CA D000      06923         BRA     _00274_DS_
00CC 06924 _00272_DS_:
               06925 ;       .line   277; MainDemo.c for(i=0; i<6; i++){
00CC 2A00      06926         INCF    r0x06, F
00CE B0D8      06927         BTFSC   STATUS, 0
00D0 2A00      06928         INCF    r0x07, F
00D2 D000      06929         BRA     _00270_DS_
00D4 06930 _00273_DS_:
               06931 ;       .line   282; MainDemo.c return TRUE;
00D4 0E01      06932         MOVLW   0x01
00D6 06933 _00274_DS_:
00D6 CFE4 F000 06934         MOVFF   PREINC1, r0x0d
00DA CFE4 F000 06935         MOVFF   PREINC1, r0x0c
00DE CFE4 F000 06936         MOVFF   PREINC1, r0x0b
00E2 CFE4 F000 06937         MOVFF   PREINC1, r0x0a
00E6 CFE4 F000 06938         MOVFF   PREINC1, r0x09
00EA CFE4 F000 06939         MOVFF   PREINC1, r0x08
00EE CFE4 F000 06940         MOVFF   PREINC1, r0x07
00F2 CFE4 F000 06941         MOVFF   PREINC1, r0x06
00F6 CFE4 F000 06942         MOVFF   PREINC1, r0x05
00FA CFE4 F000 06943         MOVFF   PREINC1, r0x04
00FE CFE4 F000 06944         MOVFF   PREINC1, r0x03
0102 CFE4 F000 06945         MOVFF   PREINC1, r0x02
0106 CFE4 F000 06946         MOVFF   PREINC1, r0x01
010A CFE4 F000 06947         MOVFF   PREINC1, r0x00
010E CFE4 FFD9 06948         MOVFF   PREINC1, FSR2L
0112 0012      06949         RETURN  
               06950 
               06951 ; ; Starting pCode block
               06952 S_MainDemo__display_ip  code
0000 06953 _display_ip:
               06954 ;       .line   262; MainDemo.c void display_ip(unsigned int pos, IP_ADDR *ip){
0000 CFD9 FFE5 06955         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06956         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06957         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06958         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06959         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06960         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06961         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06962         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06963         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06964         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06965         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 06966         MOVFF   r0x09, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 0E02      06967         MOVLW   0x02
0032 CFDB F000 06968         MOVFF   PLUSW2, r0x00
0036 0E03      06969         MOVLW   0x03
0038 CFDB F000 06970         MOVFF   PLUSW2, r0x01
003C 0E04      06971         MOVLW   0x04
003E CFDB F000 06972         MOVFF   PLUSW2, r0x02
0042 0E05      06973         MOVLW   0x05
0044 CFDB F000 06974         MOVFF   PLUSW2, r0x03
0048 0E06      06975         MOVLW   0x06
004A CFDB F000 06976         MOVFF   PLUSW2, r0x04
               06977 ;       .line   264; MainDemo.c int_to_string(ip->v[0], a);
004E C000 FFE9 06978         MOVFF   r0x02, FSR0L
0052 C000 FFF3 06979         MOVFF   r0x03, PRODL
0056 5000      06980         MOVF    r0x04, W
0058 EC00 F000 06981         CALL    __gptrget1
005C 6E00      06982         MOVWF   r0x05
005E 6A00      06983         CLRF    r0x06
0060 0E00      06984         MOVLW   HIGH(_display_ip_a_1_1)
0062 6E00      06985         MOVWF   r0x08
0064 0E00      06986         MOVLW   LOW(_display_ip_a_1_1)
0066 6E00      06987         MOVWF   r0x07
0068 0E80      06988         MOVLW   0x80
006A 6E00      06989         MOVWF   r0x09
006C 5000      06990         MOVF    r0x09, W
006E 6EE5      06991         MOVWF   POSTDEC1
0070 5000      06992         MOVF    r0x08, W
0072 6EE5      06993         MOVWF   POSTDEC1
0074 5000      06994         MOVF    r0x07, W
0076 6EE5      06995         MOVWF   POSTDEC1
0078 5000      06996         MOVF    r0x06, W
007A 6EE5      06997         MOVWF   POSTDEC1
007C 5000      06998         MOVF    r0x05, W
007E 6EE5      06999         MOVWF   POSTDEC1
0080 EC00 F000 07000         CALL    _int_to_string
0084 0E05      07001         MOVLW   0x05
0086 26E1      07002         ADDWF   FSR1L, F
               07003 ;       .line   265; MainDemo.c int_to_string(ip->v[1], b);
0088 5000      07004         MOVF    r0x02, W
008A 0F01      07005         ADDLW   0x01
008C 6E00      07006         MOVWF   r0x05
008E 0E00      07007         MOVLW   0x00
0090 2000      07008         ADDWFC  r0x03, W
0092 6E00      07009         MOVWF   r0x06
0094 0E00      07010         MOVLW   0x00
0096 2000      07011         ADDWFC  r0x04, W
0098 6E00      07012         MOVWF   r0x07
009A C000 FFE9 07013         MOVFF   r0x05, FSR0L
009E C000 FFF3 07014         MOVFF   r0x06, PRODL
00A2 5000      07015         MOVF    r0x07, W
00A4 EC00 F000 07016         CALL    __gptrget1
00A8 6E00      07017         MOVWF   r0x05
00AA 6A00      07018         CLRF    r0x06
00AC 0E00      07019         MOVLW   HIGH(_display_ip_b_1_1)
00AE 6E00      07020         MOVWF   r0x08
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 0E00      07021         MOVLW   LOW(_display_ip_b_1_1)
00B2 6E00      07022         MOVWF   r0x07
00B4 0E80      07023         MOVLW   0x80
00B6 6E00      07024         MOVWF   r0x09
00B8 5000      07025         MOVF    r0x09, W
00BA 6EE5      07026         MOVWF   POSTDEC1
00BC 5000      07027         MOVF    r0x08, W
00BE 6EE5      07028         MOVWF   POSTDEC1
00C0 5000      07029         MOVF    r0x07, W
00C2 6EE5      07030         MOVWF   POSTDEC1
00C4 5000      07031         MOVF    r0x06, W
00C6 6EE5      07032         MOVWF   POSTDEC1
00C8 5000      07033         MOVF    r0x05, W
00CA 6EE5      07034         MOVWF   POSTDEC1
00CC EC00 F000 07035         CALL    _int_to_string
00D0 0E05      07036         MOVLW   0x05
00D2 26E1      07037         ADDWF   FSR1L, F
               07038 ;       .line   266; MainDemo.c int_to_string(ip->v[2], c);
00D4 5000      07039         MOVF    r0x02, W
00D6 0F02      07040         ADDLW   0x02
00D8 6E00      07041         MOVWF   r0x05
00DA 0E00      07042         MOVLW   0x00
00DC 2000      07043         ADDWFC  r0x03, W
00DE 6E00      07044         MOVWF   r0x06
00E0 0E00      07045         MOVLW   0x00
00E2 2000      07046         ADDWFC  r0x04, W
00E4 6E00      07047         MOVWF   r0x07
00E6 C000 FFE9 07048         MOVFF   r0x05, FSR0L
00EA C000 FFF3 07049         MOVFF   r0x06, PRODL
00EE 5000      07050         MOVF    r0x07, W
00F0 EC00 F000 07051         CALL    __gptrget1
00F4 6E00      07052         MOVWF   r0x05
00F6 6A00      07053         CLRF    r0x06
00F8 0E00      07054         MOVLW   HIGH(_display_ip_c_1_1)
00FA 6E00      07055         MOVWF   r0x08
00FC 0E00      07056         MOVLW   LOW(_display_ip_c_1_1)
00FE 6E00      07057         MOVWF   r0x07
0100 0E80      07058         MOVLW   0x80
0102 6E00      07059         MOVWF   r0x09
0104 5000      07060         MOVF    r0x09, W
0106 6EE5      07061         MOVWF   POSTDEC1
0108 5000      07062         MOVF    r0x08, W
010A 6EE5      07063         MOVWF   POSTDEC1
010C 5000      07064         MOVF    r0x07, W
010E 6EE5      07065         MOVWF   POSTDEC1
0110 5000      07066         MOVF    r0x06, W
0112 6EE5      07067         MOVWF   POSTDEC1
0114 5000      07068         MOVF    r0x05, W
0116 6EE5      07069         MOVWF   POSTDEC1
0118 EC00 F000 07070         CALL    _int_to_string
011C 0E05      07071         MOVLW   0x05
011E 26E1      07072         ADDWF   FSR1L, F
               07073 ;       .line   267; MainDemo.c int_to_string(ip->v[3], d);
0120 0E03      07074         MOVLW   0x03
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0122 2600      07075         ADDWF   r0x02, F
0124 0E00      07076         MOVLW   0x00
0126 2200      07077         ADDWFC  r0x03, F
0128 0E00      07078         MOVLW   0x00
012A 2200      07079         ADDWFC  r0x04, F
012C C000 FFE9 07080         MOVFF   r0x02, FSR0L
0130 C000 FFF3 07081         MOVFF   r0x03, PRODL
0134 5000      07082         MOVF    r0x04, W
0136 EC00 F000 07083         CALL    __gptrget1
013A 6E00      07084         MOVWF   r0x02
013C 6A00      07085         CLRF    r0x03
013E 0E00      07086         MOVLW   HIGH(_display_ip_d_1_1)
0140 6E00      07087         MOVWF   r0x05
0142 0E00      07088         MOVLW   LOW(_display_ip_d_1_1)
0144 6E00      07089         MOVWF   r0x04
0146 0E80      07090         MOVLW   0x80
0148 6E00      07091         MOVWF   r0x06
014A 5000      07092         MOVF    r0x06, W
014C 6EE5      07093         MOVWF   POSTDEC1
014E 5000      07094         MOVF    r0x05, W
0150 6EE5      07095         MOVWF   POSTDEC1
0152 5000      07096         MOVF    r0x04, W
0154 6EE5      07097         MOVWF   POSTDEC1
0156 5000      07098         MOVF    r0x03, W
0158 6EE5      07099         MOVWF   POSTDEC1
015A 5000      07100         MOVF    r0x02, W
015C 6EE5      07101         MOVWF   POSTDEC1
015E EC00 F000 07102         CALL    _int_to_string
0162 0E05      07103         MOVLW   0x05
0164 26E1      07104         ADDWF   FSR1L, F
               07105 ;       .line   269; MainDemo.c DisplayString(pos, a);
0166 0E00      07106         MOVLW   HIGH(_display_ip_a_1_1)
0168 6E00      07107         MOVWF   r0x02
016A 0E00      07108         MOVLW   LOW(_display_ip_a_1_1)
016C 6E00      07109         MOVWF   r0x01
016E 0E80      07110         MOVLW   0x80
0170 6E00      07111         MOVWF   r0x03
0172 5000      07112         MOVF    r0x03, W
0174 6EE5      07113         MOVWF   POSTDEC1
0176 5000      07114         MOVF    r0x02, W
0178 6EE5      07115         MOVWF   POSTDEC1
017A 5000      07116         MOVF    r0x01, W
017C 6EE5      07117         MOVWF   POSTDEC1
017E 5000      07118         MOVF    r0x00, W
0180 6EE5      07119         MOVWF   POSTDEC1
0182 EC00 F000 07120         CALL    _DisplayString
0186 0E04      07121         MOVLW   0x04
0188 26E1      07122         ADDWF   FSR1L, F
               07123 ;       .line   270; MainDemo.c DisplayString(pos+4, b);
018A 0E04      07124         MOVLW   0x04
018C 2400      07125         ADDWF   r0x00, W
018E 6E00      07126         MOVWF   r0x01
0190 0E00      07127         MOVLW   HIGH(_display_ip_b_1_1)
0192 6E00      07128         MOVWF   r0x03
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0194 0E00      07129         MOVLW   LOW(_display_ip_b_1_1)
0196 6E00      07130         MOVWF   r0x02
0198 0E80      07131         MOVLW   0x80
019A 6E00      07132         MOVWF   r0x04
019C 5000      07133         MOVF    r0x04, W
019E 6EE5      07134         MOVWF   POSTDEC1
01A0 5000      07135         MOVF    r0x03, W
01A2 6EE5      07136         MOVWF   POSTDEC1
01A4 5000      07137         MOVF    r0x02, W
01A6 6EE5      07138         MOVWF   POSTDEC1
01A8 5000      07139         MOVF    r0x01, W
01AA 6EE5      07140         MOVWF   POSTDEC1
01AC EC00 F000 07141         CALL    _DisplayString
01B0 0E04      07142         MOVLW   0x04
01B2 26E1      07143         ADDWF   FSR1L, F
               07144 ;       .line   271; MainDemo.c DisplayString(pos+8, c);
01B4 0E08      07145         MOVLW   0x08
01B6 2400      07146         ADDWF   r0x00, W
01B8 6E00      07147         MOVWF   r0x01
01BA 0E00      07148         MOVLW   HIGH(_display_ip_c_1_1)
01BC 6E00      07149         MOVWF   r0x03
01BE 0E00      07150         MOVLW   LOW(_display_ip_c_1_1)
01C0 6E00      07151         MOVWF   r0x02
01C2 0E80      07152         MOVLW   0x80
01C4 6E00      07153         MOVWF   r0x04
01C6 5000      07154         MOVF    r0x04, W
01C8 6EE5      07155         MOVWF   POSTDEC1
01CA 5000      07156         MOVF    r0x03, W
01CC 6EE5      07157         MOVWF   POSTDEC1
01CE 5000      07158         MOVF    r0x02, W
01D0 6EE5      07159         MOVWF   POSTDEC1
01D2 5000      07160         MOVF    r0x01, W
01D4 6EE5      07161         MOVWF   POSTDEC1
01D6 EC00 F000 07162         CALL    _DisplayString
01DA 0E04      07163         MOVLW   0x04
01DC 26E1      07164         ADDWF   FSR1L, F
               07165 ;       .line   272; MainDemo.c DisplayString(pos+12, d);
01DE 0E0C      07166         MOVLW   0x0c
01E0 2600      07167         ADDWF   r0x00, F
01E2 0E00      07168         MOVLW   HIGH(_display_ip_d_1_1)
01E4 6E00      07169         MOVWF   r0x02
01E6 0E00      07170         MOVLW   LOW(_display_ip_d_1_1)
01E8 6E00      07171         MOVWF   r0x01
01EA 0E80      07172         MOVLW   0x80
01EC 6E00      07173         MOVWF   r0x03
01EE 5000      07174         MOVF    r0x03, W
01F0 6EE5      07175         MOVWF   POSTDEC1
01F2 5000      07176         MOVF    r0x02, W
01F4 6EE5      07177         MOVWF   POSTDEC1
01F6 5000      07178         MOVF    r0x01, W
01F8 6EE5      07179         MOVWF   POSTDEC1
01FA 5000      07180         MOVF    r0x00, W
01FC 6EE5      07181         MOVWF   POSTDEC1
01FE EC00 F000 07182         CALL    _DisplayString
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0202 0E04      07183         MOVLW   0x04
0204 26E1      07184         ADDWF   FSR1L, F
0206 CFE4 F000 07185         MOVFF   PREINC1, r0x09
020A CFE4 F000 07186         MOVFF   PREINC1, r0x08
020E CFE4 F000 07187         MOVFF   PREINC1, r0x07
0212 CFE4 F000 07188         MOVFF   PREINC1, r0x06
0216 CFE4 F000 07189         MOVFF   PREINC1, r0x05
021A CFE4 F000 07190         MOVFF   PREINC1, r0x04
021E CFE4 F000 07191         MOVFF   PREINC1, r0x03
0222 CFE4 F000 07192         MOVFF   PREINC1, r0x02
0226 CFE4 F000 07193         MOVFF   PREINC1, r0x01
022A CFE4 F000 07194         MOVFF   PREINC1, r0x00
022E CFE4 FFD9 07195         MOVFF   PREINC1, FSR2L
0232 0012      07196         RETURN  
               07197 
               07198 ; ; Starting pCode block
               07199 S_MainDemo__display_mac code
0000 07200 _display_mac:
               07201 ;       .line   245; MainDemo.c void display_mac(unsigned int pos, MAC_ADDR *mac){
0000 CFD9 FFE5 07202         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07203         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07204         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07205         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07206         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07207         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07208         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07209         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07210         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07211         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07212         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07213         MOVFF   r0x09, POSTDEC1
0030 0E02      07214         MOVLW   0x02
0032 CFDB F000 07215         MOVFF   PLUSW2, r0x00
0036 0E03      07216         MOVLW   0x03
0038 CFDB F000 07217         MOVFF   PLUSW2, r0x01
003C 0E04      07218         MOVLW   0x04
003E CFDB F000 07219         MOVFF   PLUSW2, r0x02
0042 0E05      07220         MOVLW   0x05
0044 CFDB F000 07221         MOVFF   PLUSW2, r0x03
0048 0E06      07222         MOVLW   0x06
004A CFDB F000 07223         MOVFF   PLUSW2, r0x04
               07224 ;       .line   247; MainDemo.c int_to_string(mac->v[0], a);
004E C000 FFE9 07225         MOVFF   r0x02, FSR0L
0052 C000 FFF3 07226         MOVFF   r0x03, PRODL
0056 5000      07227         MOVF    r0x04, W
0058 EC00 F000 07228         CALL    __gptrget1
005C 6E00      07229         MOVWF   r0x05
005E 6A00      07230         CLRF    r0x06
0060 0E00      07231         MOVLW   HIGH(_display_mac_a_1_1)
0062 6E00      07232         MOVWF   r0x08
0064 0E00      07233         MOVLW   LOW(_display_mac_a_1_1)
0066 6E00      07234         MOVWF   r0x07
0068 0E80      07235         MOVLW   0x80
006A 6E00      07236         MOVWF   r0x09
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006C 5000      07237         MOVF    r0x09, W
006E 6EE5      07238         MOVWF   POSTDEC1
0070 5000      07239         MOVF    r0x08, W
0072 6EE5      07240         MOVWF   POSTDEC1
0074 5000      07241         MOVF    r0x07, W
0076 6EE5      07242         MOVWF   POSTDEC1
0078 5000      07243         MOVF    r0x06, W
007A 6EE5      07244         MOVWF   POSTDEC1
007C 5000      07245         MOVF    r0x05, W
007E 6EE5      07246         MOVWF   POSTDEC1
0080 EC00 F000 07247         CALL    _int_to_string
0084 0E05      07248         MOVLW   0x05
0086 26E1      07249         ADDWF   FSR1L, F
               07250 ;       .line   248; MainDemo.c int_to_string(mac->v[1], b);
0088 5000      07251         MOVF    r0x02, W
008A 0F01      07252         ADDLW   0x01
008C 6E00      07253         MOVWF   r0x05
008E 0E00      07254         MOVLW   0x00
0090 2000      07255         ADDWFC  r0x03, W
0092 6E00      07256         MOVWF   r0x06
0094 0E00      07257         MOVLW   0x00
0096 2000      07258         ADDWFC  r0x04, W
0098 6E00      07259         MOVWF   r0x07
009A C000 FFE9 07260         MOVFF   r0x05, FSR0L
009E C000 FFF3 07261         MOVFF   r0x06, PRODL
00A2 5000      07262         MOVF    r0x07, W
00A4 EC00 F000 07263         CALL    __gptrget1
00A8 6E00      07264         MOVWF   r0x05
00AA 6A00      07265         CLRF    r0x06
00AC 0E00      07266         MOVLW   HIGH(_display_mac_b_1_1)
00AE 6E00      07267         MOVWF   r0x08
00B0 0E00      07268         MOVLW   LOW(_display_mac_b_1_1)
00B2 6E00      07269         MOVWF   r0x07
00B4 0E80      07270         MOVLW   0x80
00B6 6E00      07271         MOVWF   r0x09
00B8 5000      07272         MOVF    r0x09, W
00BA 6EE5      07273         MOVWF   POSTDEC1
00BC 5000      07274         MOVF    r0x08, W
00BE 6EE5      07275         MOVWF   POSTDEC1
00C0 5000      07276         MOVF    r0x07, W
00C2 6EE5      07277         MOVWF   POSTDEC1
00C4 5000      07278         MOVF    r0x06, W
00C6 6EE5      07279         MOVWF   POSTDEC1
00C8 5000      07280         MOVF    r0x05, W
00CA 6EE5      07281         MOVWF   POSTDEC1
00CC EC00 F000 07282         CALL    _int_to_string
00D0 0E05      07283         MOVLW   0x05
00D2 26E1      07284         ADDWF   FSR1L, F
               07285 ;       .line   249; MainDemo.c int_to_string(mac->v[2], c);
00D4 5000      07286         MOVF    r0x02, W
00D6 0F02      07287         ADDLW   0x02
00D8 6E00      07288         MOVWF   r0x05
00DA 0E00      07289         MOVLW   0x00
00DC 2000      07290         ADDWFC  r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DE 6E00      07291         MOVWF   r0x06
00E0 0E00      07292         MOVLW   0x00
00E2 2000      07293         ADDWFC  r0x04, W
00E4 6E00      07294         MOVWF   r0x07
00E6 C000 FFE9 07295         MOVFF   r0x05, FSR0L
00EA C000 FFF3 07296         MOVFF   r0x06, PRODL
00EE 5000      07297         MOVF    r0x07, W
00F0 EC00 F000 07298         CALL    __gptrget1
00F4 6E00      07299         MOVWF   r0x05
00F6 6A00      07300         CLRF    r0x06
00F8 0E00      07301         MOVLW   HIGH(_display_mac_c_1_1)
00FA 6E00      07302         MOVWF   r0x08
00FC 0E00      07303         MOVLW   LOW(_display_mac_c_1_1)
00FE 6E00      07304         MOVWF   r0x07
0100 0E80      07305         MOVLW   0x80
0102 6E00      07306         MOVWF   r0x09
0104 5000      07307         MOVF    r0x09, W
0106 6EE5      07308         MOVWF   POSTDEC1
0108 5000      07309         MOVF    r0x08, W
010A 6EE5      07310         MOVWF   POSTDEC1
010C 5000      07311         MOVF    r0x07, W
010E 6EE5      07312         MOVWF   POSTDEC1
0110 5000      07313         MOVF    r0x06, W
0112 6EE5      07314         MOVWF   POSTDEC1
0114 5000      07315         MOVF    r0x05, W
0116 6EE5      07316         MOVWF   POSTDEC1
0118 EC00 F000 07317         CALL    _int_to_string
011C 0E05      07318         MOVLW   0x05
011E 26E1      07319         ADDWF   FSR1L, F
               07320 ;       .line   250; MainDemo.c int_to_string(mac->v[3], d);
0120 5000      07321         MOVF    r0x02, W
0122 0F03      07322         ADDLW   0x03
0124 6E00      07323         MOVWF   r0x05
0126 0E00      07324         MOVLW   0x00
0128 2000      07325         ADDWFC  r0x03, W
012A 6E00      07326         MOVWF   r0x06
012C 0E00      07327         MOVLW   0x00
012E 2000      07328         ADDWFC  r0x04, W
0130 6E00      07329         MOVWF   r0x07
0132 C000 FFE9 07330         MOVFF   r0x05, FSR0L
0136 C000 FFF3 07331         MOVFF   r0x06, PRODL
013A 5000      07332         MOVF    r0x07, W
013C EC00 F000 07333         CALL    __gptrget1
0140 6E00      07334         MOVWF   r0x05
0142 6A00      07335         CLRF    r0x06
0144 0E00      07336         MOVLW   HIGH(_display_mac_d_1_1)
0146 6E00      07337         MOVWF   r0x08
0148 0E00      07338         MOVLW   LOW(_display_mac_d_1_1)
014A 6E00      07339         MOVWF   r0x07
014C 0E80      07340         MOVLW   0x80
014E 6E00      07341         MOVWF   r0x09
0150 5000      07342         MOVF    r0x09, W
0152 6EE5      07343         MOVWF   POSTDEC1
0154 5000      07344         MOVF    r0x08, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0156 6EE5      07345         MOVWF   POSTDEC1
0158 5000      07346         MOVF    r0x07, W
015A 6EE5      07347         MOVWF   POSTDEC1
015C 5000      07348         MOVF    r0x06, W
015E 6EE5      07349         MOVWF   POSTDEC1
0160 5000      07350         MOVF    r0x05, W
0162 6EE5      07351         MOVWF   POSTDEC1
0164 EC00 F000 07352         CALL    _int_to_string
0168 0E05      07353         MOVLW   0x05
016A 26E1      07354         ADDWF   FSR1L, F
               07355 ;       .line   251; MainDemo.c int_to_string(mac->v[4], e);
016C 5000      07356         MOVF    r0x02, W
016E 0F04      07357         ADDLW   0x04
0170 6E00      07358         MOVWF   r0x05
0172 0E00      07359         MOVLW   0x00
0174 2000      07360         ADDWFC  r0x03, W
0176 6E00      07361         MOVWF   r0x06
0178 0E00      07362         MOVLW   0x00
017A 2000      07363         ADDWFC  r0x04, W
017C 6E00      07364         MOVWF   r0x07
017E C000 FFE9 07365         MOVFF   r0x05, FSR0L
0182 C000 FFF3 07366         MOVFF   r0x06, PRODL
0186 5000      07367         MOVF    r0x07, W
0188 EC00 F000 07368         CALL    __gptrget1
018C 6E00      07369         MOVWF   r0x05
018E 6A00      07370         CLRF    r0x06
0190 0E00      07371         MOVLW   HIGH(_display_mac_e_1_1)
0192 6E00      07372         MOVWF   r0x08
0194 0E00      07373         MOVLW   LOW(_display_mac_e_1_1)
0196 6E00      07374         MOVWF   r0x07
0198 0E80      07375         MOVLW   0x80
019A 6E00      07376         MOVWF   r0x09
019C 5000      07377         MOVF    r0x09, W
019E 6EE5      07378         MOVWF   POSTDEC1
01A0 5000      07379         MOVF    r0x08, W
01A2 6EE5      07380         MOVWF   POSTDEC1
01A4 5000      07381         MOVF    r0x07, W
01A6 6EE5      07382         MOVWF   POSTDEC1
01A8 5000      07383         MOVF    r0x06, W
01AA 6EE5      07384         MOVWF   POSTDEC1
01AC 5000      07385         MOVF    r0x05, W
01AE 6EE5      07386         MOVWF   POSTDEC1
01B0 EC00 F000 07387         CALL    _int_to_string
01B4 0E05      07388         MOVLW   0x05
01B6 26E1      07389         ADDWF   FSR1L, F
               07390 ;       .line   252; MainDemo.c int_to_string(mac->v[5], f);
01B8 0E05      07391         MOVLW   0x05
01BA 2600      07392         ADDWF   r0x02, F
01BC 0E00      07393         MOVLW   0x00
01BE 2200      07394         ADDWFC  r0x03, F
01C0 0E00      07395         MOVLW   0x00
01C2 2200      07396         ADDWFC  r0x04, F
01C4 C000 FFE9 07397         MOVFF   r0x02, FSR0L
01C8 C000 FFF3 07398         MOVFF   r0x03, PRODL
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01CC 5000      07399         MOVF    r0x04, W
01CE EC00 F000 07400         CALL    __gptrget1
01D2 6E00      07401         MOVWF   r0x02
01D4 6A00      07402         CLRF    r0x03
01D6 0E00      07403         MOVLW   HIGH(_display_mac_f_1_1)
01D8 6E00      07404         MOVWF   r0x05
01DA 0E00      07405         MOVLW   LOW(_display_mac_f_1_1)
01DC 6E00      07406         MOVWF   r0x04
01DE 0E80      07407         MOVLW   0x80
01E0 6E00      07408         MOVWF   r0x06
01E2 5000      07409         MOVF    r0x06, W
01E4 6EE5      07410         MOVWF   POSTDEC1
01E6 5000      07411         MOVF    r0x05, W
01E8 6EE5      07412         MOVWF   POSTDEC1
01EA 5000      07413         MOVF    r0x04, W
01EC 6EE5      07414         MOVWF   POSTDEC1
01EE 5000      07415         MOVF    r0x03, W
01F0 6EE5      07416         MOVWF   POSTDEC1
01F2 5000      07417         MOVF    r0x02, W
01F4 6EE5      07418         MOVWF   POSTDEC1
01F6 EC00 F000 07419         CALL    _int_to_string
01FA 0E05      07420         MOVLW   0x05
01FC 26E1      07421         ADDWF   FSR1L, F
               07422 ;       .line   254; MainDemo.c DisplayString(pos, a);
01FE 0E00      07423         MOVLW   HIGH(_display_mac_a_1_1)
0200 6E00      07424         MOVWF   r0x02
0202 0E00      07425         MOVLW   LOW(_display_mac_a_1_1)
0204 6E00      07426         MOVWF   r0x01
0206 0E80      07427         MOVLW   0x80
0208 6E00      07428         MOVWF   r0x03
020A 5000      07429         MOVF    r0x03, W
020C 6EE5      07430         MOVWF   POSTDEC1
020E 5000      07431         MOVF    r0x02, W
0210 6EE5      07432         MOVWF   POSTDEC1
0212 5000      07433         MOVF    r0x01, W
0214 6EE5      07434         MOVWF   POSTDEC1
0216 5000      07435         MOVF    r0x00, W
0218 6EE5      07436         MOVWF   POSTDEC1
021A EC00 F000 07437         CALL    _DisplayString
021E 0E04      07438         MOVLW   0x04
0220 26E1      07439         ADDWF   FSR1L, F
               07440 ;       .line   255; MainDemo.c DisplayString(pos+4, b);
0222 0E04      07441         MOVLW   0x04
0224 2400      07442         ADDWF   r0x00, W
0226 6E00      07443         MOVWF   r0x01
0228 0E00      07444         MOVLW   HIGH(_display_mac_b_1_1)
022A 6E00      07445         MOVWF   r0x03
022C 0E00      07446         MOVLW   LOW(_display_mac_b_1_1)
022E 6E00      07447         MOVWF   r0x02
0230 0E80      07448         MOVLW   0x80
0232 6E00      07449         MOVWF   r0x04
0234 5000      07450         MOVF    r0x04, W
0236 6EE5      07451         MOVWF   POSTDEC1
0238 5000      07452         MOVF    r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
023A 6EE5      07453         MOVWF   POSTDEC1
023C 5000      07454         MOVF    r0x02, W
023E 6EE5      07455         MOVWF   POSTDEC1
0240 5000      07456         MOVF    r0x01, W
0242 6EE5      07457         MOVWF   POSTDEC1
0244 EC00 F000 07458         CALL    _DisplayString
0248 0E04      07459         MOVLW   0x04
024A 26E1      07460         ADDWF   FSR1L, F
               07461 ;       .line   256; MainDemo.c DisplayString(pos+8, c);
024C 0E08      07462         MOVLW   0x08
024E 2400      07463         ADDWF   r0x00, W
0250 6E00      07464         MOVWF   r0x01
0252 0E00      07465         MOVLW   HIGH(_display_mac_c_1_1)
0254 6E00      07466         MOVWF   r0x03
0256 0E00      07467         MOVLW   LOW(_display_mac_c_1_1)
0258 6E00      07468         MOVWF   r0x02
025A 0E80      07469         MOVLW   0x80
025C 6E00      07470         MOVWF   r0x04
025E 5000      07471         MOVF    r0x04, W
0260 6EE5      07472         MOVWF   POSTDEC1
0262 5000      07473         MOVF    r0x03, W
0264 6EE5      07474         MOVWF   POSTDEC1
0266 5000      07475         MOVF    r0x02, W
0268 6EE5      07476         MOVWF   POSTDEC1
026A 5000      07477         MOVF    r0x01, W
026C 6EE5      07478         MOVWF   POSTDEC1
026E EC00 F000 07479         CALL    _DisplayString
0272 0E04      07480         MOVLW   0x04
0274 26E1      07481         ADDWF   FSR1L, F
               07482 ;       .line   257; MainDemo.c DisplayString(pos+12, d);
0276 0E0C      07483         MOVLW   0x0c
0278 2400      07484         ADDWF   r0x00, W
027A 6E00      07485         MOVWF   r0x01
027C 0E00      07486         MOVLW   HIGH(_display_mac_d_1_1)
027E 6E00      07487         MOVWF   r0x03
0280 0E00      07488         MOVLW   LOW(_display_mac_d_1_1)
0282 6E00      07489         MOVWF   r0x02
0284 0E80      07490         MOVLW   0x80
0286 6E00      07491         MOVWF   r0x04
0288 5000      07492         MOVF    r0x04, W
028A 6EE5      07493         MOVWF   POSTDEC1
028C 5000      07494         MOVF    r0x03, W
028E 6EE5      07495         MOVWF   POSTDEC1
0290 5000      07496         MOVF    r0x02, W
0292 6EE5      07497         MOVWF   POSTDEC1
0294 5000      07498         MOVF    r0x01, W
0296 6EE5      07499         MOVWF   POSTDEC1
0298 EC00 F000 07500         CALL    _DisplayString
029C 0E04      07501         MOVLW   0x04
029E 26E1      07502         ADDWF   FSR1L, F
               07503 ;       .line   258; MainDemo.c DisplayString(pos+16, e);
02A0 0E10      07504         MOVLW   0x10
02A2 2400      07505         ADDWF   r0x00, W
02A4 6E00      07506         MOVWF   r0x01
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02A6 0E00      07507         MOVLW   HIGH(_display_mac_e_1_1)
02A8 6E00      07508         MOVWF   r0x03
02AA 0E00      07509         MOVLW   LOW(_display_mac_e_1_1)
02AC 6E00      07510         MOVWF   r0x02
02AE 0E80      07511         MOVLW   0x80
02B0 6E00      07512         MOVWF   r0x04
02B2 5000      07513         MOVF    r0x04, W
02B4 6EE5      07514         MOVWF   POSTDEC1
02B6 5000      07515         MOVF    r0x03, W
02B8 6EE5      07516         MOVWF   POSTDEC1
02BA 5000      07517         MOVF    r0x02, W
02BC 6EE5      07518         MOVWF   POSTDEC1
02BE 5000      07519         MOVF    r0x01, W
02C0 6EE5      07520         MOVWF   POSTDEC1
02C2 EC00 F000 07521         CALL    _DisplayString
02C6 0E04      07522         MOVLW   0x04
02C8 26E1      07523         ADDWF   FSR1L, F
               07524 ;       .line   259; MainDemo.c DisplayString(pos+20, f);
02CA 0E14      07525         MOVLW   0x14
02CC 2600      07526         ADDWF   r0x00, F
02CE 0E00      07527         MOVLW   HIGH(_display_mac_f_1_1)
02D0 6E00      07528         MOVWF   r0x02
02D2 0E00      07529         MOVLW   LOW(_display_mac_f_1_1)
02D4 6E00      07530         MOVWF   r0x01
02D6 0E80      07531         MOVLW   0x80
02D8 6E00      07532         MOVWF   r0x03
02DA 5000      07533         MOVF    r0x03, W
02DC 6EE5      07534         MOVWF   POSTDEC1
02DE 5000      07535         MOVF    r0x02, W
02E0 6EE5      07536         MOVWF   POSTDEC1
02E2 5000      07537         MOVF    r0x01, W
02E4 6EE5      07538         MOVWF   POSTDEC1
02E6 5000      07539         MOVF    r0x00, W
02E8 6EE5      07540         MOVWF   POSTDEC1
02EA EC00 F000 07541         CALL    _DisplayString
02EE 0E04      07542         MOVLW   0x04
02F0 26E1      07543         ADDWF   FSR1L, F
02F2 CFE4 F000 07544         MOVFF   PREINC1, r0x09
02F6 CFE4 F000 07545         MOVFF   PREINC1, r0x08
02FA CFE4 F000 07546         MOVFF   PREINC1, r0x07
02FE CFE4 F000 07547         MOVFF   PREINC1, r0x06
0302 CFE4 F000 07548         MOVFF   PREINC1, r0x05
0306 CFE4 F000 07549         MOVFF   PREINC1, r0x04
030A CFE4 F000 07550         MOVFF   PREINC1, r0x03
030E CFE4 F000 07551         MOVFF   PREINC1, r0x02
0312 CFE4 F000 07552         MOVFF   PREINC1, r0x01
0316 CFE4 F000 07553         MOVFF   PREINC1, r0x00
031A CFE4 FFD9 07554         MOVFF   PREINC1, FSR2L
031E 0012      07555         RETURN  
               07556 
               07557 ; ; Starting pCode block
               07558 S_MainDemo__int_to_string       code
0000 07559 _int_to_string:
               07560 ;       .line   234; MainDemo.c void int_to_string(int value, char *r){
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 CFD9 FFE5 07561         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07562         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07563         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07564         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07565         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07566         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07567         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07568         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07569         MOVFF   r0x06, POSTDEC1
0024 0E02      07570         MOVLW   0x02
0026 CFDB F000 07571         MOVFF   PLUSW2, r0x00
002A 0E03      07572         MOVLW   0x03
002C CFDB F000 07573         MOVFF   PLUSW2, r0x01
0030 0E04      07574         MOVLW   0x04
0032 CFDB F000 07575         MOVFF   PLUSW2, r0x02
0036 0E05      07576         MOVLW   0x05
0038 CFDB F000 07577         MOVFF   PLUSW2, r0x03
003C 0E06      07578         MOVLW   0x06
003E CFDB F000 07579         MOVFF   PLUSW2, r0x04
               07580 ;       .line   235; MainDemo.c char *p = r+number_of_char(value);
0042 5000      07581         MOVF    r0x01, W
0044 6EE5      07582         MOVWF   POSTDEC1
0046 5000      07583         MOVF    r0x00, W
0048 6EE5      07584         MOVWF   POSTDEC1
004A EC00 F000 07585         CALL    _number_of_char
004E 6E00      07586         MOVWF   r0x05
0050 CFF3 F000 07587         MOVFF   PRODL, r0x06
0054 0E02      07588         MOVLW   0x02
0056 26E1      07589         ADDWF   FSR1L, F
0058 5000      07590         MOVF    r0x05, W
005A 2600      07591         ADDWF   r0x02, F
005C 5000      07592         MOVF    r0x06, W
005E 2200      07593         ADDWFC  r0x03, F
0060 6AE8      07594         CLRF    WREG
0062 BE00      07595         BTFSC   r0x06, 7
0064 68E8      07596         SETF    WREG
0066 2200      07597         ADDWFC  r0x04, F
               07598 ;       .line   236; MainDemo.c *p = '\0';
0068 0E00      07599         MOVLW   0x00
006A 6EE5      07600         MOVWF   POSTDEC1
006C C000 FFE9 07601         MOVFF   r0x02, FSR0L
0070 C000 FFF3 07602         MOVFF   r0x03, PRODL
0074 5000      07603         MOVF    r0x04, W
0076 EC00 F000 07604         CALL    __gptrput1
               07605 ;       .line   237; MainDemo.c p--;
007A 0EFF      07606         MOVLW   0xff
007C 2600      07607         ADDWF   r0x02, F
007E 0EFF      07608         MOVLW   0xff
0080 2200      07609         ADDWFC  r0x03, F
0082 0EFF      07610         MOVLW   0xff
0084 2200      07611         ADDWFC  r0x04, F
0086 07612 _00250_DS_:
               07613 ;       .line   238; MainDemo.c while(value != 0){
0086 5000      07614         MOVF    r0x00, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0088 1000      07615         IORWF   r0x01, W
008A E000      07616         BZ      _00253_DS_
               07617 ;       .line   239; MainDemo.c *p = (value%10)+48;
008C 0E00      07618         MOVLW   0x00
008E 6EE5      07619         MOVWF   POSTDEC1
0090 0E0A      07620         MOVLW   0x0a
0092 6EE5      07621         MOVWF   POSTDEC1
0094 5000      07622         MOVF    r0x01, W
0096 6EE5      07623         MOVWF   POSTDEC1
0098 5000      07624         MOVF    r0x00, W
009A 6EE5      07625         MOVWF   POSTDEC1
009C EC00 F000 07626         CALL    __modsint
00A0 6E00      07627         MOVWF   r0x05
00A2 CFF3 F000 07628         MOVFF   PRODL, r0x06
00A6 0E04      07629         MOVLW   0x04
00A8 26E1      07630         ADDWF   FSR1L, F
00AA 0E30      07631         MOVLW   0x30
00AC 2600      07632         ADDWF   r0x05, F
00AE C000 FFE5 07633         MOVFF   r0x05, POSTDEC1
00B2 C000 FFE9 07634         MOVFF   r0x02, FSR0L
00B6 C000 FFF3 07635         MOVFF   r0x03, PRODL
00BA 5000      07636         MOVF    r0x04, W
00BC EC00 F000 07637         CALL    __gptrput1
               07638 ;       .line   240; MainDemo.c value = value/10;
00C0 0E00      07639         MOVLW   0x00
00C2 6EE5      07640         MOVWF   POSTDEC1
00C4 0E0A      07641         MOVLW   0x0a
00C6 6EE5      07642         MOVWF   POSTDEC1
00C8 5000      07643         MOVF    r0x01, W
00CA 6EE5      07644         MOVWF   POSTDEC1
00CC 5000      07645         MOVF    r0x00, W
00CE 6EE5      07646         MOVWF   POSTDEC1
00D0 EC00 F000 07647         CALL    __divsint
00D4 6E00      07648         MOVWF   r0x00
00D6 CFF3 F000 07649         MOVFF   PRODL, r0x01
00DA 0E04      07650         MOVLW   0x04
00DC 26E1      07651         ADDWF   FSR1L, F
               07652 ;       .line   241; MainDemo.c p--;
00DE 0EFF      07653         MOVLW   0xff
00E0 2600      07654         ADDWF   r0x02, F
00E2 0EFF      07655         MOVLW   0xff
00E4 2200      07656         ADDWFC  r0x03, F
00E6 0EFF      07657         MOVLW   0xff
00E8 2200      07658         ADDWFC  r0x04, F
00EA D000      07659         BRA     _00250_DS_
00EC 07660 _00253_DS_:
00EC CFE4 F000 07661         MOVFF   PREINC1, r0x06
00F0 CFE4 F000 07662         MOVFF   PREINC1, r0x05
00F4 CFE4 F000 07663         MOVFF   PREINC1, r0x04
00F8 CFE4 F000 07664         MOVFF   PREINC1, r0x03
00FC CFE4 F000 07665         MOVFF   PREINC1, r0x02
0100 CFE4 F000 07666         MOVFF   PREINC1, r0x01
0104 CFE4 F000 07667         MOVFF   PREINC1, r0x00
0108 CFE4 FFD9 07668         MOVFF   PREINC1, FSR2L
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010C 0012      07669         RETURN  
               07670 
               07671 ; ; Starting pCode block
               07672 S_MainDemo__number_of_char      code
0000 07673 _number_of_char:
               07674 ;       .line   225; MainDemo.c int number_of_char(int value){
0000 CFD9 FFE5 07675         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07676         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07677         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07678         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07679         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07680         MOVFF   r0x03, POSTDEC1
0018 0E02      07681         MOVLW   0x02
001A CFDB F000 07682         MOVFF   PLUSW2, r0x00
001E 0E03      07683         MOVLW   0x03
0020 CFDB F000 07684         MOVFF   PLUSW2, r0x01
               07685 ;       .line   227; MainDemo.c while(value != 0){
0024 6A00      07686         CLRF    r0x02
0026 6A00      07687         CLRF    r0x03
0028 07688 _00242_DS_:
0028 5000      07689         MOVF    r0x00, W
002A 1000      07690         IORWF   r0x01, W
002C E000      07691         BZ      _00244_DS_
               07692 ;       .line   228; MainDemo.c value = value/10;
002E 0E00      07693         MOVLW   0x00
0030 6EE5      07694         MOVWF   POSTDEC1
0032 0E0A      07695         MOVLW   0x0a
0034 6EE5      07696         MOVWF   POSTDEC1
0036 5000      07697         MOVF    r0x01, W
0038 6EE5      07698         MOVWF   POSTDEC1
003A 5000      07699         MOVF    r0x00, W
003C 6EE5      07700         MOVWF   POSTDEC1
003E EC00 F000 07701         CALL    __divsint
0042 6E00      07702         MOVWF   r0x00
0044 CFF3 F000 07703         MOVFF   PRODL, r0x01
0048 0E04      07704         MOVLW   0x04
004A 26E1      07705         ADDWF   FSR1L, F
               07706 ;       .line   229; MainDemo.c i++;
004C 2A00      07707         INCF    r0x02, F
004E B0D8      07708         BTFSC   STATUS, 0
0050 2A00      07709         INCF    r0x03, F
0052 D000      07710         BRA     _00242_DS_
0054 07711 _00244_DS_:
               07712 ;       .line   231; MainDemo.c return i;
0054 C000 FFF3 07713         MOVFF   r0x03, PRODL
0058 5000      07714         MOVF    r0x02, W
005A CFE4 F000 07715         MOVFF   PREINC1, r0x03
005E CFE4 F000 07716         MOVFF   PREINC1, r0x02
0062 CFE4 F000 07717         MOVFF   PREINC1, r0x01
0066 CFE4 F000 07718         MOVFF   PREINC1, r0x00
006A CFE4 FFD9 07719         MOVFF   PREINC1, FSR2L
006E 0012      07720         RETURN  
               07721 
               07722 ; ; Starting pCode block
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               07723 S_MainDemo__set_to_MAC  code
0000 07724 _set_to_MAC:
               07725 ;       .line   218; MainDemo.c void set_to_MAC(BYTE *src, MAC_ADDR *dest){
0000 CFD9 FFE5 07726         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07727         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07728         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07729         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07730         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07731         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07732         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07733         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07734         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07735         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07736         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07737         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 07738         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 07739         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 07740         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 07741         MOVFF   r0x0d, POSTDEC1
0040 0E02      07742         MOVLW   0x02
0042 CFDB F000 07743         MOVFF   PLUSW2, r0x00
0046 0E03      07744         MOVLW   0x03
0048 CFDB F000 07745         MOVFF   PLUSW2, r0x01
004C 0E04      07746         MOVLW   0x04
004E CFDB F000 07747         MOVFF   PLUSW2, r0x02
0052 0E05      07748         MOVLW   0x05
0054 CFDB F000 07749         MOVFF   PLUSW2, r0x03
0058 0E06      07750         MOVLW   0x06
005A CFDB F000 07751         MOVFF   PLUSW2, r0x04
005E 0E07      07752         MOVLW   0x07
0060 CFDB F000 07753         MOVFF   PLUSW2, r0x05
               07754 ;       .line   220; MainDemo.c for(i=0; i<6; i++){
0064 6A00      07755         CLRF    r0x06
0066 6A00      07756         CLRF    r0x07
0068 07757 _00228_DS_:
0068 5000      07758         MOVF    r0x07, W
006A 0F80      07759         ADDLW   0x80
006C 0F80      07760         ADDLW   0x80
006E E100      07761         BNZ     _00237_DS_
0070 0E06      07762         MOVLW   0x06
0072 5C00      07763         SUBWF   r0x06, W
0074 07764 _00237_DS_:
0074 E200      07765         BC      _00232_DS_
               07766 ;       .line   221; MainDemo.c dest->v[i] = src[i];
0076 5000      07767         MOVF    r0x06, W
0078 2400      07768         ADDWF   r0x03, W
007A 6E00      07769         MOVWF   r0x08
007C 5000      07770         MOVF    r0x07, W
007E 2000      07771         ADDWFC  r0x04, W
0080 6E00      07772         MOVWF   r0x09
0082 6AE8      07773         CLRF    WREG
0084 BE00      07774         BTFSC   r0x07, 7
0086 68E8      07775         SETF    WREG
0088 2000      07776         ADDWFC  r0x05, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A 6E00      07777         MOVWF   r0x0a
008C 5000      07778         MOVF    r0x06, W
008E 2400      07779         ADDWF   r0x00, W
0090 6E00      07780         MOVWF   r0x0b
0092 5000      07781         MOVF    r0x07, W
0094 2000      07782         ADDWFC  r0x01, W
0096 6E00      07783         MOVWF   r0x0c
0098 6AE8      07784         CLRF    WREG
009A BE00      07785         BTFSC   r0x07, 7
009C 68E8      07786         SETF    WREG
009E 2000      07787         ADDWFC  r0x02, W
00A0 6E00      07788         MOVWF   r0x0d
00A2 C000 FFE9 07789         MOVFF   r0x0b, FSR0L
00A6 C000 FFF3 07790         MOVFF   r0x0c, PRODL
00AA 5000      07791         MOVF    r0x0d, W
00AC EC00 F000 07792         CALL    __gptrget1
00B0 6E00      07793         MOVWF   r0x0b
00B2 C000 FFE5 07794         MOVFF   r0x0b, POSTDEC1
00B6 C000 FFE9 07795         MOVFF   r0x08, FSR0L
00BA C000 FFF3 07796         MOVFF   r0x09, PRODL
00BE 5000      07797         MOVF    r0x0a, W
00C0 EC00 F000 07798         CALL    __gptrput1
               07799 ;       .line   220; MainDemo.c for(i=0; i<6; i++){
00C4 2A00      07800         INCF    r0x06, F
00C6 B0D8      07801         BTFSC   STATUS, 0
00C8 2A00      07802         INCF    r0x07, F
00CA D000      07803         BRA     _00228_DS_
00CC 07804 _00232_DS_:
00CC CFE4 F000 07805         MOVFF   PREINC1, r0x0d
00D0 CFE4 F000 07806         MOVFF   PREINC1, r0x0c
00D4 CFE4 F000 07807         MOVFF   PREINC1, r0x0b
00D8 CFE4 F000 07808         MOVFF   PREINC1, r0x0a
00DC CFE4 F000 07809         MOVFF   PREINC1, r0x09
00E0 CFE4 F000 07810         MOVFF   PREINC1, r0x08
00E4 CFE4 F000 07811         MOVFF   PREINC1, r0x07
00E8 CFE4 F000 07812         MOVFF   PREINC1, r0x06
00EC CFE4 F000 07813         MOVFF   PREINC1, r0x05
00F0 CFE4 F000 07814         MOVFF   PREINC1, r0x04
00F4 CFE4 F000 07815         MOVFF   PREINC1, r0x03
00F8 CFE4 F000 07816         MOVFF   PREINC1, r0x02
00FC CFE4 F000 07817         MOVFF   PREINC1, r0x01
0100 CFE4 F000 07818         MOVFF   PREINC1, r0x00
0104 CFE4 FFD9 07819         MOVFF   PREINC1, FSR2L
0108 0012      07820         RETURN  
               07821 
               07822 ; ; Starting pCode block
               07823 S_MainDemo__set_to_dhcp_ip      code
0000 07824 _set_to_dhcp_ip:
               07825 ;       .line   211; MainDemo.c void set_to_dhcp_ip(IP_ADDR *ip){
0000 CFD9 FFE5 07826         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07827         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07828         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07829         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07830         MOVFF   r0x02, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014 C000 FFE5 07831         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07832         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07833         MOVFF   r0x05, POSTDEC1
0020 0E02      07834         MOVLW   0x02
0022 CFDB F000 07835         MOVFF   PLUSW2, r0x00
0026 0E03      07836         MOVLW   0x03
0028 CFDB F000 07837         MOVFF   PLUSW2, r0x01
002C 0E04      07838         MOVLW   0x04
002E CFDB F000 07839         MOVFF   PLUSW2, r0x02
               07840 ;       .line   212; MainDemo.c ip->v[0] = DHCP_IP8;
0032 0EC0      07841         MOVLW   0xc0
0034 6EE5      07842         MOVWF   POSTDEC1
0036 C000 FFE9 07843         MOVFF   r0x00, FSR0L
003A C000 FFF3 07844         MOVFF   r0x01, PRODL
003E 5000      07845         MOVF    r0x02, W
0040 EC00 F000 07846         CALL    __gptrput1
               07847 ;       .line   213; MainDemo.c ip->v[1] = DHCP_IP16;
0044 5000      07848         MOVF    r0x00, W
0046 0F01      07849         ADDLW   0x01
0048 6E00      07850         MOVWF   r0x03
004A 0E00      07851         MOVLW   0x00
004C 2000      07852         ADDWFC  r0x01, W
004E 6E00      07853         MOVWF   r0x04
0050 0E00      07854         MOVLW   0x00
0052 2000      07855         ADDWFC  r0x02, W
0054 6E00      07856         MOVWF   r0x05
0056 0EA8      07857         MOVLW   0xa8
0058 6EE5      07858         MOVWF   POSTDEC1
005A C000 FFE9 07859         MOVFF   r0x03, FSR0L
005E C000 FFF3 07860         MOVFF   r0x04, PRODL
0062 5000      07861         MOVF    r0x05, W
0064 EC00 F000 07862         CALL    __gptrput1
               07863 ;       .line   214; MainDemo.c ip->v[2] = DHCP_IP24;
0068 5000      07864         MOVF    r0x00, W
006A 0F02      07865         ADDLW   0x02
006C 6E00      07866         MOVWF   r0x03
006E 0E00      07867         MOVLW   0x00
0070 2000      07868         ADDWFC  r0x01, W
0072 6E00      07869         MOVWF   r0x04
0074 0E00      07870         MOVLW   0x00
0076 2000      07871         ADDWFC  r0x02, W
0078 6E00      07872         MOVWF   r0x05
007A 0E58      07873         MOVLW   0x58
007C 6EE5      07874         MOVWF   POSTDEC1
007E C000 FFE9 07875         MOVFF   r0x03, FSR0L
0082 C000 FFF3 07876         MOVFF   r0x04, PRODL
0086 5000      07877         MOVF    r0x05, W
0088 EC00 F000 07878         CALL    __gptrput1
               07879 ;       .line   215; MainDemo.c ip->v[3] = DHCP_IP32;
008C 0E03      07880         MOVLW   0x03
008E 2600      07881         ADDWF   r0x00, F
0090 0E00      07882         MOVLW   0x00
0092 2200      07883         ADDWFC  r0x01, F
0094 0E00      07884         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0096 2200      07885         ADDWFC  r0x02, F
0098 0E02      07886         MOVLW   0x02
009A 6EE5      07887         MOVWF   POSTDEC1
009C C000 FFE9 07888         MOVFF   r0x00, FSR0L
00A0 C000 FFF3 07889         MOVFF   r0x01, PRODL
00A4 5000      07890         MOVF    r0x02, W
00A6 EC00 F000 07891         CALL    __gptrput1
00AA CFE4 F000 07892         MOVFF   PREINC1, r0x05
00AE CFE4 F000 07893         MOVFF   PREINC1, r0x04
00B2 CFE4 F000 07894         MOVFF   PREINC1, r0x03
00B6 CFE4 F000 07895         MOVFF   PREINC1, r0x02
00BA CFE4 F000 07896         MOVFF   PREINC1, r0x01
00BE CFE4 F000 07897         MOVFF   PREINC1, r0x00
00C2 CFE4 FFD9 07898         MOVFF   PREINC1, FSR2L
00C6 0012      07899         RETURN  
               07900 
               07901 ; ; Starting pCode block
               07902 S_MainDemo__get_pool_el_mac     code
0000 07903 _get_pool_el_mac:
               07904 ;       .line   200; MainDemo.c BOOL get_pool_el_mac(MAC_ADDR *mac, POOL_ELEMENT **pool_el){
0000 CFD9 FFE5 07905         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07906         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07907         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07908         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07909         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07910         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07911         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07912         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07913         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07914         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07915         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07916         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 07917         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 07918         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 07919         MOVFF   r0x0c, POSTDEC1
003C 0E02      07920         MOVLW   0x02
003E CFDB F000 07921         MOVFF   PLUSW2, r0x00
0042 0E03      07922         MOVLW   0x03
0044 CFDB F000 07923         MOVFF   PLUSW2, r0x01
0048 0E04      07924         MOVLW   0x04
004A CFDB F000 07925         MOVFF   PLUSW2, r0x02
004E 0E05      07926         MOVLW   0x05
0050 CFDB F000 07927         MOVFF   PLUSW2, r0x03
0054 0E06      07928         MOVLW   0x06
0056 CFDB F000 07929         MOVFF   PLUSW2, r0x04
005A 0E07      07930         MOVLW   0x07
005C CFDB F000 07931         MOVFF   PLUSW2, r0x05
               07932 ;       .line   202; MainDemo.c for(i=0; i<POOL_SIZE; i++){
0060 6A00      07933         CLRF    r0x06
0062 6A00      07934         CLRF    r0x07
0064 6A00      07935         CLRF    r0x08
0066 6A00      07936         CLRF    r0x09
0068 07937 _00209_DS_:
0068 5000      07938         MOVF    r0x07, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006A 0F80      07939         ADDLW   0x80
006C 0F80      07940         ADDLW   0x80
006E E100      07941         BNZ     _00218_DS_
0070 0E0A      07942         MOVLW   0x0a
0072 5C00      07943         SUBWF   r0x06, W
0074 07944 _00218_DS_:
0074 B0D8      07945         BTFSC   STATUS, 0
0076 D000      07946         BRA     _00212_DS_
               07947 ;       .line   203; MainDemo.c if(mac_cmp(mac, &pool[i].mac)){
0078 0E00      07948         MOVLW   LOW(_pool)
007A 2400      07949         ADDWF   r0x08, W
007C 6E00      07950         MOVWF   r0x0a
007E 0E00      07951         MOVLW   HIGH(_pool)
0080 2000      07952         ADDWFC  r0x09, W
0082 6E00      07953         MOVWF   r0x0b
0084 0E04      07954         MOVLW   0x04
0086 2600      07955         ADDWF   r0x0a, F
0088 B0D8      07956         BTFSC   STATUS, 0
008A 2A00      07957         INCF    r0x0b, F
008C 5000      07958         MOVF    r0x0b, W
008E 6E00      07959         MOVWF   r0x0b
0090 5000      07960         MOVF    r0x0a, W
0092 6E00      07961         MOVWF   r0x0a
0094 0E80      07962         MOVLW   0x80
0096 6E00      07963         MOVWF   r0x0c
0098 5000      07964         MOVF    r0x0c, W
009A 6EE5      07965         MOVWF   POSTDEC1
009C 5000      07966         MOVF    r0x0b, W
009E 6EE5      07967         MOVWF   POSTDEC1
00A0 5000      07968         MOVF    r0x0a, W
00A2 6EE5      07969         MOVWF   POSTDEC1
00A4 5000      07970         MOVF    r0x02, W
00A6 6EE5      07971         MOVWF   POSTDEC1
00A8 5000      07972         MOVF    r0x01, W
00AA 6EE5      07973         MOVWF   POSTDEC1
00AC 5000      07974         MOVF    r0x00, W
00AE 6EE5      07975         MOVWF   POSTDEC1
00B0 EC00 F000 07976         CALL    _mac_cmp
00B4 6E00      07977         MOVWF   r0x0a
00B6 0E06      07978         MOVLW   0x06
00B8 26E1      07979         ADDWF   FSR1L, F
00BA 5000      07980         MOVF    r0x0a, W
00BC E000      07981         BZ      _00211_DS_
               07982 ;       .line   204; MainDemo.c *pool_el = &pool[i];
00BE 0E00      07983         MOVLW   LOW(_pool)
00C0 2400      07984         ADDWF   r0x08, W
00C2 6E00      07985         MOVWF   r0x0a
00C4 0E00      07986         MOVLW   HIGH(_pool)
00C6 2000      07987         ADDWFC  r0x09, W
00C8 6E00      07988         MOVWF   r0x0b
00CA 5000      07989         MOVF    r0x0b, W
00CC 6E00      07990         MOVWF   r0x0b
00CE 5000      07991         MOVF    r0x0a, W
00D0 6E00      07992         MOVWF   r0x0a
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D2 0E80      07993         MOVLW   0x80
00D4 6E00      07994         MOVWF   r0x0c
00D6 C000 FFE5 07995         MOVFF   r0x0a, POSTDEC1
00DA C000 FFF4 07996         MOVFF   r0x0b, PRODH
00DE C000 FFF6 07997         MOVFF   r0x0c, TBLPTRL
00E2 C000 FFE9 07998         MOVFF   r0x03, FSR0L
00E6 C000 FFF3 07999         MOVFF   r0x04, PRODL
00EA 5000      08000         MOVF    r0x05, W
00EC EC00 F000 08001         CALL    __gptrput3
               08002 ;       .line   205; MainDemo.c return TRUE;
00F0 0E01      08003         MOVLW   0x01
00F2 D000      08004         BRA     _00213_DS_
00F4 08005 _00211_DS_:
               08006 ;       .line   202; MainDemo.c for(i=0; i<POOL_SIZE; i++){
00F4 0E14      08007         MOVLW   0x14
00F6 2600      08008         ADDWF   r0x08, F
00F8 B0D8      08009         BTFSC   STATUS, 0
00FA 2A00      08010         INCF    r0x09, F
00FC 2A00      08011         INCF    r0x06, F
00FE B0D8      08012         BTFSC   STATUS, 0
0100 2A00      08013         INCF    r0x07, F
0102 D000      08014         BRA     _00209_DS_
0104 08015 _00212_DS_:
               08016 ;       .line   208; MainDemo.c return FALSE;
0104 6AE8      08017         CLRF    WREG
0106 08018 _00213_DS_:
0106 CFE4 F000 08019         MOVFF   PREINC1, r0x0c
010A CFE4 F000 08020         MOVFF   PREINC1, r0x0b
010E CFE4 F000 08021         MOVFF   PREINC1, r0x0a
0112 CFE4 F000 08022         MOVFF   PREINC1, r0x09
0116 CFE4 F000 08023         MOVFF   PREINC1, r0x08
011A CFE4 F000 08024         MOVFF   PREINC1, r0x07
011E CFE4 F000 08025         MOVFF   PREINC1, r0x06
0122 CFE4 F000 08026         MOVFF   PREINC1, r0x05
0126 CFE4 F000 08027         MOVFF   PREINC1, r0x04
012A CFE4 F000 08028         MOVFF   PREINC1, r0x03
012E CFE4 F000 08029         MOVFF   PREINC1, r0x02
0132 CFE4 F000 08030         MOVFF   PREINC1, r0x01
0136 CFE4 F000 08031         MOVFF   PREINC1, r0x00
013A CFE4 FFD9 08032         MOVFF   PREINC1, FSR2L
013E 0012      08033         RETURN  
               08034 
               08035 ; ; Starting pCode block
               08036 S_MainDemo__get_pool_el_ip      code
0000 08037 _get_pool_el_ip:
               08038 ;       .line   189; MainDemo.c BOOL get_pool_el_ip(IP_ADDR *ip, POOL_ELEMENT **pool_el){
0000 CFD9 FFE5 08039         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 08040         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 08041         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 08042         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 08043         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 08044         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 08045         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 08046         MOVFF   r0x05, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 C000 FFE5 08047         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 08048         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 08049         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 08050         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 08051         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 08052         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 08053         MOVFF   r0x0c, POSTDEC1
003C 0E02      08054         MOVLW   0x02
003E CFDB F000 08055         MOVFF   PLUSW2, r0x00
0042 0E03      08056         MOVLW   0x03
0044 CFDB F000 08057         MOVFF   PLUSW2, r0x01
0048 0E04      08058         MOVLW   0x04
004A CFDB F000 08059         MOVFF   PLUSW2, r0x02
004E 0E05      08060         MOVLW   0x05
0050 CFDB F000 08061         MOVFF   PLUSW2, r0x03
0054 0E06      08062         MOVLW   0x06
0056 CFDB F000 08063         MOVFF   PLUSW2, r0x04
005A 0E07      08064         MOVLW   0x07
005C CFDB F000 08065         MOVFF   PLUSW2, r0x05
               08066 ;       .line   191; MainDemo.c for(i=0; i<POOL_SIZE; i++){
0060 6A00      08067         CLRF    r0x06
0062 6A00      08068         CLRF    r0x07
0064 6A00      08069         CLRF    r0x08
0066 6A00      08070         CLRF    r0x09
0068 08071 _00193_DS_:
0068 5000      08072         MOVF    r0x07, W
006A 0F80      08073         ADDLW   0x80
006C 0F80      08074         ADDLW   0x80
006E E100      08075         BNZ     _00202_DS_
0070 0E0A      08076         MOVLW   0x0a
0072 5C00      08077         SUBWF   r0x06, W
0074 08078 _00202_DS_:
0074 B0D8      08079         BTFSC   STATUS, 0
0076 D000      08080         BRA     _00196_DS_
               08081 ;       .line   192; MainDemo.c if(ip_cmp(&pool[i].ip, ip)){
0078 0E00      08082         MOVLW   LOW(_pool)
007A 2400      08083         ADDWF   r0x08, W
007C 6E00      08084         MOVWF   r0x0a
007E 0E00      08085         MOVLW   HIGH(_pool)
0080 2000      08086         ADDWFC  r0x09, W
0082 6E00      08087         MOVWF   r0x0b
0084 5000      08088         MOVF    r0x0b, W
0086 6E00      08089         MOVWF   r0x0b
0088 5000      08090         MOVF    r0x0a, W
008A 6E00      08091         MOVWF   r0x0a
008C 0E80      08092         MOVLW   0x80
008E 6E00      08093         MOVWF   r0x0c
0090 5000      08094         MOVF    r0x02, W
0092 6EE5      08095         MOVWF   POSTDEC1
0094 5000      08096         MOVF    r0x01, W
0096 6EE5      08097         MOVWF   POSTDEC1
0098 5000      08098         MOVF    r0x00, W
009A 6EE5      08099         MOVWF   POSTDEC1
009C 5000      08100         MOVF    r0x0c, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009E 6EE5      08101         MOVWF   POSTDEC1
00A0 5000      08102         MOVF    r0x0b, W
00A2 6EE5      08103         MOVWF   POSTDEC1
00A4 5000      08104         MOVF    r0x0a, W
00A6 6EE5      08105         MOVWF   POSTDEC1
00A8 EC00 F000 08106         CALL    _ip_cmp
00AC 6E00      08107         MOVWF   r0x0a
00AE 0E06      08108         MOVLW   0x06
00B0 26E1      08109         ADDWF   FSR1L, F
00B2 5000      08110         MOVF    r0x0a, W
00B4 E000      08111         BZ      _00195_DS_
               08112 ;       .line   193; MainDemo.c *pool_el = &pool[i];
00B6 0E00      08113         MOVLW   LOW(_pool)
00B8 2400      08114         ADDWF   r0x08, W
00BA 6E00      08115         MOVWF   r0x0a
00BC 0E00      08116         MOVLW   HIGH(_pool)
00BE 2000      08117         ADDWFC  r0x09, W
00C0 6E00      08118         MOVWF   r0x0b
00C2 5000      08119         MOVF    r0x0b, W
00C4 6E00      08120         MOVWF   r0x0b
00C6 5000      08121         MOVF    r0x0a, W
00C8 6E00      08122         MOVWF   r0x0a
00CA 0E80      08123         MOVLW   0x80
00CC 6E00      08124         MOVWF   r0x0c
00CE C000 FFE5 08125         MOVFF   r0x0a, POSTDEC1
00D2 C000 FFF4 08126         MOVFF   r0x0b, PRODH
00D6 C000 FFF6 08127         MOVFF   r0x0c, TBLPTRL
00DA C000 FFE9 08128         MOVFF   r0x03, FSR0L
00DE C000 FFF3 08129         MOVFF   r0x04, PRODL
00E2 5000      08130         MOVF    r0x05, W
00E4 EC00 F000 08131         CALL    __gptrput3
               08132 ;       .line   194; MainDemo.c return TRUE;    
00E8 0E01      08133         MOVLW   0x01
00EA D000      08134         BRA     _00197_DS_
00EC 08135 _00195_DS_:
               08136 ;       .line   191; MainDemo.c for(i=0; i<POOL_SIZE; i++){
00EC 0E14      08137         MOVLW   0x14
00EE 2600      08138         ADDWF   r0x08, F
00F0 B0D8      08139         BTFSC   STATUS, 0
00F2 2A00      08140         INCF    r0x09, F
00F4 2A00      08141         INCF    r0x06, F
00F6 B0D8      08142         BTFSC   STATUS, 0
00F8 2A00      08143         INCF    r0x07, F
00FA D000      08144         BRA     _00193_DS_
00FC 08145 _00196_DS_:
               08146 ;       .line   197; MainDemo.c return FALSE;
00FC 6AE8      08147         CLRF    WREG
00FE 08148 _00197_DS_:
00FE CFE4 F000 08149         MOVFF   PREINC1, r0x0c
0102 CFE4 F000 08150         MOVFF   PREINC1, r0x0b
0106 CFE4 F000 08151         MOVFF   PREINC1, r0x0a
010A CFE4 F000 08152         MOVFF   PREINC1, r0x09
010E CFE4 F000 08153         MOVFF   PREINC1, r0x08
0112 CFE4 F000 08154         MOVFF   PREINC1, r0x07
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0116 CFE4 F000 08155         MOVFF   PREINC1, r0x06
011A CFE4 F000 08156         MOVFF   PREINC1, r0x05
011E CFE4 F000 08157         MOVFF   PREINC1, r0x04
0122 CFE4 F000 08158         MOVFF   PREINC1, r0x03
0126 CFE4 F000 08159         MOVFF   PREINC1, r0x02
012A CFE4 F000 08160         MOVFF   PREINC1, r0x01
012E CFE4 F000 08161         MOVFF   PREINC1, r0x00
0132 CFE4 FFD9 08162         MOVFF   PREINC1, FSR2L
0136 0012      08163         RETURN  
               08164 
               08165 ; ; Starting pCode block
               08166 S_MainDemo__remove_from_pool    code
0000 08167 _remove_from_pool:
               08168 ;       .line   181; MainDemo.c BOOL remove_from_pool(IP_ADDR *ip){
0000 CFD9 FFE5 08169         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 08170         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 08171         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 08172         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 08173         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 08174         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 08175         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 08176         MOVFF   r0x05, POSTDEC1
0020 0E02      08177         MOVLW   0x02
0022 CFDB F000 08178         MOVFF   PLUSW2, r0x00
0026 0E03      08179         MOVLW   0x03
0028 CFDB F000 08180         MOVFF   PLUSW2, r0x01
002C 0E04      08181         MOVLW   0x04
002E CFDB F000 08182         MOVFF   PLUSW2, r0x02
               08183 ;       .line   184; MainDemo.c found = get_pool_el_ip(ip, &pool_el);
0032 0E00      08184         MOVLW   HIGH(_remove_from_pool_pool_el_1_1)
0034 6E00      08185         MOVWF   r0x04
0036 0E00      08186         MOVLW   LOW(_remove_from_pool_pool_el_1_1)
0038 6E00      08187         MOVWF   r0x03
003A 0E80      08188         MOVLW   0x80
003C 6E00      08189         MOVWF   r0x05
003E 5000      08190         MOVF    r0x05, W
0040 6EE5      08191         MOVWF   POSTDEC1
0042 5000      08192         MOVF    r0x04, W
0044 6EE5      08193         MOVWF   POSTDEC1
0046 5000      08194         MOVF    r0x03, W
0048 6EE5      08195         MOVWF   POSTDEC1
004A 5000      08196         MOVF    r0x02, W
004C 6EE5      08197         MOVWF   POSTDEC1
004E 5000      08198         MOVF    r0x01, W
0050 6EE5      08199         MOVWF   POSTDEC1
0052 5000      08200         MOVF    r0x00, W
0054 6EE5      08201         MOVWF   POSTDEC1
0056 EC00 F000 08202         CALL    _get_pool_el_ip
005A 6E00      08203         MOVWF   r0x00
005C 0E06      08204         MOVLW   0x06
005E 26E1      08205         ADDWF   FSR1L, F
0060 0000      08206         BANKSEL (_remove_from_pool_pool_el_1_1 + 2)
               08207 ;       .line   185; MainDemo.c init_pool_el(pool_el);
0062 5100      08208         MOVF    (_remove_from_pool_pool_el_1_1 + 2), W, B
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0064 6EE5      08209         MOVWF   POSTDEC1
0066 0000      08210         BANKSEL (_remove_from_pool_pool_el_1_1 + 1)
0068 5100      08211         MOVF    (_remove_from_pool_pool_el_1_1 + 1), W, B
006A 6EE5      08212         MOVWF   POSTDEC1
006C 0000      08213         BANKSEL _remove_from_pool_pool_el_1_1
006E 5100      08214         MOVF    _remove_from_pool_pool_el_1_1, W, B
0070 6EE5      08215         MOVWF   POSTDEC1
0072 EC00 F000 08216         CALL    _init_pool_el
0076 0E03      08217         MOVLW   0x03
0078 26E1      08218         ADDWF   FSR1L, F
               08219 ;       .line   186; MainDemo.c return found;
007A 5000      08220         MOVF    r0x00, W
007C CFE4 F000 08221         MOVFF   PREINC1, r0x05
0080 CFE4 F000 08222         MOVFF   PREINC1, r0x04
0084 CFE4 F000 08223         MOVFF   PREINC1, r0x03
0088 CFE4 F000 08224         MOVFF   PREINC1, r0x02
008C CFE4 F000 08225         MOVFF   PREINC1, r0x01
0090 CFE4 F000 08226         MOVFF   PREINC1, r0x00
0094 CFE4 FFD9 08227         MOVFF   PREINC1, FSR2L
0098 0012      08228         RETURN  
               08229 
               08230 ; ; Starting pCode block
               08231 S_MainDemo__add_to_pool code
0000 08232 _add_to_pool:
               08233 ;       .line   165; MainDemo.c BOOL add_to_pool(IP_ADDR *ip, MAC_ADDR *mac, DWORD server_deadline, unsigned int miss_counter){
0000 CFD9 FFE5 08234         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 08235         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 08236         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 08237         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 08238         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 08239         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 08240         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 08241         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 08242         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 08243         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 08244         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 08245         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 08246         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 08247         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 08248         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 08249         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 08250         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 08251         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 08252         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 08253         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 08254         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 08255         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 08256         MOVFF   r0x14, POSTDEC1
005C 0E02      08257         MOVLW   0x02
005E CFDB F000 08258         MOVFF   PLUSW2, r0x00
0062 0E03      08259         MOVLW   0x03
0064 CFDB F000 08260         MOVFF   PLUSW2, r0x01
0068 0E04      08261         MOVLW   0x04
006A CFDB F000 08262         MOVFF   PLUSW2, r0x02
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006E 0E05      08263         MOVLW   0x05
0070 CFDB F000 08264         MOVFF   PLUSW2, r0x03
0074 0E06      08265         MOVLW   0x06
0076 CFDB F000 08266         MOVFF   PLUSW2, r0x04
007A 0E07      08267         MOVLW   0x07
007C CFDB F000 08268         MOVFF   PLUSW2, r0x05
0080 0E08      08269         MOVLW   0x08
0082 CFDB F000 08270         MOVFF   PLUSW2, r0x06
0086 0E09      08271         MOVLW   0x09
0088 CFDB F000 08272         MOVFF   PLUSW2, r0x07
008C 0E0A      08273         MOVLW   0x0a
008E CFDB F000 08274         MOVFF   PLUSW2, r0x08
0092 0E0B      08275         MOVLW   0x0b
0094 CFDB F000 08276         MOVFF   PLUSW2, r0x09
0098 0E0C      08277         MOVLW   0x0c
009A CFDB F000 08278         MOVFF   PLUSW2, r0x0a
009E 0E0D      08279         MOVLW   0x0d
00A0 CFDB F000 08280         MOVFF   PLUSW2, r0x0b
               08281 ;       .line   167; MainDemo.c BOOL added = FALSE;
00A4 6A00      08282         CLRF    r0x0c
               08283 ;       .line   168; MainDemo.c for(i=0; i<POOL_SIZE && !added; i++){
00A6 6A00      08284         CLRF    r0x0d
00A8 6A00      08285         CLRF    r0x0e
00AA 6A00      08286         CLRF    r0x0f
00AC 6A00      08287         CLRF    r0x10
00AE 08288 _00170_DS_:
00AE 5000      08289         MOVF    r0x0e, W
00B0 0F80      08290         ADDLW   0x80
00B2 0F80      08291         ADDLW   0x80
00B4 E100      08292         BNZ     _00181_DS_
00B6 0E0A      08293         MOVLW   0x0a
00B8 5C00      08294         SUBWF   r0x0d, W
00BA 08295 _00181_DS_:
00BA B0D8      08296         BTFSC   STATUS, 0
00BC D000      08297         BRA     _00173_DS_
00BE 5000      08298         MOVF    r0x0c, W
00C0 A4D8      08299         BTFSS   STATUS, 2
00C2 D000      08300         BRA     _00173_DS_
               08301 ;       .line   169; MainDemo.c if(is_free(&pool[i])){
00C4 0E00      08302         MOVLW   LOW(_pool)
00C6 2400      08303         ADDWF   r0x0f, W
00C8 6E00      08304         MOVWF   r0x11
00CA 0E00      08305         MOVLW   HIGH(_pool)
00CC 2000      08306         ADDWFC  r0x10, W
00CE 6E00      08307         MOVWF   r0x12
00D0 5000      08308         MOVF    r0x12, W
00D2 6E00      08309         MOVWF   r0x12
00D4 5000      08310         MOVF    r0x11, W
00D6 6E00      08311         MOVWF   r0x11
00D8 0E80      08312         MOVLW   0x80
00DA 6E00      08313         MOVWF   r0x13
00DC 5000      08314         MOVF    r0x13, W
00DE 6EE5      08315         MOVWF   POSTDEC1
00E0 5000      08316         MOVF    r0x12, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E2 6EE5      08317         MOVWF   POSTDEC1
00E4 5000      08318         MOVF    r0x11, W
00E6 6EE5      08319         MOVWF   POSTDEC1
00E8 EC00 F000 08320         CALL    _is_free
00EC 6E00      08321         MOVWF   r0x11
00EE 0E03      08322         MOVLW   0x03
00F0 26E1      08323         ADDWF   FSR1L, F
00F2 5000      08324         MOVF    r0x11, W
00F4 B4D8      08325         BTFSC   STATUS, 2
00F6 D000      08326         BRA     _00172_DS_
               08327 ;       .line   170; MainDemo.c memcpy(pool[i].ip.v, ip->v, sizeof(IP_ADDR));
00F8 0E00      08328         MOVLW   LOW(_pool)
00FA 2400      08329         ADDWF   r0x0f, W
00FC 6E00      08330         MOVWF   r0x11
00FE 0E00      08331         MOVLW   HIGH(_pool)
0100 2000      08332         ADDWFC  r0x10, W
0102 6E00      08333         MOVWF   r0x12
0104 5000      08334         MOVF    r0x12, W
0106 6E00      08335         MOVWF   r0x12
0108 5000      08336         MOVF    r0x11, W
010A 6E00      08337         MOVWF   r0x11
010C 0E80      08338         MOVLW   0x80
010E 6E00      08339         MOVWF   r0x13
0110 0E00      08340         MOVLW   0x00
0112 6EE5      08341         MOVWF   POSTDEC1
0114 0E04      08342         MOVLW   0x04
0116 6EE5      08343         MOVWF   POSTDEC1
0118 5000      08344         MOVF    r0x02, W
011A 6EE5      08345         MOVWF   POSTDEC1
011C 5000      08346         MOVF    r0x01, W
011E 6EE5      08347         MOVWF   POSTDEC1
0120 5000      08348         MOVF    r0x00, W
0122 6EE5      08349         MOVWF   POSTDEC1
0124 5000      08350         MOVF    r0x13, W
0126 6EE5      08351         MOVWF   POSTDEC1
0128 5000      08352         MOVF    r0x12, W
012A 6EE5      08353         MOVWF   POSTDEC1
012C 5000      08354         MOVF    r0x11, W
012E 6EE5      08355         MOVWF   POSTDEC1
0130 EC00 F000 08356         CALL    _memcpy
0134 0E08      08357         MOVLW   0x08
0136 26E1      08358         ADDWF   FSR1L, F
               08359 ;       .line   171; MainDemo.c memcpy(pool[i].mac.v, mac->v, sizeof(MAC_ADDR));
0138 0E00      08360         MOVLW   LOW(_pool)
013A 2400      08361         ADDWF   r0x0f, W
013C 6E00      08362         MOVWF   r0x11
013E 0E00      08363         MOVLW   HIGH(_pool)
0140 2000      08364         ADDWFC  r0x10, W
0142 6E00      08365         MOVWF   r0x12
0144 0E04      08366         MOVLW   0x04
0146 2600      08367         ADDWF   r0x11, F
0148 B0D8      08368         BTFSC   STATUS, 0
014A 2A00      08369         INCF    r0x12, F
014C 5000      08370         MOVF    r0x12, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
014E 6E00      08371         MOVWF   r0x12
0150 5000      08372         MOVF    r0x11, W
0152 6E00      08373         MOVWF   r0x11
0154 0E80      08374         MOVLW   0x80
0156 6E00      08375         MOVWF   r0x13
0158 0E00      08376         MOVLW   0x00
015A 6EE5      08377         MOVWF   POSTDEC1
015C 0E06      08378         MOVLW   0x06
015E 6EE5      08379         MOVWF   POSTDEC1
0160 5000      08380         MOVF    r0x05, W
0162 6EE5      08381         MOVWF   POSTDEC1
0164 5000      08382         MOVF    r0x04, W
0166 6EE5      08383         MOVWF   POSTDEC1
0168 5000      08384         MOVF    r0x03, W
016A 6EE5      08385         MOVWF   POSTDEC1
016C 5000      08386         MOVF    r0x13, W
016E 6EE5      08387         MOVWF   POSTDEC1
0170 5000      08388         MOVF    r0x12, W
0172 6EE5      08389         MOVWF   POSTDEC1
0174 5000      08390         MOVF    r0x11, W
0176 6EE5      08391         MOVWF   POSTDEC1
0178 EC00 F000 08392         CALL    _memcpy
017C 0E08      08393         MOVLW   0x08
017E 26E1      08394         ADDWF   FSR1L, F
               08395 ;       .line   172; MainDemo.c pool[i].client_deadline = RELAY_LEASE_TIME;
0180 0E00      08396         MOVLW   LOW(_pool)
0182 2400      08397         ADDWF   r0x0f, W
0184 6E00      08398         MOVWF   r0x11
0186 0E00      08399         MOVLW   HIGH(_pool)
0188 2000      08400         ADDWFC  r0x10, W
018A 6E00      08401         MOVWF   r0x12
018C 5000      08402         MOVF    r0x11, W
018E 0F0A      08403         ADDLW   0x0a
0190 6E00      08404         MOVWF   r0x13
0192 0E00      08405         MOVLW   0x00
0194 2000      08406         ADDWFC  r0x12, W
0196 6E00      08407         MOVWF   r0x14
0198 C000 FFE9 08408         MOVFF   r0x13, FSR0L
019C C000 FFEA 08409         MOVFF   r0x14, FSR0H
01A0 0E2C      08410         MOVLW   0x2c
01A2 6EEE      08411         MOVWF   POSTINC0
01A4 0E01      08412         MOVLW   0x01
01A6 6EEE      08413         MOVWF   POSTINC0
01A8 0E00      08414         MOVLW   0x00
01AA 6EEE      08415         MOVWF   POSTINC0
01AC 0E00      08416         MOVLW   0x00
01AE 6EEF      08417         MOVWF   INDF0
               08418 ;       .line   173; MainDemo.c pool[i].server_deadline = server_deadline;
01B0 5000      08419         MOVF    r0x11, W
01B2 0F0E      08420         ADDLW   0x0e
01B4 6E00      08421         MOVWF   r0x13
01B6 0E00      08422         MOVLW   0x00
01B8 2000      08423         ADDWFC  r0x12, W
01BA 6E00      08424         MOVWF   r0x14
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01BC C000 FFE9 08425         MOVFF   r0x13, FSR0L
01C0 C000 FFEA 08426         MOVFF   r0x14, FSR0H
01C4 C000 FFEE 08427         MOVFF   r0x06, POSTINC0
01C8 C000 FFEE 08428         MOVFF   r0x07, POSTINC0
01CC C000 FFEE 08429         MOVFF   r0x08, POSTINC0
01D0 C000 FFEF 08430         MOVFF   r0x09, INDF0
               08431 ;       .line   174; MainDemo.c pool[i].miss_counter = miss_counter;
01D4 0E12      08432         MOVLW   0x12
01D6 2600      08433         ADDWF   r0x11, F
01D8 B0D8      08434         BTFSC   STATUS, 0
01DA 2A00      08435         INCF    r0x12, F
01DC C000 FFE9 08436         MOVFF   r0x11, FSR0L
01E0 C000 FFEA 08437         MOVFF   r0x12, FSR0H
01E4 C000 FFEE 08438         MOVFF   r0x0a, POSTINC0
01E8 C000 FFEF 08439         MOVFF   r0x0b, INDF0
               08440 ;       .line   175; MainDemo.c added = TRUE;
01EC 0E01      08441         MOVLW   0x01
01EE 6E00      08442         MOVWF   r0x0c
01F0 08443 _00172_DS_:
               08444 ;       .line   168; MainDemo.c for(i=0; i<POOL_SIZE && !added; i++){
01F0 0E14      08445         MOVLW   0x14
01F2 2600      08446         ADDWF   r0x0f, F
01F4 B0D8      08447         BTFSC   STATUS, 0
01F6 2A00      08448         INCF    r0x10, F
01F8 2A00      08449         INCF    r0x0d, F
01FA B0D8      08450         BTFSC   STATUS, 0
01FC 2A00      08451         INCF    r0x0e, F
01FE D000      08452         BRA     _00170_DS_
0200 08453 _00173_DS_:
               08454 ;       .line   178; MainDemo.c return added;
0200 5000      08455         MOVF    r0x0c, W
0202 CFE4 F000 08456         MOVFF   PREINC1, r0x14
0206 CFE4 F000 08457         MOVFF   PREINC1, r0x13
020A CFE4 F000 08458         MOVFF   PREINC1, r0x12
020E CFE4 F000 08459         MOVFF   PREINC1, r0x11
0212 CFE4 F000 08460         MOVFF   PREINC1, r0x10
0216 CFE4 F000 08461         MOVFF   PREINC1, r0x0f
021A CFE4 F000 08462         MOVFF   PREINC1, r0x0e
021E CFE4 F000 08463         MOVFF   PREINC1, r0x0d
0222 CFE4 F000 08464         MOVFF   PREINC1, r0x0c
0226 CFE4 F000 08465         MOVFF   PREINC1, r0x0b
022A CFE4 F000 08466         MOVFF   PREINC1, r0x0a
022E CFE4 F000 08467         MOVFF   PREINC1, r0x09
0232 CFE4 F000 08468         MOVFF   PREINC1, r0x08
0236 CFE4 F000 08469         MOVFF   PREINC1, r0x07
023A CFE4 F000 08470         MOVFF   PREINC1, r0x06
023E CFE4 F000 08471         MOVFF   PREINC1, r0x05
0242 CFE4 F000 08472         MOVFF   PREINC1, r0x04
0246 CFE4 F000 08473         MOVFF   PREINC1, r0x03
024A CFE4 F000 08474         MOVFF   PREINC1, r0x02
024E CFE4 F000 08475         MOVFF   PREINC1, r0x01
0252 CFE4 F000 08476         MOVFF   PREINC1, r0x00
0256 CFE4 FFD9 08477         MOVFF   PREINC1, FSR2L
025A 0012      08478         RETURN  
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               08479 
               08480 ; ; Starting pCode block
               08481 S_MainDemo__is_free     code
0000 08482 _is_free:
               08483 ;       .line   155; MainDemo.c BOOL is_free(POOL_ELEMENT *el){
0000 CFD9 FFE5 08484         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 08485         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 08486         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 08487         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 08488         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 08489         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 08490         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 08491         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 08492         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 08493         MOVFF   r0x07, POSTDEC1
0028 0E02      08494         MOVLW   0x02
002A CFDB F000 08495         MOVFF   PLUSW2, r0x00
002E 0E03      08496         MOVLW   0x03
0030 CFDB F000 08497         MOVFF   PLUSW2, r0x01
0034 0E04      08498         MOVLW   0x04
0036 CFDB F000 08499         MOVFF   PLUSW2, r0x02
               08500 ;       .line   157; MainDemo.c for(i=0; i<6; i++){
003A 0E04      08501         MOVLW   0x04
003C 2600      08502         ADDWF   r0x00, F
003E 0E00      08503         MOVLW   0x00
0040 2200      08504         ADDWFC  r0x01, F
0042 0E00      08505         MOVLW   0x00
0044 2200      08506         ADDWFC  r0x02, F
0046 6A00      08507         CLRF    r0x03
0048 6A00      08508         CLRF    r0x04
004A 08509 _00153_DS_:
004A 5000      08510         MOVF    r0x04, W
004C 0F80      08511         ADDLW   0x80
004E 0F80      08512         ADDLW   0x80
0050 E100      08513         BNZ     _00162_DS_
0052 0E06      08514         MOVLW   0x06
0054 5C00      08515         SUBWF   r0x03, W
0056 08516 _00162_DS_:
0056 E200      08517         BC      _00156_DS_
               08518 ;       .line   158; MainDemo.c if(el->mac.v[i] != 0){
0058 5000      08519         MOVF    r0x03, W
005A 2400      08520         ADDWF   r0x00, W
005C 6E00      08521         MOVWF   r0x05
005E 5000      08522         MOVF    r0x04, W
0060 2000      08523         ADDWFC  r0x01, W
0062 6E00      08524         MOVWF   r0x06
0064 6AE8      08525         CLRF    WREG
0066 BE00      08526         BTFSC   r0x04, 7
0068 68E8      08527         SETF    WREG
006A 2000      08528         ADDWFC  r0x02, W
006C 6E00      08529         MOVWF   r0x07
006E C000 FFE9 08530         MOVFF   r0x05, FSR0L
0072 C000 FFF3 08531         MOVFF   r0x06, PRODL
0076 5000      08532         MOVF    r0x07, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0078 EC00 F000 08533         CALL    __gptrget1
007C 6E00      08534         MOVWF   r0x05
007E 5000      08535         MOVF    r0x05, W
0080 E000      08536         BZ      _00155_DS_
               08537 ;       .line   159; MainDemo.c return FALSE;
0082 6AE8      08538         CLRF    WREG
0084 D000      08539         BRA     _00157_DS_
0086 08540 _00155_DS_:
               08541 ;       .line   157; MainDemo.c for(i=0; i<6; i++){
0086 2A00      08542         INCF    r0x03, F
0088 B0D8      08543         BTFSC   STATUS, 0
008A 2A00      08544         INCF    r0x04, F
008C D000      08545         BRA     _00153_DS_
008E 08546 _00156_DS_:
               08547 ;       .line   162; MainDemo.c return TRUE;
008E 0E01      08548         MOVLW   0x01
0090 08549 _00157_DS_:
0090 CFE4 F000 08550         MOVFF   PREINC1, r0x07
0094 CFE4 F000 08551         MOVFF   PREINC1, r0x06
0098 CFE4 F000 08552         MOVFF   PREINC1, r0x05
009C CFE4 F000 08553         MOVFF   PREINC1, r0x04
00A0 CFE4 F000 08554         MOVFF   PREINC1, r0x03
00A4 CFE4 F000 08555         MOVFF   PREINC1, r0x02
00A8 CFE4 F000 08556         MOVFF   PREINC1, r0x01
00AC CFE4 F000 08557         MOVFF   PREINC1, r0x00
00B0 CFE4 FFD9 08558         MOVFF   PREINC1, FSR2L
00B4 0012      08559         RETURN  
               08560 
               08561 ; ; Starting pCode block
               08562 S_MainDemo__init_pool   code
0000 08563 _init_pool:
               08564 ;       .line   148; MainDemo.c void init_pool(){
0000 CFD9 FFE5 08565         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 08566         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 08567         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 08568         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 08569         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 08570         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 08571         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 08572         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 08573         MOVFF   r0x06, POSTDEC1
               08574 ;       .line   150; MainDemo.c for(i=0; i<POOL_SIZE; i++){
0024 6A00      08575         CLRF    r0x00
0026 6A00      08576         CLRF    r0x01
0028 6A00      08577         CLRF    r0x02
002A 6A00      08578         CLRF    r0x03
002C 08579 _00137_DS_:
002C 5000      08580         MOVF    r0x01, W
002E 0F80      08581         ADDLW   0x80
0030 0F80      08582         ADDLW   0x80
0032 E100      08583         BNZ     _00146_DS_
0034 0E0A      08584         MOVLW   0x0a
0036 5C00      08585         SUBWF   r0x00, W
0038 08586 _00146_DS_:
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 E200      08587         BC      _00141_DS_
               08588 ;       .line   151; MainDemo.c init_pool_el(&pool[i]);
003A 0E00      08589         MOVLW   LOW(_pool)
003C 2400      08590         ADDWF   r0x02, W
003E 6E00      08591         MOVWF   r0x04
0040 0E00      08592         MOVLW   HIGH(_pool)
0042 2000      08593         ADDWFC  r0x03, W
0044 6E00      08594         MOVWF   r0x05
0046 5000      08595         MOVF    r0x05, W
0048 6E00      08596         MOVWF   r0x05
004A 5000      08597         MOVF    r0x04, W
004C 6E00      08598         MOVWF   r0x04
004E 0E80      08599         MOVLW   0x80
0050 6E00      08600         MOVWF   r0x06
0052 5000      08601         MOVF    r0x06, W
0054 6EE5      08602         MOVWF   POSTDEC1
0056 5000      08603         MOVF    r0x05, W
0058 6EE5      08604         MOVWF   POSTDEC1
005A 5000      08605         MOVF    r0x04, W
005C 6EE5      08606         MOVWF   POSTDEC1
005E EC00 F000 08607         CALL    _init_pool_el
0062 0E03      08608         MOVLW   0x03
0064 26E1      08609         ADDWF   FSR1L, F
               08610 ;       .line   150; MainDemo.c for(i=0; i<POOL_SIZE; i++){
0066 0E14      08611         MOVLW   0x14
0068 2600      08612         ADDWF   r0x02, F
006A B0D8      08613         BTFSC   STATUS, 0
006C 2A00      08614         INCF    r0x03, F
006E 2A00      08615         INCF    r0x00, F
0070 B0D8      08616         BTFSC   STATUS, 0
0072 2A00      08617         INCF    r0x01, F
0074 D000      08618         BRA     _00137_DS_
0076 08619 _00141_DS_:
0076 CFE4 F000 08620         MOVFF   PREINC1, r0x06
007A CFE4 F000 08621         MOVFF   PREINC1, r0x05
007E CFE4 F000 08622         MOVFF   PREINC1, r0x04
0082 CFE4 F000 08623         MOVFF   PREINC1, r0x03
0086 CFE4 F000 08624         MOVFF   PREINC1, r0x02
008A CFE4 F000 08625         MOVFF   PREINC1, r0x01
008E CFE4 F000 08626         MOVFF   PREINC1, r0x00
0092 CFE4 FFD9 08627         MOVFF   PREINC1, FSR2L
0096 0012      08628         RETURN  
               08629 
               08630 ; ; Starting pCode block
               08631 S_MainDemo__init_pool_el        code
0000 08632 _init_pool_el:
               08633 ;       .line   135; MainDemo.c void init_pool_el(POOL_ELEMENT *pe){
0000 CFD9 FFE5 08634         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 08635         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 08636         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 08637         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 08638         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 08639         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 08640         MOVFF   r0x04, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001C C000 FFE5 08641         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 08642         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 08643         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 08644         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 08645         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 08646         MOVFF   r0x0a, POSTDEC1
0034 0E02      08647         MOVLW   0x02
0036 CFDB F000 08648         MOVFF   PLUSW2, r0x00
003A 0E03      08649         MOVLW   0x03
003C CFDB F000 08650         MOVFF   PLUSW2, r0x01
0040 0E04      08651         MOVLW   0x04
0042 CFDB F000 08652         MOVFF   PLUSW2, r0x02
               08653 ;       .line   137; MainDemo.c for(j=0; j<4; j++){
0046 6A00      08654         CLRF    r0x03
0048 6A00      08655         CLRF    r0x04
004A 08656 _00115_DS_:
004A 5000      08657         MOVF    r0x04, W
004C 0F80      08658         ADDLW   0x80
004E 0F80      08659         ADDLW   0x80
0050 E100      08660         BNZ     _00131_DS_
0052 0E04      08661         MOVLW   0x04
0054 5C00      08662         SUBWF   r0x03, W
0056 08663 _00131_DS_:
0056 E200      08664         BC      _00118_DS_
               08665 ;       .line   138; MainDemo.c pe->ip.v[j] = 0;
0058 5000      08666         MOVF    r0x03, W
005A 2400      08667         ADDWF   r0x00, W
005C 6E00      08668         MOVWF   r0x05
005E 5000      08669         MOVF    r0x04, W
0060 2000      08670         ADDWFC  r0x01, W
0062 6E00      08671         MOVWF   r0x06
0064 6AE8      08672         CLRF    WREG
0066 BE00      08673         BTFSC   r0x04, 7
0068 68E8      08674         SETF    WREG
006A 2000      08675         ADDWFC  r0x02, W
006C 6E00      08676         MOVWF   r0x07
006E 0E00      08677         MOVLW   0x00
0070 6EE5      08678         MOVWF   POSTDEC1
0072 C000 FFE9 08679         MOVFF   r0x05, FSR0L
0076 C000 FFF3 08680         MOVFF   r0x06, PRODL
007A 5000      08681         MOVF    r0x07, W
007C EC00 F000 08682         CALL    __gptrput1
               08683 ;       .line   137; MainDemo.c for(j=0; j<4; j++){
0080 2A00      08684         INCF    r0x03, F
0082 B0D8      08685         BTFSC   STATUS, 0
0084 2A00      08686         INCF    r0x04, F
0086 D000      08687         BRA     _00115_DS_
0088 08688 _00118_DS_:
               08689 ;       .line   140; MainDemo.c for(j=0; j<6; j++){
0088 5000      08690         MOVF    r0x00, W
008A 0F04      08691         ADDLW   0x04
008C 6E00      08692         MOVWF   r0x03
008E 0E00      08693         MOVLW   0x00
0090 2000      08694         ADDWFC  r0x01, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0092 6E00      08695         MOVWF   r0x04
0094 0E00      08696         MOVLW   0x00
0096 2000      08697         ADDWFC  r0x02, W
0098 6E00      08698         MOVWF   r0x05
009A 6A00      08699         CLRF    r0x06
009C 6A00      08700         CLRF    r0x07
009E 08701 _00119_DS_:
009E 5000      08702         MOVF    r0x07, W
00A0 0F80      08703         ADDLW   0x80
00A2 0F80      08704         ADDLW   0x80
00A4 E100      08705         BNZ     _00132_DS_
00A6 0E06      08706         MOVLW   0x06
00A8 5C00      08707         SUBWF   r0x06, W
00AA 08708 _00132_DS_:
00AA E200      08709         BC      _00122_DS_
               08710 ;       .line   141; MainDemo.c pe->mac.v[j] = 0;
00AC 5000      08711         MOVF    r0x06, W
00AE 2400      08712         ADDWF   r0x03, W
00B0 6E00      08713         MOVWF   r0x08
00B2 5000      08714         MOVF    r0x07, W
00B4 2000      08715         ADDWFC  r0x04, W
00B6 6E00      08716         MOVWF   r0x09
00B8 6AE8      08717         CLRF    WREG
00BA BE00      08718         BTFSC   r0x07, 7
00BC 68E8      08719         SETF    WREG
00BE 2000      08720         ADDWFC  r0x05, W
00C0 6E00      08721         MOVWF   r0x0a
00C2 0E00      08722         MOVLW   0x00
00C4 6EE5      08723         MOVWF   POSTDEC1
00C6 C000 FFE9 08724         MOVFF   r0x08, FSR0L
00CA C000 FFF3 08725         MOVFF   r0x09, PRODL
00CE 5000      08726         MOVF    r0x0a, W
00D0 EC00 F000 08727         CALL    __gptrput1
               08728 ;       .line   140; MainDemo.c for(j=0; j<6; j++){
00D4 2A00      08729         INCF    r0x06, F
00D6 B0D8      08730         BTFSC   STATUS, 0
00D8 2A00      08731         INCF    r0x07, F
00DA D000      08732         BRA     _00119_DS_
00DC 08733 _00122_DS_:
               08734 ;       .line   143; MainDemo.c pe->client_deadline = 0;
00DC 5000      08735         MOVF    r0x00, W
00DE 0F0A      08736         ADDLW   0x0a
00E0 6E00      08737         MOVWF   r0x03
00E2 0E00      08738         MOVLW   0x00
00E4 2000      08739         ADDWFC  r0x01, W
00E6 6E00      08740         MOVWF   r0x04
00E8 0E00      08741         MOVLW   0x00
00EA 2000      08742         ADDWFC  r0x02, W
00EC 6E00      08743         MOVWF   r0x05
00EE 0E00      08744         MOVLW   0x00
00F0 6EE5      08745         MOVWF   POSTDEC1
00F2 0E00      08746         MOVLW   0x00
00F4 6EF4      08747         MOVWF   PRODH
00F6 0E00      08748         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00F8 6EF6      08749         MOVWF   TBLPTRL
00FA 0E00      08750         MOVLW   0x00
00FC 6EF7      08751         MOVWF   TBLPTRH
00FE C000 FFE9 08752         MOVFF   r0x03, FSR0L
0102 C000 FFF3 08753         MOVFF   r0x04, PRODL
0106 5000      08754         MOVF    r0x05, W
0108 EC00 F000 08755         CALL    __gptrput4
               08756 ;       .line   144; MainDemo.c pe->server_deadline = 0;
010C 5000      08757         MOVF    r0x00, W
010E 0F0E      08758         ADDLW   0x0e
0110 6E00      08759         MOVWF   r0x03
0112 0E00      08760         MOVLW   0x00
0114 2000      08761         ADDWFC  r0x01, W
0116 6E00      08762         MOVWF   r0x04
0118 0E00      08763         MOVLW   0x00
011A 2000      08764         ADDWFC  r0x02, W
011C 6E00      08765         MOVWF   r0x05
011E 0E00      08766         MOVLW   0x00
0120 6EE5      08767         MOVWF   POSTDEC1
0122 0E00      08768         MOVLW   0x00
0124 6EF4      08769         MOVWF   PRODH
0126 0E00      08770         MOVLW   0x00
0128 6EF6      08771         MOVWF   TBLPTRL
012A 0E00      08772         MOVLW   0x00
012C 6EF7      08773         MOVWF   TBLPTRH
012E C000 FFE9 08774         MOVFF   r0x03, FSR0L
0132 C000 FFF3 08775         MOVFF   r0x04, PRODL
0136 5000      08776         MOVF    r0x05, W
0138 EC00 F000 08777         CALL    __gptrput4
               08778 ;       .line   145; MainDemo.c pe->miss_counter = 0;
013C 0E12      08779         MOVLW   0x12
013E 2600      08780         ADDWF   r0x00, F
0140 0E00      08781         MOVLW   0x00
0142 2200      08782         ADDWFC  r0x01, F
0144 0E00      08783         MOVLW   0x00
0146 2200      08784         ADDWFC  r0x02, F
0148 0E00      08785         MOVLW   0x00
014A 6EE5      08786         MOVWF   POSTDEC1
014C 0E00      08787         MOVLW   0x00
014E 6EF4      08788         MOVWF   PRODH
0150 C000 FFE9 08789         MOVFF   r0x00, FSR0L
0154 C000 FFF3 08790         MOVFF   r0x01, PRODL
0158 5000      08791         MOVF    r0x02, W
015A EC00 F000 08792         CALL    __gptrput2
015E CFE4 F000 08793         MOVFF   PREINC1, r0x0a
0162 CFE4 F000 08794         MOVFF   PREINC1, r0x09
0166 CFE4 F000 08795         MOVFF   PREINC1, r0x08
016A CFE4 F000 08796         MOVFF   PREINC1, r0x07
016E CFE4 F000 08797         MOVFF   PREINC1, r0x06
0172 CFE4 F000 08798         MOVFF   PREINC1, r0x05
0176 CFE4 F000 08799         MOVFF   PREINC1, r0x04
017A CFE4 F000 08800         MOVFF   PREINC1, r0x03
017E CFE4 F000 08801         MOVFF   PREINC1, r0x02
0182 CFE4 F000 08802         MOVFF   PREINC1, r0x01
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0186 CFE4 F000 08803         MOVFF   PREINC1, r0x00
018A CFE4 FFD9 08804         MOVFF   PREINC1, FSR2L
018E 0012      08805         RETURN  
               08806 
               08807 ; ; Starting pCode block
               08808 S_MainDemo__HighISR     code
0000 08809 _HighISR:
               08810 ;       .line   93; MainDemo.c  void HighISR(void) __interrupt(1) //ML for sdcc        
0000 CFE8 FFE5 08811         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 08812         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 08813         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 08814         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 08815         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 08816         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 08817         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 08818         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 08819         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 08820         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 08821         MOVFF   FSR1L, FSR2L
               08822 ;       .line   100; MainDemo.c }
002C CFE4 FFD9 08823         MOVFF   PREINC1, FSR2L
0030 CFE4 FFFB 08824         MOVFF   PREINC1, PCLATU
0034 CFE4 FFFA 08825         MOVFF   PREINC1, PCLATH
0038 CFE4 FFEA 08826         MOVFF   PREINC1, FSR0H
003C CFE4 FFE9 08827         MOVFF   PREINC1, FSR0L
0040 CFE4 FFF4 08828         MOVFF   PREINC1, PRODH
0044 CFE4 FFF3 08829         MOVFF   PREINC1, PRODL
0048 CFE4 FFE0 08830         MOVFF   PREINC1, BSR
004C CFE4 FFD8 08831         MOVFF   PREINC1, STATUS
0050 CFE4 FFE8 08832         MOVFF   PREINC1, WREG
0054 0010      08833         RETFIE  
               08834 
               08835 ; ; Starting pCode block
               08836 S_MainDemo__LowISR      code
0000 08837 _LowISR:
               08838 ;       .line   74; MainDemo.c  void LowISR(void) __interrupt (2) //ML for sdcc
0000 CFE8 FFE5 08839         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 08840         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 08841         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 08842         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 08843         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 08844         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 08845         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 08846         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 08847         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 08848         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 08849         MOVFF   FSR1L, FSR2L
               08850 ;       .line   80; MainDemo.c  TickUpdate();
002C EC00 F000 08851         CALL    _TickUpdate
0030 CFE4 FFD9 08852         MOVFF   PREINC1, FSR2L
0034 CFE4 FFFB 08853         MOVFF   PREINC1, PCLATU
0038 CFE4 FFFA 08854         MOVFF   PREINC1, PCLATH
003C CFE4 FFEA 08855         MOVFF   PREINC1, FSR0H
0040 CFE4 FFE9 08856         MOVFF   PREINC1, FSR0L
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0044 CFE4 FFF4 08857         MOVFF   PREINC1, PRODH
0048 CFE4 FFF3 08858         MOVFF   PREINC1, PRODL
004C CFE4 FFE0 08859         MOVFF   PREINC1, BSR
0050 CFE4 FFD8 08860         MOVFF   PREINC1, STATUS
0054 CFE4 FFE8 08861         MOVFF   PREINC1, WREG
0058 0010      08862         RETFIE  
               08863 
               08864 ; ; Starting pCode block
005A 08865 __str_0:
005A 6E69 6176 08866         DB      0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 0x6f, 0x63, 0x6b
     696C 2064 
     6F73 6B63 
0066 7465 0000 08867         DB      0x65, 0x74, 0x00
               08868 ; ; Starting pCode block
006A 08869 __str_1:
006A 4844 5043 08870         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x00
     4F20 4646 
     5245 0000 
               08871 ; ; Starting pCode block
0076 08872 __str_2:
0076 4844 5043 08873         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x41, 0x43, 0x4b, 0x00
     4120 4B43 
     0000      
               08874 ; ; Starting pCode block
0080 08875 __str_3:
0080 4944 4353 08876         DB      0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x45, 0x44, 0x20, 0x68, 0x61
     5241 4544 
     2044 6168 
008C 646E 656C 08877         DB      0x6e, 0x64, 0x6c, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x00
     7320 7265 
     6576 0072 
               08878 ; ; Starting pCode block
0098 08879 __str_4:
0098 4844 5043 08880         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45
     4420 5349 
     4F43 4556 
00A4 5952 0000 08881         DB      0x52, 0x59, 0x00
               08882 ; ; Starting pCode block
00A8 08883 __str_5:
00A8 4844 5043 08884         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54
     5220 5145 
     4555 5453 
00B4 0000      08885         DB      0x00
               08886 ; ; Starting pCode block
00B6 08887 __str_6:
00B6 6E55 6E6B 08888         DB      0x55, 0x6e, 0x6b, 0x6e, 0x77, 0x20, 0x44, 0x48, 0x43, 0x50, 0x20, 0x74
     2077 4844 
     5043 7420 
00C2 7079 0065 08889         DB      0x79, 0x70, 0x65, 0x00
               08890 ; ; Starting pCode block
00C6 08891 __str_7:
00C6 4147 4554 08892         DB      0x47, 0x41, 0x54, 0x45, 0x57, 0x20, 0x41, 0x52, 0x50, 0x20, 0x66, 0x61
     2057 5241 
     2050 6166 
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D2 6C69 3A20 08893         DB      0x69, 0x6c, 0x20, 0x3a, 0x27, 0x28, 0x00
     2827 0000 
               08894 ; ; Starting pCode block
00DA 08895 __str_8:
00DA 494C 474E 08896         DB      0x4c, 0x49, 0x4e, 0x47, 0x49, 0x32, 0x33, 0x31, 0x35, 0x00
     3249 3133 
     0035      
               08897 
               08898 
               08899 ; Statistics:
               08900 ; code size:    18734 (0x492e) bytes (14.29%)
               08901 ;                9367 (0x2497) words
               08902 ; udata size:    1170 (0x0492) bytes (30.47%)
               08903 ; access size:     27 (0x001b) bytes
               08904 
               08905 
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 167


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC0                          00000FEE
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
WREG                              00000FE8
_00115_DS_                        0000004A
_00118_DS_                        00000088
_00119_DS_                        0000009E
_00122_DS_                        000000DC
_00131_DS_                        00000056
_00132_DS_                        000000AA
_00137_DS_                        0000002C
_00141_DS_                        00000076
_00146_DS_                        00000038
_00153_DS_                        0000004A
_00155_DS_                        00000086
_00156_DS_                        0000008E
_00157_DS_                        00000090
_00162_DS_                        00000056
_00170_DS_                        000000AE
_00172_DS_                        000001F0
_00173_DS_                        00000200
_00181_DS_                        000000BA
_00193_DS_                        00000068
_00195_DS_                        000000EC
_00196_DS_                        000000FC
_00197_DS_                        000000FE
_00202_DS_                        00000074
_00209_DS_                        00000068
_00211_DS_                        000000F4
_00212_DS_                        00000104
_00213_DS_                        00000106
_00218_DS_                        00000074
_00228_DS_                        00000068
_00232_DS_                        000000CC
_00237_DS_                        00000074
_00242_DS_                        00000028
_00244_DS_                        00000054
_00250_DS_                        00000086
_00253_DS_                        000000EC
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00270_DS_                        00000068
_00272_DS_                        000000CC
_00273_DS_                        000000D4
_00274_DS_                        000000D6
_00279_DS_                        00000074
_00288_DS_                        00000068
_00290_DS_                        000000CC
_00291_DS_                        000000D4
_00292_DS_                        000000D6
_00297_DS_                        00000074
_00306_DS_                        000000D8
_00309_DS_                        0000018A
_00313_DS_                        000000B4
_00314_DS_                        000000D4
_00319_DS_                        0000012A
_00322_DS_                        00000196
_00328_DS_                        00000136
_00333_DS_                        0000005C
_00342_DS_                        0000010C
_00343_DS_                        0000014C
_00347_DS_                        00000270
_00348_DS_                        000002B0
_00353_DS_                        0000006A
_00355_DS_                        00000324
_00357_DS_                        0000033C
_00367_DS_                        00000076
_00368_DS_                        000000F0
_00369_DS_                        00000192
_00370_DS_                        000001EA
_00371_DS_                        000002F6
_00376_DS_                        0000006E
_00384_DS_                        0000011A
_00385_DS_                        00000134
_00389_DS_                        00000206
_00394_DS_                        00000136
_00396_DS_                        0000027C
_00404_DS_                        00000100
_00406_DS_                        0000010C
_00407_DS_                        00000118
_00413_DS_                        000000A6
_00416_DS_                        00000132
_00420_DS_                        000001BA
_00424_DS_                        00000258
_00427_DS_                        000001D4
_00429_DS_                        0000034C
_00430_DS_                        0000013A
_00433_DS_                        0000016E
_00434_DS_                        0000035A
_00440_DS_                        00000136
_00452_DS_                        00000144
_00454_DS_                        000001B6
_00456_DS_                        0000020E
_00457_DS_                        0000023E
_00458_DS_                        00000240
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00464_DS_                        00000196
_00465_DS_                        00000080
_00467_DS_                        000001A2
_00468_DS_                        000001A4
_00473_DS_                        00000092
_00474_DS_                        000000FA
_00475_DS_                        000000FC
_00480_DS_                        00000108
_00481_DS_                        00000154
_00483_DS_                        00000238
_00484_DS_                        000002C4
_00486_DS_                        000002DC
_00492_DS_                        000000FC
_00494_DS_                        00000106
_00514_DS_                        00000052
_00518_DS_                        000000AE
_00523_DS_                        00000064
_00528_DS_                        00000086
_00531_DS_                        000000D0
_00534_DS_                        0000010E
_00535_DS_                        00000158
_00538_DS_                        000001BC
_00539_DS_                        0000023A
_00542_DS_                        000002A2
_00556_DS_                        000000DC
_00557_DS_                        00000164
_00558_DS_                        00000246
_00563_DS_                        00000060
_00567_DS_                        000000B6
_00572_DS_                        0000006C
_00578_DS_                        00000172
_00581_DS_                        0000021A
_00582_DS_                        00000266
_00585_DS_                        000003D0
_00591_DS_                        00000488
_00593_DS_                        000004A0
_00604_DS_                        00000164
_00606_DS_                        00000170
_00611_DS_                        0000004C
_00616_DS_                        00000282
_00622_DS_                        00000012
_00624_DS_                        0000002E
_00629_DS_                        00000020
_00640_DS_                        0000013C
_00641_DS_                        00000174
_00642_DS_                        00000068
_00644_DS_                        00000180
_00650_DS_                        0000007A
_00651_DS_                        000000F6
_00652_DS_                        000000F8
_00659_DS_                        0000006C
_00661_DS_                        000000FC
_00663_DS_                        00000034
_00665_DS_                        00000104
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00666_DS_                        0000010C
_00667_DS_                        00000124
_00674_DS_                        00000040
_00675_DS_                        00000078
_00680_DS_                        00000016
_00692_DS_                        000000FC
_00693_DS_                        0000005C
_00696_DS_                        000000D4
_00703_DS_                        0000009A
_00704_DS_                        000000E4
_00712_DS_                        00000082
_00721_DS_                        00000062
_00724_DS_                        0000016C
_00726_DS_                        00000194
_00727_DS_                        000000C4
_00739_DS_                        0000013C
_00742_DS_                        000000A0
_00743_DS_                        00000084
_00744_DS_                        00000094
_00745_DS_                        00000092
_00747_DS_                        00000102
_00750_DS_                        0000017C
_00756_DS_                        0000002C
_00757_DS_                        00000030
_00770_DS_                        000000CC
_00774_DS_                        00000134
_00777_DS_                        0000015E
_00781_DS_                        00000188
_00788_DS_                        00000152
_00789_DS_                        00000114
_10768_DS_                        00000112
_20769_DS_                        00000118
_30770_DS_                        0000011E
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_AN0String                        00000000
_ARPIsResolved                    00000000
_ARPResolve                       00000000
_AppConfig                        00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_DisplayIPValue                   00000000
_DisplayIPValue_IPDigit_1_1       00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DisplayString                    00000000
_DisplayWORD                      00000000
_DisplayWORD_WDigit_1_1           00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_GATEWAY_MACA                     00000000
_HighISR                          00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_InitAppConfig                    00000000
_InitializeBoard                  00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_LowISR                           00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_StackInit                        00000000
_StackTask                        00000000
_StackTaskHelp                    00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_TickConvertToMilliseconds        00000000
_TickGet                          00000000
_TickInit                         00000000
_TickUpdate                       00000000
_UDPDiscard                       00000000
_UDPFlush                         00000000
_UDPGet                           00000000
_UDPGetArray                      00000000
_UDPIsGetReady                    00000000
_UDPIsPutReady                    00000000
_UDPOpen                          00000000
_UDPPut                           00000000
_UDPPutArray                      00000000
_UDPPutArrayInvert                00000000
_UDPRxCount                       00000000
_UDPSocketInfo                    00000000
_UDPTxCount                       00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__18F97J60                        00000001
__divsint                         00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
__gptrput3                        00000000
__gptrput4                        00000000
__modsint                         00000000
__modulong                        00000000
__str_0                           0000005A
__str_1                           0000006A
__str_2                           00000076
__str_3                           00000080
__str_4                           00000098
__str_5                           000000A8
__str_6                           000000B6
__str_7                           000000C6
__str_8                           000000DA
_activeUDPSocket                  00000000
_add_to_pool                      00000000
_build_bootp                      00000000
_build_dhcp_header                00000000
_discover_msg                     00000000
_display_ip                       00000000
_display_ip_a_1_1                 00000000
_display_ip_b_1_1                 00000000
_display_ip_c_1_1                 00000000
_display_ip_d_1_1                 00000000
_display_mac                      00000000
_display_mac_a_1_1                00000000
_display_mac_b_1_1                00000000
_display_mac_c_1_1                00000000
_display_mac_d_1_1                00000000
_display_mac_e_1_1                00000000
_display_mac_f_1_1                00000000
_end_dhcp                         00000000
_extract_bootp_header             00000000
_extract_bootp_header_length_1_1  00000000
_extract_bootp_header_opt_1_1     00000000
_extract_bootp_header_word_buf_1_1  00000000
_forgeBootpHeader                 00000000
_forgeBootpHeaderAck              00000000
_forgeBootpHeaderRequest          00000000
_get_ack_lease_time               00000000
_get_gateway_MAC                  00000000
_get_gateway_MAC_gateway_MAC2_1_1  00000000
_get_pool_el_ip                   00000000
_get_pool_el_mac                  00000000
_handle_client_msg                00000000
_handle_client_msg_bootp_header_1_1  00000000
_handle_client_msg_dhcp_header_1_1  00000000
_handle_client_msg_dhcp_header_length_1_1  00000000
_handle_client_msg_dhcp_type_1_1  00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_handle_client_msg_node_pool_state_1_1  00000000
_handle_server_msg                00000000
_handle_server_msg_bootp_header_1_1  00000000
_handle_server_msg_dhcp_header_1_1  00000000
_handle_server_msg_dhcp_header_length_1_1  00000000
_handle_server_msg_dhcp_type_1_1  00000000
_handle_server_msg_lease_time_1_1  00000000
_handle_server_msg_node_pool_state_1_1  00000000
_init_pool                        00000000
_init_pool_el                     00000000
_int_to_string                    00000000
_ip_cmp                           00000000
_is_free                          00000000
_mac_cmp                          00000000
_main                             00000000
_main_gateway_MAC_1_1             00000000
_memcpy                           00000000
_memset                           00000000
_message                          00000000
_nbr_sec                          00000000
_number_of_char                   00000000
_pool                             00000000
_remove_from_pool                 00000000
_remove_from_pool_pool_el_1_1     00000000
_request_msg                      00000000
_send_release                     00000000
_send_release_bootp_header_1_1    00000000
_send_request                     00000000
_send_request_bootp_header_1_1    00000000
_send_request_dhcp_header_1_1     00000000
_send_request_dhcp_header_length_1_1  00000000
_set_mac_to_dhcp_server           00000000
_set_to_MAC                       00000000
_set_to_dhcp_ip                   00000000
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_time_action                      00000000
_time_action_count_1_1            0000000A
_time_action_prev_1_1             00000002
_time_action_t_1_1                00000006
_transfer_msg_to_client           00000000
_transfer_msg_to_client_broadcast_1_1  00000000
_transfer_msg_to_client_lease_time_1_1  00000000
_uitoa                            00000000
_ultoa                            00000000
_update_pool                      00000000
_wait_network_data                00000000
_wait_network_data_dhcp_server_ip_1_1  00000000
_wait_network_data_last_ip_1_1    00000000
_wait_network_data_socket_recv_1_1  00000000
_wait_network_data_socket_sendto_client_1_1  00000000
_wait_network_data_socket_sendto_server_1_1  00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-18-2013  21:43:28          PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
ivec_0x1_HighISR                  00000008
ivec_0x2_LowISR                   00000018
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015
r0x16                             00000016
r0x17                             00000017
r0x18                             00000018
r0x19                             00000019
r0x1a                             0000001A


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

