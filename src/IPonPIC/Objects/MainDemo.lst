gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (May 13 2013) (UNIX)
               00004 ; This file was generated Fri May  9 05:30:11 2014
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _message
               00016         global _seconds
               00017         global _AN0String
               00018         global _mac_cmp
               00019         global _ip_cmp
               00020         global _addMacFromServ
               00021         global _UDPPutArrayInvert
               00022         global _getMacFromServ
               00023         global _setDhcpIp
               00024         global _sendRequest
               00025         global _rcvdFromServer
               00026         global _transmitToClient
               00027         global _rcvdFromClient
               00028         global _buildHeader
               00029         global _buildBootpHeader
               00030         global _configureBootpHeader
               00031         global _buildDiscoverMsg
               00032         global _sendRelease
               00033         global _sendRequestMsg
               00034         global _extractBootProtHeader
               00035         global _getLeaseFromAck
               00036         global _initializeClientDB
               00037         global _initializeItem
               00038         global _addItem
               00039         global _isPoolItemUsed
               00040         global _findInPool
               00041         global _leaseTimeCheck
               00042         global _timeCheck
               00043         global _doDhcpOperations
               00044         global _DisplayWORD
               00045         global _DisplayString
               00046         global _DisplayIPValue
               00047         global _strlcpy
               00048         global _AppConfig
               00049         global _MAC_ADDR_GATEWAY
               00050         global _pool
               00051         global _LowISR
               00052         global _HighISR
               00053         global _main
               00054 
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055 ;--------------------------------------------------------
               00056 ; extern variables in this module
               00057 ;--------------------------------------------------------
               00058         extern __gptrget1
               00059         extern __gptrput1
               00060         extern __gptrput4
               00061         extern __gptrput2
               00062         extern __gptrget2
               00063         extern __gptrput3
               00064         extern _EBSTCONbits
               00065         extern _MISTATbits
               00066         extern _EFLOCONbits
               00067         extern _MACON1bits
               00068         extern _MACON2bits
               00069         extern _MACON3bits
               00070         extern _MACON4bits
               00071         extern _MACLCON1bits
               00072         extern _MACLCON2bits
               00073         extern _MICONbits
               00074         extern _MICMDbits
               00075         extern _EWOLIEbits
               00076         extern _EWOLIRbits
               00077         extern _ERXFCONbits
               00078         extern _EIEbits
               00079         extern _ESTATbits
               00080         extern _ECON2bits
               00081         extern _EIRbits
               00082         extern _EDATAbits
               00083         extern _SSP2CON2bits
               00084         extern _SSP2CON1bits
               00085         extern _SSP2STATbits
               00086         extern _ECCP2DELbits
               00087         extern _ECCP2ASbits
               00088         extern _ECCP3DELbits
               00089         extern _ECCP3ASbits
               00090         extern _RCSTA2bits
               00091         extern _TXSTA2bits
               00092         extern _CCP5CONbits
               00093         extern _CCP4CONbits
               00094         extern _T4CONbits
               00095         extern _ECCP1DELbits
               00096         extern _BAUDCON2bits
               00097         extern _BAUDCTL2bits
               00098         extern _BAUDCONbits
               00099         extern _BAUDCON1bits
               00100         extern _BAUDCTLbits
               00101         extern _BAUDCTL1bits
               00102         extern _PORTAbits
               00103         extern _PORTBbits
               00104         extern _PORTCbits
               00105         extern _PORTDbits
               00106         extern _PORTEbits
               00107         extern _PORTFbits
               00108         extern _PORTGbits
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _PORTHbits
               00110         extern _PORTJbits
               00111         extern _LATAbits
               00112         extern _LATBbits
               00113         extern _LATCbits
               00114         extern _LATDbits
               00115         extern _LATEbits
               00116         extern _LATFbits
               00117         extern _LATGbits
               00118         extern _LATHbits
               00119         extern _LATJbits
               00120         extern _DDRAbits
               00121         extern _TRISAbits
               00122         extern _DDRBbits
               00123         extern _TRISBbits
               00124         extern _DDRCbits
               00125         extern _TRISCbits
               00126         extern _DDRDbits
               00127         extern _TRISDbits
               00128         extern _DDREbits
               00129         extern _TRISEbits
               00130         extern _DDRFbits
               00131         extern _TRISFbits
               00132         extern _DDRGbits
               00133         extern _TRISGbits
               00134         extern _DDRHbits
               00135         extern _TRISHbits
               00136         extern _DDRJbits
               00137         extern _TRISJbits
               00138         extern _OSCTUNEbits
               00139         extern _MEMCONbits
               00140         extern _PIE1bits
               00141         extern _PIR1bits
               00142         extern _IPR1bits
               00143         extern _PIE2bits
               00144         extern _PIR2bits
               00145         extern _IPR2bits
               00146         extern _PIE3bits
               00147         extern _PIR3bits
               00148         extern _IPR3bits
               00149         extern _EECON1bits
               00150         extern _RCSTAbits
               00151         extern _RCSTA1bits
               00152         extern _TXSTAbits
               00153         extern _TXSTA1bits
               00154         extern _PSPCONbits
               00155         extern _T3CONbits
               00156         extern _CMCONbits
               00157         extern _CVRCONbits
               00158         extern _ECCP1ASbits
               00159         extern _CCP3CONbits
               00160         extern _ECCP3CONbits
               00161         extern _CCP2CONbits
               00162         extern _ECCP2CONbits
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _CCP1CONbits
               00164         extern _ECCP1CONbits
               00165         extern _ADCON2bits
               00166         extern _ADCON1bits
               00167         extern _ADCON0bits
               00168         extern _SSP1CON2bits
               00169         extern _SSPCON2bits
               00170         extern _SSP1CON1bits
               00171         extern _SSPCON1bits
               00172         extern _SSP1STATbits
               00173         extern _SSPSTATbits
               00174         extern _T2CONbits
               00175         extern _T1CONbits
               00176         extern _RCONbits
               00177         extern _WDTCONbits
               00178         extern _ECON1bits
               00179         extern _OSCCONbits
               00180         extern _T0CONbits
               00181         extern _STATUSbits
               00182         extern _INTCON3bits
               00183         extern _INTCON2bits
               00184         extern _INTCONbits
               00185         extern _STKPTRbits
               00186         extern _stdin
               00187         extern _stdout
               00188         extern _activeUDPSocket
               00189         extern _UDPSocketInfo
               00190         extern _UDPTxCount
               00191         extern _UDPRxCount
               00192         extern _LCDText
               00193         extern _MAADR5
               00194         extern _MAADR6
               00195         extern _MAADR3
               00196         extern _MAADR4
               00197         extern _MAADR1
               00198         extern _MAADR2
               00199         extern _EBSTSD
               00200         extern _EBSTCON
               00201         extern _EBSTCS
               00202         extern _EBSTCSL
               00203         extern _EBSTCSH
               00204         extern _MISTAT
               00205         extern _EFLOCON
               00206         extern _EPAUS
               00207         extern _EPAUSL
               00208         extern _EPAUSH
               00209         extern _MACON1
               00210         extern _MACON2
               00211         extern _MACON3
               00212         extern _MACON4
               00213         extern _MABBIPG
               00214         extern _MAIPG
               00215         extern _MAIPGL
               00216         extern _MAIPGH
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _MACLCON1
               00218         extern _MACLCON2
               00219         extern _MAMXFL
               00220         extern _MAMXFLL
               00221         extern _MAMXFLH
               00222         extern _MICON
               00223         extern _MICMD
               00224         extern _MIREGADR
               00225         extern _MIWR
               00226         extern _MIWRL
               00227         extern _MIWRH
               00228         extern _MIRD
               00229         extern _MIRDL
               00230         extern _MIRDH
               00231         extern _EHT0
               00232         extern _EHT1
               00233         extern _EHT2
               00234         extern _EHT3
               00235         extern _EHT4
               00236         extern _EHT5
               00237         extern _EHT6
               00238         extern _EHT7
               00239         extern _EPMM0
               00240         extern _EPMM1
               00241         extern _EPMM2
               00242         extern _EPMM3
               00243         extern _EPMM4
               00244         extern _EPMM5
               00245         extern _EPMM6
               00246         extern _EPMM7
               00247         extern _EPMCS
               00248         extern _EPMCSL
               00249         extern _EPMCSH
               00250         extern _EPMO
               00251         extern _EPMOL
               00252         extern _EPMOH
               00253         extern _EWOLIE
               00254         extern _EWOLIR
               00255         extern _ERXFCON
               00256         extern _EPKTCNT
               00257         extern _EWRPT
               00258         extern _EWRPTL
               00259         extern _EWRPTH
               00260         extern _ETXST
               00261         extern _ETXSTL
               00262         extern _ETXSTH
               00263         extern _ETXND
               00264         extern _ETXNDL
               00265         extern _ETXNDH
               00266         extern _ERXST
               00267         extern _ERXSTL
               00268         extern _ERXSTH
               00269         extern _ERXND
               00270         extern _ERXNDL
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _ERXNDH
               00272         extern _ERXRDPT
               00273         extern _ERXRDPTL
               00274         extern _ERXRDPTH
               00275         extern _ERXWRPT
               00276         extern _ERXWRPTL
               00277         extern _ERXWRPTH
               00278         extern _EDMAST
               00279         extern _EDMASTL
               00280         extern _EDMASTH
               00281         extern _EDMAND
               00282         extern _EDMANDL
               00283         extern _EDMANDH
               00284         extern _EDMADST
               00285         extern _EDMADSTL
               00286         extern _EDMADSTH
               00287         extern _EDMACS
               00288         extern _EDMACSL
               00289         extern _EDMACSH
               00290         extern _EIE
               00291         extern _ESTAT
               00292         extern _ECON2
               00293         extern _EIR
               00294         extern _EDATA
               00295         extern _SSP2CON2
               00296         extern _SSP2CON1
               00297         extern _SSP2STAT
               00298         extern _SSP2ADD
               00299         extern _SSP2BUF
               00300         extern _ECCP2DEL
               00301         extern _ECCP2AS
               00302         extern _ECCP3DEL
               00303         extern _ECCP3AS
               00304         extern _RCSTA2
               00305         extern _TXSTA2
               00306         extern _TXREG2
               00307         extern _RCREG2
               00308         extern _SPBRG2
               00309         extern _CCP5CON
               00310         extern _CCPR5
               00311         extern _CCPR5L
               00312         extern _CCPR5H
               00313         extern _CCP4CON
               00314         extern _CCPR4
               00315         extern _CCPR4L
               00316         extern _CCPR4H
               00317         extern _T4CON
               00318         extern _PR4
               00319         extern _TMR4
               00320         extern _ECCP1DEL
               00321         extern _ERDPT
               00322         extern _ERDPTL
               00323         extern _ERDPTH
               00324         extern _BAUDCON2
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _BAUDCTL2
               00326         extern _SPBRGH2
               00327         extern _BAUDCON
               00328         extern _BAUDCON1
               00329         extern _BAUDCTL
               00330         extern _BAUDCTL1
               00331         extern _SPBRGH
               00332         extern _SPBRGH1
               00333         extern _PORTA
               00334         extern _PORTB
               00335         extern _PORTC
               00336         extern _PORTD
               00337         extern _PORTE
               00338         extern _PORTF
               00339         extern _PORTG
               00340         extern _PORTH
               00341         extern _PORTJ
               00342         extern _LATA
               00343         extern _LATB
               00344         extern _LATC
               00345         extern _LATD
               00346         extern _LATE
               00347         extern _LATF
               00348         extern _LATG
               00349         extern _LATH
               00350         extern _LATJ
               00351         extern _DDRA
               00352         extern _TRISA
               00353         extern _DDRB
               00354         extern _TRISB
               00355         extern _DDRC
               00356         extern _TRISC
               00357         extern _DDRD
               00358         extern _TRISD
               00359         extern _DDRE
               00360         extern _TRISE
               00361         extern _DDRF
               00362         extern _TRISF
               00363         extern _DDRG
               00364         extern _TRISG
               00365         extern _DDRH
               00366         extern _TRISH
               00367         extern _DDRJ
               00368         extern _TRISJ
               00369         extern _OSCTUNE
               00370         extern _MEMCON
               00371         extern _PIE1
               00372         extern _PIR1
               00373         extern _IPR1
               00374         extern _PIE2
               00375         extern _PIR2
               00376         extern _IPR2
               00377         extern _PIE3
               00378         extern _PIR3
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _IPR3
               00380         extern _EECON1
               00381         extern _EECON2
               00382         extern _RCSTA
               00383         extern _RCSTA1
               00384         extern _TXSTA
               00385         extern _TXSTA1
               00386         extern _TXREG
               00387         extern _TXREG1
               00388         extern _RCREG
               00389         extern _RCREG1
               00390         extern _SPBRG
               00391         extern _SPBRG1
               00392         extern _PSPCON
               00393         extern _T3CON
               00394         extern _TMR3L
               00395         extern _TMR3H
               00396         extern _CMCON
               00397         extern _CVRCON
               00398         extern _ECCP1AS
               00399         extern _CCP3CON
               00400         extern _ECCP3CON
               00401         extern _CCPR3
               00402         extern _CCPR3L
               00403         extern _CCPR3H
               00404         extern _CCP2CON
               00405         extern _ECCP2CON
               00406         extern _CCPR2
               00407         extern _CCPR2L
               00408         extern _CCPR2H
               00409         extern _CCP1CON
               00410         extern _ECCP1CON
               00411         extern _CCPR1
               00412         extern _CCPR1L
               00413         extern _CCPR1H
               00414         extern _ADCON2
               00415         extern _ADCON1
               00416         extern _ADCON0
               00417         extern _ADRES
               00418         extern _ADRESL
               00419         extern _ADRESH
               00420         extern _SSP1CON2
               00421         extern _SSPCON2
               00422         extern _SSP1CON1
               00423         extern _SSPCON1
               00424         extern _SSP1STAT
               00425         extern _SSPSTAT
               00426         extern _SSP1ADD
               00427         extern _SSPADD
               00428         extern _SSP1BUF
               00429         extern _SSPBUF
               00430         extern _T2CON
               00431         extern _PR2
               00432         extern _TMR2
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _T1CON
               00434         extern _TMR1L
               00435         extern _TMR1H
               00436         extern _RCON
               00437         extern _WDTCON
               00438         extern _ECON1
               00439         extern _OSCCON
               00440         extern _T0CON
               00441         extern _TMR0L
               00442         extern _TMR0H
               00443         extern _STATUS
               00444         extern _FSR2L
               00445         extern _FSR2H
               00446         extern _PLUSW2
               00447         extern _PREINC2
               00448         extern _POSTDEC2
               00449         extern _POSTINC2
               00450         extern _INDF2
               00451         extern _BSR
               00452         extern _FSR1L
               00453         extern _FSR1H
               00454         extern _PLUSW1
               00455         extern _PREINC1
               00456         extern _POSTDEC1
               00457         extern _POSTINC1
               00458         extern _INDF1
               00459         extern _WREG
               00460         extern _FSR0L
               00461         extern _FSR0H
               00462         extern _PLUSW0
               00463         extern _PREINC0
               00464         extern _POSTDEC0
               00465         extern _POSTINC0
               00466         extern _INDF0
               00467         extern _INTCON3
               00468         extern _INTCON2
               00469         extern _INTCON
               00470         extern _PROD
               00471         extern _PRODL
               00472         extern _PRODH
               00473         extern _TABLAT
               00474         extern _TBLPTR
               00475         extern _TBLPTRL
               00476         extern _TBLPTRH
               00477         extern _TBLPTRU
               00478         extern _PC
               00479         extern _PCL
               00480         extern _PCLATH
               00481         extern _PCLATU
               00482         extern _STKPTR
               00483         extern _TOS
               00484         extern _TOSL
               00485         extern _TOSH
               00486         extern _TOSU
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00487         extern _uitoa
               00488         extern _ultoa
               00489         extern _strlen
               00490         extern _memcpy
               00491         extern _memset
               00492         extern _StackInit
               00493         extern _StackTask
               00494         extern _StackTaskModified
               00495         extern _TickInit
               00496         extern _TickGet
               00497         extern _TickConvertToMilliseconds
               00498         extern _TickUpdate
               00499         extern _ARPResolve
               00500         extern _ARPIsResolved
               00501         extern _UDPOpen
               00502         extern _UDPIsPutReady
               00503         extern _UDPPut
               00504         extern _UDPPutArray
               00505         extern _UDPFlush
               00506         extern _UDPIsGetReady
               00507         extern _UDPGet
               00508         extern _UDPGetArray
               00509         extern _UDPDiscard
               00510         extern _LCDInit
               00511         extern _LCDUpdate
               00512         extern __modulong
               00513 ;--------------------------------------------------------
               00514 ;       Equates to used internal registers
               00515 ;--------------------------------------------------------
  00000FD8     00516 STATUS  equ     0xfd8
  00000FFA     00517 PCLATH  equ     0xffa
  00000FFB     00518 PCLATU  equ     0xffb
  00000FE8     00519 WREG    equ     0xfe8
  00000FE0     00520 BSR     equ     0xfe0
  00000FF6     00521 TBLPTRL equ     0xff6
  00000FF7     00522 TBLPTRH equ     0xff7
  00000FE9     00523 FSR0L   equ     0xfe9
  00000FEA     00524 FSR0H   equ     0xfea
  00000FE1     00525 FSR1L   equ     0xfe1
  00000FD9     00526 FSR2L   equ     0xfd9
  00000FEF     00527 INDF0   equ     0xfef
  00000FEE     00528 POSTINC0        equ     0xfee
  00000FE5     00529 POSTDEC1        equ     0xfe5
  00000FE4     00530 PREINC1 equ     0xfe4
  00000FDB     00531 PLUSW2  equ     0xfdb
  00000FF3     00532 PRODL   equ     0xff3
  00000FF4     00533 PRODH   equ     0xff4
               00534 
               00535 
               00536         idata
               00537 _seconds        db      0x00, 0x00
               00538 _MAGIC_COOKIE   db      0x63, 0x82, 0x53, 0x63
               00539 _timeCheck_previous_1_1 db      0x00, 0x00, 0x00, 0x00
               00540 _timeCheck_counter_1_1  db      0x00, 0x00, 0x00, 0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 
               00542 
               00543 ; Internal registers
               00544 .registers      udata_ovr       0x0000
               00545 r0x00   res     1
               00546 r0x01   res     1
               00547 r0x02   res     1
               00548 r0x03   res     1
               00549 r0x04   res     1
               00550 r0x05   res     1
               00551 r0x06   res     1
               00552 r0x07   res     1
               00553 r0x08   res     1
               00554 r0x09   res     1
               00555 r0x0a   res     1
               00556 r0x0b   res     1
               00557 r0x0c   res     1
               00558 r0x0d   res     1
               00559 r0x0e   res     1
               00560 r0x0f   res     1
               00561 r0x10   res     1
               00562 r0x11   res     1
               00563 r0x12   res     1
               00564 r0x13   res     1
               00565 r0x14   res     1
               00566 r0x15   res     1
               00567 r0x16   res     1
               00568 r0x17   res     1
               00569 r0x18   res     1
               00570 r0x19   res     1
               00571 r0x1a   res     1
               00572 
               00573 udata_MainDemo_0        udata
               00574 _AN0String      res     8
               00575 
               00576 udata_MainDemo_1        udata
               00577 _message        res     3
               00578 
               00579 udata_MainDemo_2        udata
               00580 _MAC_ADDR_GATEWAY       res     6
               00581 
               00582 udata_MainDemo_3        udata
               00583 _AppConfig      res     51
               00584 
               00585 udata_MainDemo_4        udata
               00586 _getMacFromServ_gw_mac_1_1      res     6
               00587 
               00588 udata_MainDemo_5        udata
               00589 _sendRequest_dhcp_header_length_1_1     res     2
               00590 
               00591 udata_MainDemo_6        udata
               00592 _sendRequest_bootp_header_1_1   res     34
               00593 
               00594 udata_MainDemo_7        udata
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00595 _sendRequest_dhcp_header_1_1    res     200
               00596 
               00597 udata_MainDemo_8        udata
               00598 _rcvdFromServer_pool_it_1_1     res     3
               00599 
               00600 udata_MainDemo_9        udata
               00601 _rcvdFromServer_dhcp_type_1_1   res     1
               00602 
               00603 udata_MainDemo_10       udata
               00604 _rcvdFromServer_bootp_header_1_1        res     34
               00605 
               00606 udata_MainDemo_11       udata
               00607 _rcvdFromServer_dhcp_header_1_1 res     200
               00608 
               00609 udata_MainDemo_12       udata
               00610 _rcvdFromServer_dhcp_header_length_1_1  res     2
               00611 
               00612 udata_MainDemo_13       udata
               00613 _rcvdFromServer_lease_time_1_1  res     4
               00614 
               00615 udata_MainDemo_14       udata
               00616 _transmitToClient_lease_time_1_1        res     2
               00617 
               00618 udata_MainDemo_15       udata
               00619 _transmitToClient_broadcast_1_1 res     4
               00620 
               00621 udata_MainDemo_16       udata
               00622 _rcvdFromClient_pool_it_1_1     res     3
               00623 
               00624 udata_MainDemo_17       udata
               00625 _rcvdFromClient_dhcp_type_1_1   res     1
               00626 
               00627 udata_MainDemo_18       udata
               00628 _rcvdFromClient_bootp_header_1_1        res     34
               00629 
               00630 udata_MainDemo_19       udata
               00631 _rcvdFromClient_dhcp_header_1_1 res     200
               00632 
               00633 udata_MainDemo_20       udata
               00634 _rcvdFromClient_dhcp_header_length_1_1  res     2
               00635 
               00636 udata_MainDemo_21       udata
               00637 _sendRelease_bootp_header_1_1   res     34
               00638 
               00639 udata_MainDemo_22       udata
               00640 _extractBootProtHeader_opt_1_1  res     1
               00641 
               00642 udata_MainDemo_23       udata
               00643 _extractBootProtHeader_cookie_checker_1_1       res     4
               00644 
               00645 udata_MainDemo_24       udata
               00646 _extractBootProtHeader_length_1_1       res     1
               00647 
               00648 udata_MainDemo_25       udata
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00649 _pool   res     200
               00650 
               00651 udata_MainDemo_26       udata
               00652 _doDhcpOperations_send_s_socket_1_1     res     1
               00653 
               00654 udata_MainDemo_27       udata
               00655 _doDhcpOperations_send_c_socket_1_1     res     1
               00656 
               00657 udata_MainDemo_28       udata
               00658 _doDhcpOperations_receiver_socket_1_1   res     1
               00659 
               00660 udata_MainDemo_29       udata
               00661 _doDhcpOperations_server_ip_1_1 res     4
               00662 
               00663 udata_MainDemo_30       udata
               00664 _doDhcpOperations_ip_last_pckt_1_1      res     4
               00665 
               00666 udata_MainDemo_31       udata
               00667 _DisplayWORD_WDigit_1_1 res     6
               00668 
               00669 udata_MainDemo_32       udata
               00670 _DisplayIPValue_IPDigit_1_1     res     4
               00671 
               00672 ;--------------------------------------------------------
               00673 ; interrupt vector 
               00674 ;--------------------------------------------------------
               00675 
               00676 ;--------------------------------------------------------
               00677 ; global & static initialisations
               00678 ;--------------------------------------------------------
               00679 ; ; Starting pCode block for absolute section
               00680 ; ;-----------------------------------------
               00681 S_MainDemo_ivec_0x2_LowISR      code    0X000018
0018 00682 ivec_0x2_LowISR:
0018 EF00 F000 00683         GOTO    _LowISR
               00684 
               00685 ; ; Starting pCode block for absolute section
               00686 ; ;-----------------------------------------
               00687 S_MainDemo_ivec_0x1_HighISR     code    0X000008
0008 00688 ivec_0x1_HighISR:
0008 EF00 F000 00689         GOTO    _HighISR
               00690 
               00691 ; I code from now on!
               00692 ; ; Starting pCode block
               00693 S_MainDemo__main        code
0000 00694 _main:
               00695 ;       .line   895; MainDemo.c InitializeBoard();
0000 EC00 F000 00696         CALL    _InitializeBoard
               00697 ;       .line   898; MainDemo.c LCDInit();
0004 EC00 F000 00698         CALL    _LCDInit
               00699 ;       .line   899; MainDemo.c DelayMs(100);
0008 0E10      00700         MOVLW   0x10
000A 6E00      00701         MOVWF   r0x00
000C 0E98      00702         MOVLW   0x98
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000E 6E00      00703         MOVWF   r0x01
0010 0E02      00704         MOVLW   0x02
0012 6E00      00705         MOVWF   r0x02
0014 6A00      00706         CLRF    r0x03
0016 00707 _00642_DS_:
0016 C000 F000 00708         MOVFF   r0x00, r0x04
001A C000 F000 00709         MOVFF   r0x01, r0x05
001E C000 F000 00710         MOVFF   r0x02, r0x06
0022 C000 F000 00711         MOVFF   r0x03, r0x07
0026 0EFF      00712         MOVLW   0xff
0028 2600      00713         ADDWF   r0x00, F
002A 0EFF      00714         MOVLW   0xff
002C 2200      00715         ADDWFC  r0x01, F
002E 0EFF      00716         MOVLW   0xff
0030 2200      00717         ADDWFC  r0x02, F
0032 0EFF      00718         MOVLW   0xff
0034 2200      00719         ADDWFC  r0x03, F
0036 5000      00720         MOVF    r0x04, W
0038 1000      00721         IORWF   r0x05, W
003A 1000      00722         IORWF   r0x06, W
003C 1000      00723         IORWF   r0x07, W
003E E100      00724         BNZ     _00642_DS_
               00725 ;       .line   902; MainDemo.c TickInit();
0040 EC00 F000 00726         CALL    _TickInit
               00727 ;       .line   905; MainDemo.c InitAppConfig();
0044 EC00 F000 00728         CALL    _InitAppConfig
               00729 ;       .line   909; MainDemo.c StackInit();
0048 EC00 F000 00730         CALL    _StackInit
               00731 ;       .line   912; MainDemo.c DisplayString(0,"INGI2315 Init");
004C 0E00      00732         MOVLW   UPPER(__str_9)
004E 6EE5      00733         MOVWF   POSTDEC1
0050 0E00      00734         MOVLW   HIGH(__str_9)
0052 6EE5      00735         MOVWF   POSTDEC1
0054 0E00      00736         MOVLW   LOW(__str_9)
0056 6EE5      00737         MOVWF   POSTDEC1
0058 0E00      00738         MOVLW   0x00
005A 6EE5      00739         MOVWF   POSTDEC1
005C EC00 F000 00740         CALL    _DisplayString
0060 0E04      00741         MOVLW   0x04
0062 26E1      00742         ADDWF   FSR1L, F
               00743 ;       .line   913; MainDemo.c getMacFromServ();
0064 EC00 F000 00744         CALL    _getMacFromServ
               00745 ;       .line   914; MainDemo.c initializeClientDB();
0068 EC00 F000 00746         CALL    _initializeClientDB
               00747 ;       .line   916; MainDemo.c doDhcpOperations();
006C EC00 F000 00748         CALL    _doDhcpOperations
0070 0012      00749         RETURN  
               00750 
               00751 ; ; Starting pCode block
               00752 S_MainDemo__strlcpy     code
0000 00753 _strlcpy:
               00754 ;       .line   1152; MainDemo.c        strlcpy(char *dst, const char *src, size_t siz)
0000 CFD9 FFE5 00755         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00756         MOVFF   FSR1L, FSR2L
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008 C000 FFE5 00757         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00758         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00759         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00760         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00761         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00762         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00763         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00764         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00765         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00766         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00767         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 00768         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 00769         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 00770         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 00771         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 00772         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 00773         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 00774         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 00775         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 00776         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 00777         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 00778         MOVFF   r0x15, POSTDEC1
0060 0E02      00779         MOVLW   0x02
0062 CFDB F000 00780         MOVFF   PLUSW2, r0x00
0066 0E03      00781         MOVLW   0x03
0068 CFDB F000 00782         MOVFF   PLUSW2, r0x01
006C 0E04      00783         MOVLW   0x04
006E CFDB F000 00784         MOVFF   PLUSW2, r0x02
0072 0E05      00785         MOVLW   0x05
0074 CFDB F000 00786         MOVFF   PLUSW2, r0x03
0078 0E06      00787         MOVLW   0x06
007A CFDB F000 00788         MOVFF   PLUSW2, r0x04
007E 0E07      00789         MOVLW   0x07
0080 CFDB F000 00790         MOVFF   PLUSW2, r0x05
0084 0E08      00791         MOVLW   0x08
0086 CFDB F000 00792         MOVFF   PLUSW2, r0x06
008A 0E09      00793         MOVLW   0x09
008C CFDB F000 00794         MOVFF   PLUSW2, r0x07
               00795 ;       .line   1154; MainDemo.c        char       *d = dst;
0090 C000 F000 00796         MOVFF   r0x00, r0x08
0094 C000 F000 00797         MOVFF   r0x01, r0x09
0098 C000 F000 00798         MOVFF   r0x02, r0x0a
               00799 ;       .line   1155; MainDemo.c        const char *s = src;
009C C000 F000 00800         MOVFF   r0x03, r0x0b
00A0 C000 F000 00801         MOVFF   r0x04, r0x0c
00A4 C000 F000 00802         MOVFF   r0x05, r0x0d
               00803 ;       .line   1156; MainDemo.c        size_t      n = siz;
00A8 C000 F000 00804         MOVFF   r0x06, r0x0e
00AC C000 F000 00805         MOVFF   r0x07, r0x0f
               00806 ;       .line   1159; MainDemo.c        if (n != 0)
00B0 5000      00807         MOVF    r0x06, W
00B2 1000      00808         IORWF   r0x07, W
00B4 B4D8      00809         BTFSC   STATUS, 2
00B6 D000      00810         BRA     _00736_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00811 ;       .line   1161; MainDemo.c        while (--n != 0)
00B8 C000 F000 00812         MOVFF   r0x03, r0x10
00BC C000 F000 00813         MOVFF   r0x04, r0x11
00C0 C000 F000 00814         MOVFF   r0x05, r0x12
00C4 C000 F000 00815         MOVFF   r0x06, r0x13
00C8 C000 F000 00816         MOVFF   r0x07, r0x14
00CC 00817 _00732_DS_:
00CC 0EFF      00818         MOVLW   0xff
00CE 2600      00819         ADDWF   r0x13, F
00D0 A0D8      00820         BTFSS   STATUS, 0
00D2 0600      00821         DECF    r0x14, F
00D4 5000      00822         MOVF    r0x13, W
00D6 1000      00823         IORWF   r0x14, W
00D8 E000      00824         BZ      _00751_DS_
               00825 ;       .line   1163; MainDemo.c        if ((*d++ = *s++) == '\0')
00DA C000 FFE9 00826         MOVFF   r0x10, FSR0L
00DE C000 FFF3 00827         MOVFF   r0x11, PRODL
00E2 5000      00828         MOVF    r0x12, W
00E4 EC00 F000 00829         CALL    __gptrget1
00E8 6E00      00830         MOVWF   r0x15
00EA 2A00      00831         INCF    r0x10, F
00EC B0D8      00832         BTFSC   STATUS, 0
00EE 2A00      00833         INCF    r0x11, F
00F0 B0D8      00834         BTFSC   STATUS, 0
00F2 2A00      00835         INCF    r0x12, F
00F4 C000 FFE5 00836         MOVFF   r0x15, POSTDEC1
00F8 C000 FFE9 00837         MOVFF   r0x00, FSR0L
00FC C000 FFF3 00838         MOVFF   r0x01, PRODL
0100 5000      00839         MOVF    r0x02, W
0102 EC00 F000 00840         CALL    __gptrput1
0106 2A00      00841         INCF    r0x00, F
0108 B0D8      00842         BTFSC   STATUS, 0
010A 2A00      00843         INCF    r0x01, F
010C B0D8      00844         BTFSC   STATUS, 0
010E 2A00      00845         INCF    r0x02, F
0110 5000      00846         MOVF    r0x15, W
0112 E100      00847         BNZ     _00732_DS_
0114 00848 _00751_DS_:
               00849 ;       .line   1164; MainDemo.c        break;
0114 C000 F000 00850         MOVFF   r0x10, r0x0b
0118 C000 F000 00851         MOVFF   r0x11, r0x0c
011C C000 F000 00852         MOVFF   r0x12, r0x0d
0120 C000 F000 00853         MOVFF   r0x00, r0x08
0124 C000 F000 00854         MOVFF   r0x01, r0x09
0128 C000 F000 00855         MOVFF   r0x02, r0x0a
012C C000 F000 00856         MOVFF   r0x13, r0x0e
0130 C000 F000 00857         MOVFF   r0x14, r0x0f
0134 00858 _00736_DS_:
               00859 ;       .line   1169; MainDemo.c        if (n == 0)
0134 5000      00860         MOVF    r0x0e, W
0136 1000      00861         IORWF   r0x0f, W
0138 E100      00862         BNZ     _00743_DS_
               00863 ;       .line   1171; MainDemo.c        if (siz != 0)
013A 5000      00864         MOVF    r0x06, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
013C 1000      00865         IORWF   r0x07, W
013E E000      00866         BZ      _00750_DS_
               00867 ;       .line   1172; MainDemo.c        *d = '\0';          /* NUL-terminate dst */
0140 0E00      00868         MOVLW   0x00
0142 6EE5      00869         MOVWF   POSTDEC1
0144 C000 FFE9 00870         MOVFF   r0x08, FSR0L
0148 C000 FFF3 00871         MOVFF   r0x09, PRODL
014C 5000      00872         MOVF    r0x0a, W
014E EC00 F000 00873         CALL    __gptrput1
0152 00874 _00750_DS_:
               00875 ;       .line   1173; MainDemo.c        while (*s++)
0152 C000 F000 00876         MOVFF   r0x0b, r0x00
0156 C000 F000 00877         MOVFF   r0x0c, r0x01
015A C000 F000 00878         MOVFF   r0x0d, r0x02
015E 00879 _00739_DS_:
015E C000 FFE9 00880         MOVFF   r0x00, FSR0L
0162 C000 FFF3 00881         MOVFF   r0x01, PRODL
0166 5000      00882         MOVF    r0x02, W
0168 EC00 F000 00883         CALL    __gptrget1
016C 6E00      00884         MOVWF   r0x06
016E 2A00      00885         INCF    r0x00, F
0170 B0D8      00886         BTFSC   STATUS, 0
0172 2A00      00887         INCF    r0x01, F
0174 B0D8      00888         BTFSC   STATUS, 0
0176 2A00      00889         INCF    r0x02, F
0178 5000      00890         MOVF    r0x06, W
017A E100      00891         BNZ     _00739_DS_
017C C000 F000 00892         MOVFF   r0x00, r0x0b
0180 C000 F000 00893         MOVFF   r0x01, r0x0c
0184 C000 F000 00894         MOVFF   r0x02, r0x0d
0188 00895 _00743_DS_:
               00896 ;       .line   1177; MainDemo.c        return (s - src - 1);       /* count does not include NUL */
0188 5000      00897         MOVF    r0x03, W
018A 5C00      00898         SUBWF   r0x0b, W
018C 6E00      00899         MOVWF   r0x03
018E 5000      00900         MOVF    r0x04, W
0190 5800      00901         SUBWFB  r0x0c, W
0192 6E00      00902         MOVWF   r0x04
0194 0EFF      00903         MOVLW   0xff
0196 2600      00904         ADDWF   r0x03, F
0198 A0D8      00905         BTFSS   STATUS, 0
019A 0600      00906         DECF    r0x04, F
019C C000 FFF3 00907         MOVFF   r0x04, PRODL
01A0 5000      00908         MOVF    r0x03, W
01A2 CFE4 F000 00909         MOVFF   PREINC1, r0x15
01A6 CFE4 F000 00910         MOVFF   PREINC1, r0x14
01AA CFE4 F000 00911         MOVFF   PREINC1, r0x13
01AE CFE4 F000 00912         MOVFF   PREINC1, r0x12
01B2 CFE4 F000 00913         MOVFF   PREINC1, r0x11
01B6 CFE4 F000 00914         MOVFF   PREINC1, r0x10
01BA CFE4 F000 00915         MOVFF   PREINC1, r0x0f
01BE CFE4 F000 00916         MOVFF   PREINC1, r0x0e
01C2 CFE4 F000 00917         MOVFF   PREINC1, r0x0d
01C6 CFE4 F000 00918         MOVFF   PREINC1, r0x0c
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01CA CFE4 F000 00919         MOVFF   PREINC1, r0x0b
01CE CFE4 F000 00920         MOVFF   PREINC1, r0x0a
01D2 CFE4 F000 00921         MOVFF   PREINC1, r0x09
01D6 CFE4 F000 00922         MOVFF   PREINC1, r0x08
01DA CFE4 F000 00923         MOVFF   PREINC1, r0x07
01DE CFE4 F000 00924         MOVFF   PREINC1, r0x06
01E2 CFE4 F000 00925         MOVFF   PREINC1, r0x05
01E6 CFE4 F000 00926         MOVFF   PREINC1, r0x04
01EA CFE4 F000 00927         MOVFF   PREINC1, r0x03
01EE CFE4 F000 00928         MOVFF   PREINC1, r0x02
01F2 CFE4 F000 00929         MOVFF   PREINC1, r0x01
01F6 CFE4 F000 00930         MOVFF   PREINC1, r0x00
01FA CFE4 FFD9 00931         MOVFF   PREINC1, FSR2L
01FE 0012      00932         RETURN  
               00933 
               00934 ; ; Starting pCode block
               00935 S_MainDemo__InitAppConfig       code
0000 00936 _InitAppConfig:
               00937 ;       .line   1081; MainDemo.c        static void InitAppConfig(void)
0000 CFD9 FFE5 00938         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00939         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00940         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00941         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00942         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00943         MOVFF   r0x03, POSTDEC1
0018 0000      00944         BANKSEL (_AppConfig + 44)
               00945 ;       .line   1083; MainDemo.c        AppConfig.Flags.bIsDHCPEnabled = TRUE;
001A 8D00      00946         BSF     (_AppConfig + 44), 6, B
001C 0000      00947         BANKSEL (_AppConfig + 44)
               00948 ;       .line   1084; MainDemo.c        AppConfig.Flags.bInConfigMode = TRUE;
001E 8F00      00949         BSF     (_AppConfig + 44), 7, B
0020 0000      00950         BANKSEL (_AppConfig + 45)
               00951 ;       .line   1088; MainDemo.c        AppConfig.MyMACAddr.v[0] = 0;
0022 6B00      00952         CLRF    (_AppConfig + 45), B
               00953 ;       .line   1089; MainDemo.c        AppConfig.MyMACAddr.v[1] = 0x04;
0024 0E04      00954         MOVLW   0x04
0026 0000      00955         BANKSEL (_AppConfig + 46)
0028 6F00      00956         MOVWF   (_AppConfig + 46), B
               00957 ;       .line   1090; MainDemo.c        AppConfig.MyMACAddr.v[2] = 0xA3;
002A 0EA3      00958         MOVLW   0xa3
002C 0000      00959         BANKSEL (_AppConfig + 47)
002E 6F00      00960         MOVWF   (_AppConfig + 47), B
               00961 ;       .line   1091; MainDemo.c        AppConfig.MyMACAddr.v[3] = 0x01;
0030 0E01      00962         MOVLW   0x01
0032 0000      00963         BANKSEL (_AppConfig + 48)
0034 6F00      00964         MOVWF   (_AppConfig + 48), B
               00965 ;       .line   1092; MainDemo.c        AppConfig.MyMACAddr.v[4] = 0x02;
0036 0E02      00966         MOVLW   0x02
0038 0000      00967         BANKSEL (_AppConfig + 49)
003A 6F00      00968         MOVWF   (_AppConfig + 49), B
               00969 ;       .line   1093; MainDemo.c        AppConfig.MyMACAddr.v[5] = 0x03;
003C 0E03      00970         MOVLW   0x03
003E 0000      00971         BANKSEL (_AppConfig + 50)
0040 6F00      00972         MOVWF   (_AppConfig + 50), B
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00973 ;       .line   1096; MainDemo.c        AppConfig.MyIPAddr.Val = MY_DEFAULT_IP_ADDR_BYTE1 | 
0042 0EC0      00974         MOVLW   0xc0
0044 0000      00975         BANKSEL _AppConfig
0046 6F00      00976         MOVWF   _AppConfig, B
0048 0EA8      00977         MOVLW   0xa8
004A 0000      00978         BANKSEL (_AppConfig + 1)
004C 6F00      00979         MOVWF   (_AppConfig + 1), B
004E 0E61      00980         MOVLW   0x61
0050 0000      00981         BANKSEL (_AppConfig + 2)
0052 6F00      00982         MOVWF   (_AppConfig + 2), B
0054 0E3C      00983         MOVLW   0x3c
0056 0000      00984         BANKSEL (_AppConfig + 3)
0058 6F00      00985         MOVWF   (_AppConfig + 3), B
               00986 ;       .line   1099; MainDemo.c        AppConfig.DefaultIPAddr.Val = AppConfig.MyIPAddr.Val;
005A C000 F000 00987         MOVFF   _AppConfig, r0x00
005E C000 F000 00988         MOVFF   (_AppConfig + 1), r0x01
0062 C000 F000 00989         MOVFF   (_AppConfig + 2), r0x02
0066 C000 F000 00990         MOVFF   (_AppConfig + 3), r0x03
006A 5000      00991         MOVF    r0x00, W
006C 0000      00992         BANKSEL (_AppConfig + 20)
006E 6F00      00993         MOVWF   (_AppConfig + 20), B
0070 5000      00994         MOVF    r0x01, W
0072 0000      00995         BANKSEL (_AppConfig + 21)
0074 6F00      00996         MOVWF   (_AppConfig + 21), B
0076 5000      00997         MOVF    r0x02, W
0078 0000      00998         BANKSEL (_AppConfig + 22)
007A 6F00      00999         MOVWF   (_AppConfig + 22), B
007C 5000      01000         MOVF    r0x03, W
007E 0000      01001         BANKSEL (_AppConfig + 23)
0080 6F00      01002         MOVWF   (_AppConfig + 23), B
0082 0000      01003         BANKSEL (_AppConfig + 4)
               01004 ;       .line   1100; MainDemo.c        AppConfig.MyMask.Val = MY_DEFAULT_MASK_BYTE1 | 
0084 6900      01005         SETF    (_AppConfig + 4), B
0086 0000      01006         BANKSEL (_AppConfig + 5)
0088 6900      01007         SETF    (_AppConfig + 5), B
008A 0000      01008         BANKSEL (_AppConfig + 6)
008C 6900      01009         SETF    (_AppConfig + 6), B
008E 0000      01010         BANKSEL (_AppConfig + 7)
0090 6B00      01011         CLRF    (_AppConfig + 7), B
               01012 ;       .line   1103; MainDemo.c        AppConfig.DefaultMask.Val = AppConfig.MyMask.Val;
0092 C000 F000 01013         MOVFF   (_AppConfig + 4), r0x00
0096 C000 F000 01014         MOVFF   (_AppConfig + 5), r0x01
009A C000 F000 01015         MOVFF   (_AppConfig + 6), r0x02
009E C000 F000 01016         MOVFF   (_AppConfig + 7), r0x03
00A2 5000      01017         MOVF    r0x00, W
00A4 0000      01018         BANKSEL (_AppConfig + 24)
00A6 6F00      01019         MOVWF   (_AppConfig + 24), B
00A8 5000      01020         MOVF    r0x01, W
00AA 0000      01021         BANKSEL (_AppConfig + 25)
00AC 6F00      01022         MOVWF   (_AppConfig + 25), B
00AE 5000      01023         MOVF    r0x02, W
00B0 0000      01024         BANKSEL (_AppConfig + 26)
00B2 6F00      01025         MOVWF   (_AppConfig + 26), B
00B4 5000      01026         MOVF    r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B6 0000      01027         BANKSEL (_AppConfig + 27)
00B8 6F00      01028         MOVWF   (_AppConfig + 27), B
               01029 ;       .line   1104; MainDemo.c        AppConfig.MyGateway.Val = MY_DEFAULT_GATE_BYTE1 | 
00BA 0EC0      01030         MOVLW   0xc0
00BC 0000      01031         BANKSEL (_AppConfig + 8)
00BE 6F00      01032         MOVWF   (_AppConfig + 8), B
00C0 0EA8      01033         MOVLW   0xa8
00C2 0000      01034         BANKSEL (_AppConfig + 9)
00C4 6F00      01035         MOVWF   (_AppConfig + 9), B
00C6 0E61      01036         MOVLW   0x61
00C8 0000      01037         BANKSEL (_AppConfig + 10)
00CA 6F00      01038         MOVWF   (_AppConfig + 10), B
00CC 0E01      01039         MOVLW   0x01
00CE 0000      01040         BANKSEL (_AppConfig + 11)
00D0 6F00      01041         MOVWF   (_AppConfig + 11), B
               01042 ;       .line   1107; MainDemo.c        AppConfig.PrimaryDNSServer.Val = MY_DEFAULT_PRIMARY_DNS_BYTE1 | 
00D2 0EC0      01043         MOVLW   0xc0
00D4 0000      01044         BANKSEL (_AppConfig + 12)
00D6 6F00      01045         MOVWF   (_AppConfig + 12), B
00D8 0EA8      01046         MOVLW   0xa8
00DA 0000      01047         BANKSEL (_AppConfig + 13)
00DC 6F00      01048         MOVWF   (_AppConfig + 13), B
00DE 0E61      01049         MOVLW   0x61
00E0 0000      01050         BANKSEL (_AppConfig + 14)
00E2 6F00      01051         MOVWF   (_AppConfig + 14), B
00E4 0E01      01052         MOVLW   0x01
00E6 0000      01053         BANKSEL (_AppConfig + 15)
00E8 6F00      01054         MOVWF   (_AppConfig + 15), B
00EA 0000      01055         BANKSEL (_AppConfig + 16)
               01056 ;       .line   1111; MainDemo.c        AppConfig.SecondaryDNSServer.Val = MY_DEFAULT_SECONDARY_DNS_BYTE1 | 
00EC 6B00      01057         CLRF    (_AppConfig + 16), B
00EE 0000      01058         BANKSEL (_AppConfig + 17)
00F0 6B00      01059         CLRF    (_AppConfig + 17), B
00F2 0000      01060         BANKSEL (_AppConfig + 18)
00F4 6B00      01061         CLRF    (_AppConfig + 18), B
00F6 0000      01062         BANKSEL (_AppConfig + 19)
00F8 6B00      01063         CLRF    (_AppConfig + 19), B
00FA CFE4 F000 01064         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01065         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01066         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01067         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01068         MOVFF   PREINC1, FSR2L
010E 0012      01069         RETURN  
               01070 
               01071 ; ; Starting pCode block
               01072 S_MainDemo__InitializeBoard     code
0000 01073 _InitializeBoard:
               01074 ;       .line   1025; MainDemo.c        static void InitializeBoard(void)
0000 CFD9 FFE5 01075         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01076         MOVFF   FSR1L, FSR2L
               01077 ;       .line   1028; MainDemo.c        LED0_TRIS = 0;  //LED0
0008 9000      01078         BCF     _TRISJbits, 0
               01079 ;       .line   1029; MainDemo.c        LED1_TRIS = 0;  //LED1
000A 9200      01080         BCF     _TRISJbits, 1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01081 ;       .line   1030; MainDemo.c        LED2_TRIS = 0;  //LED2
000C 9400      01082         BCF     _TRISJbits, 2
               01083 ;       .line   1031; MainDemo.c        LED3_TRIS = 0;  //LED_LCD1
000E 9A00      01084         BCF     _TRISGbits, 5
               01085 ;       .line   1032; MainDemo.c        LED4_TRIS = 0;  //LED_LCD2
0010 9A00      01086         BCF     _TRISGbits, 5
               01087 ;       .line   1033; MainDemo.c        LED5_TRIS = 0;  //LED5=RELAY1
0012 9E00      01088         BCF     _TRISGbits, 7
               01089 ;       .line   1034; MainDemo.c        LED6_TRIS = 0;  //LED7=RELAY2
0014 9C00      01090         BCF     _TRISGbits, 6
               01091 ;       .line   1039; MainDemo.c        LED_PUT(0x00);  //turn off LED0 - LED2
0016 0EF8      01092         MOVLW   0xf8
0018 1600      01093         ANDWF   _LATJ, F
               01094 ;       .line   1040; MainDemo.c        RELAY_PUT(0x00); //turn relays off to save power
001A 0E3F      01095         MOVLW   0x3f
001C 1600      01096         ANDWF   _LATG, F
               01097 ;       .line   1046; MainDemo.c        OSCTUNE = 0x40;
001E 0E40      01098         MOVLW   0x40
0020 6E00      01099         MOVWF   _OSCTUNE
               01100 ;       .line   1053; MainDemo.c        if(OSCCONbits.IDLEN) //IDLEN = 0x80; 0x02 selects the primary clock
0022 AE00      01101         BTFSS   _OSCCONbits, 7
0024 D000      01102         BRA     _00718_DS_
               01103 ;       .line   1054; MainDemo.c        OSCCON = 0x82;
0026 0E82      01104         MOVLW   0x82
0028 6E00      01105         MOVWF   _OSCCON
002A D000      01106         BRA     _00719_DS_
002C 01107 _00718_DS_:
               01108 ;       .line   1056; MainDemo.c        OSCCON = 0x02;
002C 0E02      01109         MOVLW   0x02
002E 6E00      01110         MOVWF   _OSCCON
0030 01111 _00719_DS_:
               01112 ;       .line   1059; MainDemo.c        RCONbits.IPEN = 1;              // Enable interrupt priorities
0030 8E00      01113         BSF     _RCONbits, 7
               01114 ;       .line   1060; MainDemo.c        INTCONbits.GIEH = 1;
0032 8E00      01115         BSF     _INTCONbits, 7
               01116 ;       .line   1061; MainDemo.c        INTCONbits.GIEL = 1;
0034 8C00      01117         BSF     _INTCONbits, 6
0036 CFE4 FFD9 01118         MOVFF   PREINC1, FSR2L
003A 0012      01119         RETURN  
               01120 
               01121 ; ; Starting pCode block
               01122 S_MainDemo__DisplayIPValue      code
0000 01123 _DisplayIPValue:
               01124 ;       .line   967; MainDemo.c void DisplayIPValue(DWORD IPdw) // 32 bits
0000 CFD9 FFE5 01125         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01126         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01127         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01128         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01129         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01130         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01131         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01132         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01133         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01134         MOVFF   r0x07, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 C000 FFE5 01135         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01136         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01137         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01138         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01139         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 01140         MOVFF   r0x0d, POSTDEC1
0040 0E02      01141         MOVLW   0x02
0042 CFDB F000 01142         MOVFF   PLUSW2, r0x00
0046 0E03      01143         MOVLW   0x03
0048 CFDB F000 01144         MOVFF   PLUSW2, r0x01
004C 0E04      01145         MOVLW   0x04
004E CFDB F000 01146         MOVFF   PLUSW2, r0x02
0052 0E05      01147         MOVLW   0x05
0054 CFDB F000 01148         MOVFF   PLUSW2, r0x03
               01149 ;       .line   975; MainDemo.c BYTE LCDPos=16;  //write on second line of LCD
0058 0E10      01150         MOVLW   0x10
005A 6E00      01151         MOVWF   r0x04
               01152 ;       .line   980; MainDemo.c for(i = 0; i < sizeof(IP_ADDR); i++) //sizeof(IP_ADDR) is 4
005C 6A00      01153         CLRF    r0x05
005E 6A00      01154         CLRF    r0x06
0060 6A00      01155         CLRF    r0x07
0062 01156 _00683_DS_:
0062 0E04      01157         MOVLW   0x04
0064 5C00      01158         SUBWF   r0x05, W
0066 B0D8      01159         BTFSC   STATUS, 0
0068 D000      01160         BRA     _00686_DS_
               01161 ;       .line   983; MainDemo.c IP_field =(WORD)(IPdw>>(i*8))&0xff;      //ML
006A C000 F000 01162         MOVFF   r0x00, r0x08
006E C000 F000 01163         MOVFF   r0x01, r0x09
0072 C000 F000 01164         MOVFF   r0x02, r0x0a
0076 C000 F000 01165         MOVFF   r0x03, r0x0b
007A 5000      01166         MOVF    r0x06, W
007C E000      01167         BZ      _00704_DS_
007E E600      01168         BN      _00707_DS_
0080 6CE8      01169         NEGF    WREG
0082 90D8      01170         BCF     STATUS, 0
0084 01171 _00705_DS_:
0084 3200      01172         RRCF    r0x0b, F
0086 3200      01173         RRCF    r0x0a, F
0088 3200      01174         RRCF    r0x09, F
008A 3200      01175         RRCF    r0x08, F
008C 0F01      01176         ADDLW   0x01
008E E300      01177         BNC     _00705_DS_
0090 D000      01178         BRA     _00704_DS_
0092 01179 _00707_DS_:
0092 90D8      01180         BCF     STATUS, 0
0094 01181 _00706_DS_:
0094 3600      01182         RLCF    r0x08, F
0096 3600      01183         RLCF    r0x09, F
0098 3600      01184         RLCF    r0x0a, F
009A 3600      01185         RLCF    r0x0b, F
009C 0F01      01186         ADDLW   0x01
009E E300      01187         BNC     _00706_DS_
00A0 01188 _00704_DS_:
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A0 6A00      01189         CLRF    r0x09
               01190 ;       .line   984; MainDemo.c uitoa(IP_field, IPDigit, radix);      //ML
00A2 0E0A      01191         MOVLW   0x0a
00A4 6EE5      01192         MOVWF   POSTDEC1
00A6 0E00      01193         MOVLW   HIGH(_DisplayIPValue_IPDigit_1_1)
00A8 6EE5      01194         MOVWF   POSTDEC1
00AA 0E00      01195         MOVLW   LOW(_DisplayIPValue_IPDigit_1_1)
00AC 6EE5      01196         MOVWF   POSTDEC1
00AE 5000      01197         MOVF    r0x09, W
00B0 6EE5      01198         MOVWF   POSTDEC1
00B2 5000      01199         MOVF    r0x08, W
00B4 6EE5      01200         MOVWF   POSTDEC1
00B6 EC00 F000 01201         CALL    _uitoa
00BA 0E05      01202         MOVLW   0x05
00BC 26E1      01203         ADDWF   FSR1L, F
               01204 ;       .line   989; MainDemo.c for(j = 0; j < strlen((char*)IPDigit); j++)
00BE C000 F000 01205         MOVFF   r0x04, r0x08
00C2 6A00      01206         CLRF    r0x09
00C4 01207 _00689_DS_:
00C4 0E00      01208         MOVLW   HIGH(_DisplayIPValue_IPDigit_1_1)
00C6 6E00      01209         MOVWF   r0x0b
00C8 0E00      01210         MOVLW   LOW(_DisplayIPValue_IPDigit_1_1)
00CA 6E00      01211         MOVWF   r0x0a
00CC 0E80      01212         MOVLW   0x80
00CE 6E00      01213         MOVWF   r0x0c
00D0 5000      01214         MOVF    r0x0c, W
00D2 6EE5      01215         MOVWF   POSTDEC1
00D4 5000      01216         MOVF    r0x0b, W
00D6 6EE5      01217         MOVWF   POSTDEC1
00D8 5000      01218         MOVF    r0x0a, W
00DA 6EE5      01219         MOVWF   POSTDEC1
00DC EC00 F000 01220         CALL    _strlen
00E0 6E00      01221         MOVWF   r0x0a
00E2 CFF3 F000 01222         MOVFF   PRODL, r0x0b
00E6 0E03      01223         MOVLW   0x03
00E8 26E1      01224         ADDWF   FSR1L, F
00EA C000 F000 01225         MOVFF   r0x09, r0x0c
00EE 6A00      01226         CLRF    r0x0d
00F0 5000      01227         MOVF    r0x0d, W
00F2 0F80      01228         ADDLW   0x80
00F4 6EF3      01229         MOVWF   PRODL
00F6 5000      01230         MOVF    r0x0b, W
00F8 0F80      01231         ADDLW   0x80
00FA 5CF3      01232         SUBWF   PRODL, W
00FC E100      01233         BNZ     _00709_DS_
00FE 5000      01234         MOVF    r0x0a, W
0100 5C00      01235         SUBWF   r0x0c, W
0102 01236 _00709_DS_:
0102 E200      01237         BC      _00701_DS_
               01238 ;       .line   991; MainDemo.c LCDText[LCDPos++] = IPDigit[j];
0104 C000 F000 01239         MOVFF   r0x08, r0x0a
0108 2A00      01240         INCF    r0x08, F
010A 6A00      01241         CLRF    r0x0b
010C 0E00      01242         MOVLW   LOW(_LCDText)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010E 2600      01243         ADDWF   r0x0a, F
0110 0E00      01244         MOVLW   HIGH(_LCDText)
0112 2200      01245         ADDWFC  r0x0b, F
0114 0E00      01246         MOVLW   LOW(_DisplayIPValue_IPDigit_1_1)
0116 2400      01247         ADDWF   r0x09, W
0118 6E00      01248         MOVWF   r0x0c
011A 6A00      01249         CLRF    r0x0d
011C 0E00      01250         MOVLW   HIGH(_DisplayIPValue_IPDigit_1_1)
011E 2200      01251         ADDWFC  r0x0d, F
0120 C000 FFE9 01252         MOVFF   r0x0c, FSR0L
0124 C000 FFEA 01253         MOVFF   r0x0d, FSR0H
0128 CFEF F000 01254         MOVFF   INDF0, r0x0c
012C C000 FFE9 01255         MOVFF   r0x0a, FSR0L
0130 C000 FFEA 01256         MOVFF   r0x0b, FSR0H
0134 C000 FFEF 01257         MOVFF   r0x0c, INDF0
               01258 ;       .line   989; MainDemo.c for(j = 0; j < strlen((char*)IPDigit); j++)
0138 2A00      01259         INCF    r0x09, F
013A D000      01260         BRA     _00689_DS_
013C 01261 _00701_DS_:
013C C000 F000 01262         MOVFF   r0x08, r0x04
               01263 ;       .line   993; MainDemo.c if(i == sizeof(IP_ADDR)-1)
0140 5000      01264         MOVF    r0x05, W
0142 0A03      01265         XORLW   0x03
0144 E000      01266         BZ      _00686_DS_
               01267 ;       .line   995; MainDemo.c LCDText[LCDPos++] = '.';
0146 2800      01268         INCF    r0x08, W
0148 6E00      01269         MOVWF   r0x04
014A 6A00      01270         CLRF    r0x09
014C 0E00      01271         MOVLW   LOW(_LCDText)
014E 2600      01272         ADDWF   r0x08, F
0150 0E00      01273         MOVLW   HIGH(_LCDText)
0152 2200      01274         ADDWFC  r0x09, F
0154 C000 FFE9 01275         MOVFF   r0x08, FSR0L
0158 C000 FFEA 01276         MOVFF   r0x09, FSR0H
015C 0E2E      01277         MOVLW   0x2e
015E 6EEF      01278         MOVWF   INDF0
               01279 ;       .line   980; MainDemo.c for(i = 0; i < sizeof(IP_ADDR); i++) //sizeof(IP_ADDR) is 4
0160 0E08      01280         MOVLW   0x08
0162 2600      01281         ADDWF   r0x06, F
0164 B0D8      01282         BTFSC   STATUS, 0
0166 2A00      01283         INCF    r0x07, F
0168 2A00      01284         INCF    r0x05, F
016A D000      01285         BRA     _00683_DS_
016C 01286 _00686_DS_:
               01287 ;       .line   998; MainDemo.c if(LCDPos < 32u)
016C C000 F000 01288         MOVFF   r0x04, r0x00
0170 6A00      01289         CLRF    r0x01
0172 0E00      01290         MOVLW   0x00
0174 5C00      01291         SUBWF   r0x01, W
0176 E100      01292         BNZ     _00712_DS_
0178 0E20      01293         MOVLW   0x20
017A 5C00      01294         SUBWF   r0x00, W
017C 01295 _00712_DS_:
017C E200      01296         BC      _00688_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01297 ;       .line   999; MainDemo.c LCDText[LCDPos] = 0;
017E 6A00      01298         CLRF    r0x00
0180 0E00      01299         MOVLW   LOW(_LCDText)
0182 2600      01300         ADDWF   r0x04, F
0184 0E00      01301         MOVLW   HIGH(_LCDText)
0186 2200      01302         ADDWFC  r0x00, F
0188 C000 FFE9 01303         MOVFF   r0x04, FSR0L
018C C000 FFEA 01304         MOVFF   r0x00, FSR0H
0190 0E00      01305         MOVLW   0x00
0192 6EEF      01306         MOVWF   INDF0
0194 01307 _00688_DS_:
               01308 ;       .line   1000; MainDemo.c        LCDUpdate();
0194 EC00 F000 01309         CALL    _LCDUpdate
0198 CFE4 F000 01310         MOVFF   PREINC1, r0x0d
019C CFE4 F000 01311         MOVFF   PREINC1, r0x0c
01A0 CFE4 F000 01312         MOVFF   PREINC1, r0x0b
01A4 CFE4 F000 01313         MOVFF   PREINC1, r0x0a
01A8 CFE4 F000 01314         MOVFF   PREINC1, r0x09
01AC CFE4 F000 01315         MOVFF   PREINC1, r0x08
01B0 CFE4 F000 01316         MOVFF   PREINC1, r0x07
01B4 CFE4 F000 01317         MOVFF   PREINC1, r0x06
01B8 CFE4 F000 01318         MOVFF   PREINC1, r0x05
01BC CFE4 F000 01319         MOVFF   PREINC1, r0x04
01C0 CFE4 F000 01320         MOVFF   PREINC1, r0x03
01C4 CFE4 F000 01321         MOVFF   PREINC1, r0x02
01C8 CFE4 F000 01322         MOVFF   PREINC1, r0x01
01CC CFE4 F000 01323         MOVFF   PREINC1, r0x00
01D0 CFE4 FFD9 01324         MOVFF   PREINC1, FSR2L
01D4 0012      01325         RETURN  
               01326 
               01327 ; ; Starting pCode block
               01328 S_MainDemo__DisplayString       code
0000 01329 _DisplayString:
               01330 ;       .line   951; MainDemo.c void DisplayString(BYTE pos, char* text)
0000 CFD9 FFE5 01331         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01332         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01333         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01334         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01335         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01336         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01337         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01338         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01339         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01340         MOVFF   r0x07, POSTDEC1
0028 0E02      01341         MOVLW   0x02
002A CFDB F000 01342         MOVFF   PLUSW2, r0x00
002E 0E03      01343         MOVLW   0x03
0030 CFDB F000 01344         MOVFF   PLUSW2, r0x01
0034 0E04      01345         MOVLW   0x04
0036 CFDB F000 01346         MOVFF   PLUSW2, r0x02
003A 0E05      01347         MOVLW   0x05
003C CFDB F000 01348         MOVFF   PLUSW2, r0x03
               01349 ;       .line   953; MainDemo.c BYTE l= strlen(text)+1;
0040 5000      01350         MOVF    r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0042 6EE5      01351         MOVWF   POSTDEC1
0044 5000      01352         MOVF    r0x02, W
0046 6EE5      01353         MOVWF   POSTDEC1
0048 5000      01354         MOVF    r0x01, W
004A 6EE5      01355         MOVWF   POSTDEC1
004C EC00 F000 01356         CALL    _strlen
0050 6E00      01357         MOVWF   r0x04
0052 CFF3 F000 01358         MOVFF   PRODL, r0x05
0056 0E03      01359         MOVLW   0x03
0058 26E1      01360         ADDWF   FSR1L, F
005A 2A00      01361         INCF    r0x04, F
               01362 ;       .line   954; MainDemo.c BYTE max= 32-pos;
005C 5000      01363         MOVF    r0x00, W
005E 0820      01364         SUBLW   0x20
0060 6E00      01365         MOVWF   r0x05
               01366 ;       .line   955; MainDemo.c strlcpy((char*)&LCDText[pos], text,(l<max)?l:max );
0062 6A00      01367         CLRF    r0x06
0064 0E00      01368         MOVLW   LOW(_LCDText)
0066 2600      01369         ADDWF   r0x00, F
0068 0E00      01370         MOVLW   HIGH(_LCDText)
006A 2200      01371         ADDWFC  r0x06, F
006C 5000      01372         MOVF    r0x06, W
006E 6E00      01373         MOVWF   r0x06
0070 5000      01374         MOVF    r0x00, W
0072 6E00      01375         MOVWF   r0x00
0074 0E80      01376         MOVLW   0x80
0076 6E00      01377         MOVWF   r0x07
0078 5000      01378         MOVF    r0x05, W
007A 5C00      01379         SUBWF   r0x04, W
007C E300      01380         BNC     _00674_DS_
007E C000 F000 01381         MOVFF   r0x05, r0x04
0082 01382 _00674_DS_:
0082 6A00      01383         CLRF    r0x05
0084 5000      01384         MOVF    r0x05, W
0086 6EE5      01385         MOVWF   POSTDEC1
0088 5000      01386         MOVF    r0x04, W
008A 6EE5      01387         MOVWF   POSTDEC1
008C 5000      01388         MOVF    r0x03, W
008E 6EE5      01389         MOVWF   POSTDEC1
0090 5000      01390         MOVF    r0x02, W
0092 6EE5      01391         MOVWF   POSTDEC1
0094 5000      01392         MOVF    r0x01, W
0096 6EE5      01393         MOVWF   POSTDEC1
0098 5000      01394         MOVF    r0x07, W
009A 6EE5      01395         MOVWF   POSTDEC1
009C 5000      01396         MOVF    r0x06, W
009E 6EE5      01397         MOVWF   POSTDEC1
00A0 5000      01398         MOVF    r0x00, W
00A2 6EE5      01399         MOVWF   POSTDEC1
00A4 EC00 F000 01400         CALL    _strlcpy
00A8 0E08      01401         MOVLW   0x08
00AA 26E1      01402         ADDWF   FSR1L, F
               01403 ;       .line   956; MainDemo.c LCDUpdate();
00AC EC00 F000 01404         CALL    _LCDUpdate
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 CFE4 F000 01405         MOVFF   PREINC1, r0x07
00B4 CFE4 F000 01406         MOVFF   PREINC1, r0x06
00B8 CFE4 F000 01407         MOVFF   PREINC1, r0x05
00BC CFE4 F000 01408         MOVFF   PREINC1, r0x04
00C0 CFE4 F000 01409         MOVFF   PREINC1, r0x03
00C4 CFE4 F000 01410         MOVFF   PREINC1, r0x02
00C8 CFE4 F000 01411         MOVFF   PREINC1, r0x01
00CC CFE4 F000 01412         MOVFF   PREINC1, r0x00
00D0 CFE4 FFD9 01413         MOVFF   PREINC1, FSR2L
00D4 0012      01414         RETURN  
               01415 
               01416 ; ; Starting pCode block
               01417 S_MainDemo__DisplayWORD code
0000 01418 _DisplayWORD:
               01419 ;       .line   929; MainDemo.c void DisplayWORD(BYTE pos, WORD w) //WORD is a 16 bits unsigned
0000 CFD9 FFE5 01420         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01421         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01422         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01423         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01424         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01425         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01426         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01427         MOVFF   r0x05, POSTDEC1
0020 0E02      01428         MOVLW   0x02
0022 CFDB F000 01429         MOVFF   PLUSW2, r0x00
0026 0E03      01430         MOVLW   0x03
0028 CFDB F000 01431         MOVFF   PLUSW2, r0x01
002C 0E04      01432         MOVLW   0x04
002E CFDB F000 01433         MOVFF   PLUSW2, r0x02
               01434 ;       .line   937; MainDemo.c ultoa(w, WDigit, radix);      
0032 6A00      01435         CLRF    r0x03
0034 6A00      01436         CLRF    r0x04
0036 0E0A      01437         MOVLW   0x0a
0038 6EE5      01438         MOVWF   POSTDEC1
003A 0E00      01439         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
003C 6EE5      01440         MOVWF   POSTDEC1
003E 0E00      01441         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0040 6EE5      01442         MOVWF   POSTDEC1
0042 5000      01443         MOVF    r0x04, W
0044 6EE5      01444         MOVWF   POSTDEC1
0046 5000      01445         MOVF    r0x03, W
0048 6EE5      01446         MOVWF   POSTDEC1
004A 5000      01447         MOVF    r0x02, W
004C 6EE5      01448         MOVWF   POSTDEC1
004E 5000      01449         MOVF    r0x01, W
0050 6EE5      01450         MOVWF   POSTDEC1
0052 EC00 F000 01451         CALL    _ultoa
0056 0E07      01452         MOVLW   0x07
0058 26E1      01453         ADDWF   FSR1L, F
               01454 ;       .line   938; MainDemo.c for(j = 0; j < strlen((char*)WDigit); j++)
005A 6A00      01455         CLRF    r0x01
005C 01456 _00655_DS_:
005C 0E00      01457         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
005E 6E00      01458         MOVWF   r0x03
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0060 0E00      01459         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0062 6E00      01460         MOVWF   r0x02
0064 0E80      01461         MOVLW   0x80
0066 6E00      01462         MOVWF   r0x04
0068 5000      01463         MOVF    r0x04, W
006A 6EE5      01464         MOVWF   POSTDEC1
006C 5000      01465         MOVF    r0x03, W
006E 6EE5      01466         MOVWF   POSTDEC1
0070 5000      01467         MOVF    r0x02, W
0072 6EE5      01468         MOVWF   POSTDEC1
0074 EC00 F000 01469         CALL    _strlen
0078 6E00      01470         MOVWF   r0x02
007A CFF3 F000 01471         MOVFF   PRODL, r0x03
007E 0E03      01472         MOVLW   0x03
0080 26E1      01473         ADDWF   FSR1L, F
0082 C000 F000 01474         MOVFF   r0x01, r0x04
0086 6A00      01475         CLRF    r0x05
0088 5000      01476         MOVF    r0x05, W
008A 0F80      01477         ADDLW   0x80
008C 6EF3      01478         MOVWF   PRODL
008E 5000      01479         MOVF    r0x03, W
0090 0F80      01480         ADDLW   0x80
0092 5CF3      01481         SUBWF   PRODL, W
0094 E100      01482         BNZ     _00665_DS_
0096 5000      01483         MOVF    r0x02, W
0098 5C00      01484         SUBWF   r0x04, W
009A 01485 _00665_DS_:
009A E200      01486         BC      _00658_DS_
               01487 ;       .line   940; MainDemo.c LCDText[LCDPos++] = WDigit[j];
009C C000 F000 01488         MOVFF   r0x00, r0x02
00A0 2A00      01489         INCF    r0x00, F
00A2 6A00      01490         CLRF    r0x03
00A4 0E00      01491         MOVLW   LOW(_LCDText)
00A6 2600      01492         ADDWF   r0x02, F
00A8 0E00      01493         MOVLW   HIGH(_LCDText)
00AA 2200      01494         ADDWFC  r0x03, F
00AC 0E00      01495         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
00AE 2400      01496         ADDWF   r0x01, W
00B0 6E00      01497         MOVWF   r0x04
00B2 6A00      01498         CLRF    r0x05
00B4 0E00      01499         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
00B6 2200      01500         ADDWFC  r0x05, F
00B8 C000 FFE9 01501         MOVFF   r0x04, FSR0L
00BC C000 FFEA 01502         MOVFF   r0x05, FSR0H
00C0 CFEF F000 01503         MOVFF   INDF0, r0x04
00C4 C000 FFE9 01504         MOVFF   r0x02, FSR0L
00C8 C000 FFEA 01505         MOVFF   r0x03, FSR0H
00CC C000 FFEF 01506         MOVFF   r0x04, INDF0
               01507 ;       .line   938; MainDemo.c for(j = 0; j < strlen((char*)WDigit); j++)
00D0 2A00      01508         INCF    r0x01, F
00D2 D000      01509         BRA     _00655_DS_
00D4 01510 _00658_DS_:
               01511 ;       .line   942; MainDemo.c if(LCDPos < 32u)
00D4 C000 F000 01512         MOVFF   r0x00, r0x01
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D8 6A00      01513         CLRF    r0x02
00DA 0E00      01514         MOVLW   0x00
00DC 5C00      01515         SUBWF   r0x02, W
00DE E100      01516         BNZ     _00666_DS_
00E0 0E20      01517         MOVLW   0x20
00E2 5C00      01518         SUBWF   r0x01, W
00E4 01519 _00666_DS_:
00E4 E200      01520         BC      _00654_DS_
               01521 ;       .line   943; MainDemo.c LCDText[LCDPos] = 0;
00E6 6A00      01522         CLRF    r0x01
00E8 0E00      01523         MOVLW   LOW(_LCDText)
00EA 2600      01524         ADDWF   r0x00, F
00EC 0E00      01525         MOVLW   HIGH(_LCDText)
00EE 2200      01526         ADDWFC  r0x01, F
00F0 C000 FFE9 01527         MOVFF   r0x00, FSR0L
00F4 C000 FFEA 01528         MOVFF   r0x01, FSR0H
00F8 0E00      01529         MOVLW   0x00
00FA 6EEF      01530         MOVWF   INDF0
00FC 01531 _00654_DS_:
               01532 ;       .line   944; MainDemo.c LCDUpdate();
00FC EC00 F000 01533         CALL    _LCDUpdate
0100 CFE4 F000 01534         MOVFF   PREINC1, r0x05
0104 CFE4 F000 01535         MOVFF   PREINC1, r0x04
0108 CFE4 F000 01536         MOVFF   PREINC1, r0x03
010C CFE4 F000 01537         MOVFF   PREINC1, r0x02
0110 CFE4 F000 01538         MOVFF   PREINC1, r0x01
0114 CFE4 F000 01539         MOVFF   PREINC1, r0x00
0118 CFE4 FFD9 01540         MOVFF   PREINC1, FSR2L
011C 0012      01541         RETURN  
               01542 
               01543 ; ; Starting pCode block
               01544 S_MainDemo__doDhcpOperations    code
0000 01545 _doDhcpOperations:
               01546 ;       .line   841; MainDemo.c void doDhcpOperations(){
0000 CFD9 FFE5 01547         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01548         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01549         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01550         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01551         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01552         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01553         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01554         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01555         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01556         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01557         MOVFF   r0x08, POSTDEC1
               01558 ;       .line   850; MainDemo.c setDhcpIp(&server_ip);
002C 0E00      01559         MOVLW   HIGH(_doDhcpOperations_server_ip_1_1)
002E 6E00      01560         MOVWF   r0x01
0030 0E00      01561         MOVLW   LOW(_doDhcpOperations_server_ip_1_1)
0032 6E00      01562         MOVWF   r0x00
0034 0E80      01563         MOVLW   0x80
0036 6E00      01564         MOVWF   r0x02
0038 5000      01565         MOVF    r0x02, W
003A 6EE5      01566         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
003C 5000      01567         MOVF    r0x01, W
003E 6EE5      01568         MOVWF   POSTDEC1
0040 5000      01569         MOVF    r0x00, W
0042 6EE5      01570         MOVWF   POSTDEC1
0044 EC00 F000 01571         CALL    _setDhcpIp
0048 0E03      01572         MOVLW   0x03
004A 26E1      01573         ADDWF   FSR1L, F
               01574 ;       .line   854; MainDemo.c send_s_socket = UDPOpen(0, NULL, 67);
004C 0E00      01575         MOVLW   0x00
004E 6EE5      01576         MOVWF   POSTDEC1
0050 0E43      01577         MOVLW   0x43
0052 6EE5      01578         MOVWF   POSTDEC1
0054 0E00      01579         MOVLW   0x00
0056 6EE5      01580         MOVWF   POSTDEC1
0058 0E00      01581         MOVLW   0x00
005A 6EE5      01582         MOVWF   POSTDEC1
005C 0E00      01583         MOVLW   0x00
005E 6EE5      01584         MOVWF   POSTDEC1
0060 0E00      01585         MOVLW   0x00
0062 6EE5      01586         MOVWF   POSTDEC1
0064 0E00      01587         MOVLW   0x00
0066 6EE5      01588         MOVWF   POSTDEC1
0068 EC00 F000 01589         CALL    _UDPOpen
006C 6E00      01590         MOVWF   r0x00
006E 0E07      01591         MOVLW   0x07
0070 26E1      01592         ADDWF   FSR1L, F
0072 C000 F000 01593         MOVFF   r0x00, _doDhcpOperations_send_s_socket_1_1
               01594 ;       .line   855; MainDemo.c send_c_socket = UDPOpen(0, NULL, 68);
0076 0E00      01595         MOVLW   0x00
0078 6EE5      01596         MOVWF   POSTDEC1
007A 0E44      01597         MOVLW   0x44
007C 6EE5      01598         MOVWF   POSTDEC1
007E 0E00      01599         MOVLW   0x00
0080 6EE5      01600         MOVWF   POSTDEC1
0082 0E00      01601         MOVLW   0x00
0084 6EE5      01602         MOVWF   POSTDEC1
0086 0E00      01603         MOVLW   0x00
0088 6EE5      01604         MOVWF   POSTDEC1
008A 0E00      01605         MOVLW   0x00
008C 6EE5      01606         MOVWF   POSTDEC1
008E 0E00      01607         MOVLW   0x00
0090 6EE5      01608         MOVWF   POSTDEC1
0092 EC00 F000 01609         CALL    _UDPOpen
0096 6E00      01610         MOVWF   r0x01
0098 0E07      01611         MOVLW   0x07
009A 26E1      01612         ADDWF   FSR1L, F
009C C000 F000 01613         MOVFF   r0x01, _doDhcpOperations_send_c_socket_1_1
               01614 ;       .line   856; MainDemo.c receiver_socket = UDPOpen(67, NULL, 0);
00A0 0E00      01615         MOVLW   0x00
00A2 6EE5      01616         MOVWF   POSTDEC1
00A4 0E00      01617         MOVLW   0x00
00A6 6EE5      01618         MOVWF   POSTDEC1
00A8 0E00      01619         MOVLW   0x00
00AA 6EE5      01620         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AC 0E00      01621         MOVLW   0x00
00AE 6EE5      01622         MOVWF   POSTDEC1
00B0 0E00      01623         MOVLW   0x00
00B2 6EE5      01624         MOVWF   POSTDEC1
00B4 0E00      01625         MOVLW   0x00
00B6 6EE5      01626         MOVWF   POSTDEC1
00B8 0E43      01627         MOVLW   0x43
00BA 6EE5      01628         MOVWF   POSTDEC1
00BC EC00 F000 01629         CALL    _UDPOpen
00C0 6E00      01630         MOVWF   r0x02
00C2 0E07      01631         MOVLW   0x07
00C4 26E1      01632         ADDWF   FSR1L, F
00C6 C000 F000 01633         MOVFF   r0x02, _doDhcpOperations_receiver_socket_1_1
               01634 ;       .line   858; MainDemo.c if(send_s_socket == INVALID_UDP_SOCKET ||
00CA 6A00      01635         CLRF    r0x03
00CC 5000      01636         MOVF    r0x00, W
00CE 0AFF      01637         XORLW   0xff
00D0 E100      01638         BNZ     _00633_DS_
00D2 5000      01639         MOVF    r0x03, W
00D4 E000      01640         BZ      _00602_DS_
00D6 01641 _00633_DS_:
               01642 ;       .line   859; MainDemo.c receiver_socket == INVALID_UDP_SOCKET ||
00D6 6A00      01643         CLRF    r0x00
00D8 5000      01644         MOVF    r0x02, W
00DA 0AFF      01645         XORLW   0xff
00DC E100      01646         BNZ     _00635_DS_
00DE 5000      01647         MOVF    r0x00, W
00E0 E000      01648         BZ      _00602_DS_
00E2 01649 _00635_DS_:
               01650 ;       .line   860; MainDemo.c send_c_socket == INVALID_UDP_SOCKET){
00E2 6A00      01651         CLRF    r0x00
00E4 5000      01652         MOVF    r0x01, W
00E6 0AFF      01653         XORLW   0xff
00E8 E100      01654         BNZ     _00636_DS_
00EA 5000      01655         MOVF    r0x00, W
00EC E000      01656         BZ      _00602_DS_
00EE 01657 _00636_DS_:
00EE D000      01658         BRA     _00603_DS_
00F0 01659 _00602_DS_:
               01660 ;       .line   861; MainDemo.c DisplayString (0,"Fail to create  socket");
00F0 0E00      01661         MOVLW   UPPER(__str_7)
00F2 6EE5      01662         MOVWF   POSTDEC1
00F4 0E00      01663         MOVLW   HIGH(__str_7)
00F6 6EE5      01664         MOVWF   POSTDEC1
00F8 0E00      01665         MOVLW   LOW(__str_7)
00FA 6EE5      01666         MOVWF   POSTDEC1
00FC 0E00      01667         MOVLW   0x00
00FE 6EE5      01668         MOVWF   POSTDEC1
0100 EC00 F000 01669         CALL    _DisplayString
0104 0E04      01670         MOVLW   0x04
0106 26E1      01671         ADDWF   FSR1L, F
               01672 ;       .line   862; MainDemo.c DelayMs(900);
0108 0E90      01673         MOVLW   0x90
010A 6E00      01674         MOVWF   r0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010C 0E58      01675         MOVLW   0x58
010E 6E00      01676         MOVWF   r0x01
0110 0E06      01677         MOVLW   0x06
0112 6E00      01678         MOVWF   r0x02
0114 6A00      01679         CLRF    r0x03
0116 01680 _00596_DS_:
0116 C000 F000 01681         MOVFF   r0x00, r0x04
011A C000 F000 01682         MOVFF   r0x01, r0x05
011E C000 F000 01683         MOVFF   r0x02, r0x06
0122 C000 F000 01684         MOVFF   r0x03, r0x07
0126 0EFF      01685         MOVLW   0xff
0128 2600      01686         ADDWF   r0x00, F
012A 0EFF      01687         MOVLW   0xff
012C 2200      01688         ADDWFC  r0x01, F
012E 0EFF      01689         MOVLW   0xff
0130 2200      01690         ADDWFC  r0x02, F
0132 0EFF      01691         MOVLW   0xff
0134 2200      01692         ADDWFC  r0x03, F
0136 5000      01693         MOVF    r0x04, W
0138 1000      01694         IORWF   r0x05, W
013A 1000      01695         IORWF   r0x06, W
013C 1000      01696         IORWF   r0x07, W
013E E100      01697         BNZ     _00596_DS_
               01698 ;       .line   863; MainDemo.c return;
0140 D000      01699         BRA     _00620_DS_
0142 01700 _00603_DS_:
               01701 ;       .line   866; MainDemo.c DisplayString (0,"Entering Task Cycle"); // debugging
0142 0E00      01702         MOVLW   UPPER(__str_8)
0144 6EE5      01703         MOVWF   POSTDEC1
0146 0E00      01704         MOVLW   HIGH(__str_8)
0148 6EE5      01705         MOVWF   POSTDEC1
014A 0E00      01706         MOVLW   LOW(__str_8)
014C 6EE5      01707         MOVWF   POSTDEC1
014E 0E00      01708         MOVLW   0x00
0150 6EE5      01709         MOVWF   POSTDEC1
0152 EC00 F000 01710         CALL    _DisplayString
0156 0E04      01711         MOVLW   0x04
0158 26E1      01712         ADDWF   FSR1L, F
               01713 ;       .line   867; MainDemo.c DelayMs(900);
015A 0E90      01714         MOVLW   0x90
015C 6E00      01715         MOVWF   r0x00
015E 0E58      01716         MOVLW   0x58
0160 6E00      01717         MOVWF   r0x01
0162 0E06      01718         MOVLW   0x06
0164 6E00      01719         MOVWF   r0x02
0166 6A00      01720         CLRF    r0x03
0168 01721 _00606_DS_:
0168 C000 F000 01722         MOVFF   r0x00, r0x04
016C C000 F000 01723         MOVFF   r0x01, r0x05
0170 C000 F000 01724         MOVFF   r0x02, r0x06
0174 C000 F000 01725         MOVFF   r0x03, r0x07
0178 0EFF      01726         MOVLW   0xff
017A 2600      01727         ADDWF   r0x00, F
017C 0EFF      01728         MOVLW   0xff
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
017E 2200      01729         ADDWFC  r0x01, F
0180 0EFF      01730         MOVLW   0xff
0182 2200      01731         ADDWFC  r0x02, F
0184 0EFF      01732         MOVLW   0xff
0186 2200      01733         ADDWFC  r0x03, F
0188 5000      01734         MOVF    r0x04, W
018A 1000      01735         IORWF   r0x05, W
018C 1000      01736         IORWF   r0x06, W
018E 1000      01737         IORWF   r0x07, W
0190 E100      01738         BNZ     _00606_DS_
0192 01739 _00618_DS_:
               01740 ;       .line   869; MainDemo.c StackTaskModified(&ip_last_pckt);       
0192 0E00      01741         MOVLW   HIGH(_doDhcpOperations_ip_last_pckt_1_1)
0194 6E00      01742         MOVWF   r0x01
0196 0E00      01743         MOVLW   LOW(_doDhcpOperations_ip_last_pckt_1_1)
0198 6E00      01744         MOVWF   r0x00
019A 0E80      01745         MOVLW   0x80
019C 6E00      01746         MOVWF   r0x02
019E 5000      01747         MOVF    r0x02, W
01A0 6EE5      01748         MOVWF   POSTDEC1
01A2 5000      01749         MOVF    r0x01, W
01A4 6EE5      01750         MOVWF   POSTDEC1
01A6 5000      01751         MOVF    r0x00, W
01A8 6EE5      01752         MOVWF   POSTDEC1
01AA EC00 F000 01753         CALL    _StackTaskModified
01AE 0E03      01754         MOVLW   0x03
01B0 26E1      01755         ADDWF   FSR1L, F
               01756 ;       .line   870; MainDemo.c timeCheck(&send_s_socket);
01B2 0E00      01757         MOVLW   HIGH(_doDhcpOperations_send_s_socket_1_1)
01B4 6E00      01758         MOVWF   r0x01
01B6 0E00      01759         MOVLW   LOW(_doDhcpOperations_send_s_socket_1_1)
01B8 6E00      01760         MOVWF   r0x00
01BA 0E80      01761         MOVLW   0x80
01BC 6E00      01762         MOVWF   r0x02
01BE 5000      01763         MOVF    r0x02, W
01C0 6EE5      01764         MOVWF   POSTDEC1
01C2 5000      01765         MOVF    r0x01, W
01C4 6EE5      01766         MOVWF   POSTDEC1
01C6 5000      01767         MOVF    r0x00, W
01C8 6EE5      01768         MOVWF   POSTDEC1
01CA EC00 F000 01769         CALL    _timeCheck
01CE 0E03      01770         MOVLW   0x03
01D0 26E1      01771         ADDWF   FSR1L, F
01D2 0000      01772         BANKSEL _doDhcpOperations_receiver_socket_1_1
               01773 ;       .line   872; MainDemo.c if(counter = UDPIsGetReady(receiver_socket)){
01D4 5100      01774         MOVF    _doDhcpOperations_receiver_socket_1_1, W, B
01D6 6EE5      01775         MOVWF   POSTDEC1
01D8 EC00 F000 01776         CALL    _UDPIsGetReady
01DC 6E00      01777         MOVWF   r0x00
01DE CFF3 F000 01778         MOVFF   PRODL, r0x01
01E2 2AE1      01779         INCF    FSR1L, F
01E4 5000      01780         MOVF    r0x00, W
01E6 1000      01781         IORWF   r0x01, W
01E8 E000      01782         BZ      _00618_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01783 ;       .line   873; MainDemo.c if(ip_cmp(&ip_last_pckt, &server_ip)){ // Check si on peut pas voir avec l'OP code
01EA 0E00      01784         MOVLW   HIGH(_doDhcpOperations_ip_last_pckt_1_1)
01EC 6E00      01785         MOVWF   r0x01
01EE 0E00      01786         MOVLW   LOW(_doDhcpOperations_ip_last_pckt_1_1)
01F0 6E00      01787         MOVWF   r0x00
01F2 0E80      01788         MOVLW   0x80
01F4 6E00      01789         MOVWF   r0x02
01F6 0E00      01790         MOVLW   HIGH(_doDhcpOperations_server_ip_1_1)
01F8 6E00      01791         MOVWF   r0x04
01FA 0E00      01792         MOVLW   LOW(_doDhcpOperations_server_ip_1_1)
01FC 6E00      01793         MOVWF   r0x03
01FE 0E80      01794         MOVLW   0x80
0200 6E00      01795         MOVWF   r0x05
0202 5000      01796         MOVF    r0x05, W
0204 6EE5      01797         MOVWF   POSTDEC1
0206 5000      01798         MOVF    r0x04, W
0208 6EE5      01799         MOVWF   POSTDEC1
020A 5000      01800         MOVF    r0x03, W
020C 6EE5      01801         MOVWF   POSTDEC1
020E 5000      01802         MOVF    r0x02, W
0210 6EE5      01803         MOVWF   POSTDEC1
0212 5000      01804         MOVF    r0x01, W
0214 6EE5      01805         MOVWF   POSTDEC1
0216 5000      01806         MOVF    r0x00, W
0218 6EE5      01807         MOVWF   POSTDEC1
021A EC00 F000 01808         CALL    _ip_cmp
021E 6E00      01809         MOVWF   r0x00
0220 0E06      01810         MOVLW   0x06
0222 26E1      01811         ADDWF   FSR1L, F
0224 5000      01812         MOVF    r0x00, W
0226 E000      01813         BZ      _00613_DS_
               01814 ;       .line   874; MainDemo.c rcvdFromServer(&send_c_socket, &receiver_socket);
0228 0E00      01815         MOVLW   HIGH(_doDhcpOperations_send_c_socket_1_1)
022A 6E00      01816         MOVWF   r0x01
022C 0E00      01817         MOVLW   LOW(_doDhcpOperations_send_c_socket_1_1)
022E 6E00      01818         MOVWF   r0x00
0230 0E80      01819         MOVLW   0x80
0232 6E00      01820         MOVWF   r0x02
0234 0E00      01821         MOVLW   HIGH(_doDhcpOperations_receiver_socket_1_1)
0236 6E00      01822         MOVWF   r0x04
0238 0E00      01823         MOVLW   LOW(_doDhcpOperations_receiver_socket_1_1)
023A 6E00      01824         MOVWF   r0x03
023C 0E80      01825         MOVLW   0x80
023E 6E00      01826         MOVWF   r0x05
0240 5000      01827         MOVF    r0x05, W
0242 6EE5      01828         MOVWF   POSTDEC1
0244 5000      01829         MOVF    r0x04, W
0246 6EE5      01830         MOVWF   POSTDEC1
0248 5000      01831         MOVF    r0x03, W
024A 6EE5      01832         MOVWF   POSTDEC1
024C 5000      01833         MOVF    r0x02, W
024E 6EE5      01834         MOVWF   POSTDEC1
0250 5000      01835         MOVF    r0x01, W
0252 6EE5      01836         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0254 5000      01837         MOVF    r0x00, W
0256 6EE5      01838         MOVWF   POSTDEC1
0258 EC00 F000 01839         CALL    _rcvdFromServer
025C 0E06      01840         MOVLW   0x06
025E 26E1      01841         ADDWF   FSR1L, F
0260 D000      01842         BRA     _00618_DS_
0262 01843 _00613_DS_:
               01844 ;       .line   877; MainDemo.c rcvdFromClient(&send_s_socket, &send_c_socket, &receiver_socket);
0262 0E00      01845         MOVLW   HIGH(_doDhcpOperations_send_s_socket_1_1)
0264 6E00      01846         MOVWF   r0x01
0266 0E00      01847         MOVLW   LOW(_doDhcpOperations_send_s_socket_1_1)
0268 6E00      01848         MOVWF   r0x00
026A 0E80      01849         MOVLW   0x80
026C 6E00      01850         MOVWF   r0x02
026E 0E00      01851         MOVLW   HIGH(_doDhcpOperations_send_c_socket_1_1)
0270 6E00      01852         MOVWF   r0x04
0272 0E00      01853         MOVLW   LOW(_doDhcpOperations_send_c_socket_1_1)
0274 6E00      01854         MOVWF   r0x03
0276 0E80      01855         MOVLW   0x80
0278 6E00      01856         MOVWF   r0x05
027A 0E00      01857         MOVLW   HIGH(_doDhcpOperations_receiver_socket_1_1)
027C 6E00      01858         MOVWF   r0x07
027E 0E00      01859         MOVLW   LOW(_doDhcpOperations_receiver_socket_1_1)
0280 6E00      01860         MOVWF   r0x06
0282 0E80      01861         MOVLW   0x80
0284 6E00      01862         MOVWF   r0x08
0286 5000      01863         MOVF    r0x08, W
0288 6EE5      01864         MOVWF   POSTDEC1
028A 5000      01865         MOVF    r0x07, W
028C 6EE5      01866         MOVWF   POSTDEC1
028E 5000      01867         MOVF    r0x06, W
0290 6EE5      01868         MOVWF   POSTDEC1
0292 5000      01869         MOVF    r0x05, W
0294 6EE5      01870         MOVWF   POSTDEC1
0296 5000      01871         MOVF    r0x04, W
0298 6EE5      01872         MOVWF   POSTDEC1
029A 5000      01873         MOVF    r0x03, W
029C 6EE5      01874         MOVWF   POSTDEC1
029E 5000      01875         MOVF    r0x02, W
02A0 6EE5      01876         MOVWF   POSTDEC1
02A2 5000      01877         MOVF    r0x01, W
02A4 6EE5      01878         MOVWF   POSTDEC1
02A6 5000      01879         MOVF    r0x00, W
02A8 6EE5      01880         MOVWF   POSTDEC1
02AA EC00 F000 01881         CALL    _rcvdFromClient
02AE 0E09      01882         MOVLW   0x09
02B0 26E1      01883         ADDWF   FSR1L, F
02B2 D000      01884         BRA     _00618_DS_
02B4 01885 _00620_DS_:
02B4 CFE4 F000 01886         MOVFF   PREINC1, r0x08
02B8 CFE4 F000 01887         MOVFF   PREINC1, r0x07
02BC CFE4 F000 01888         MOVFF   PREINC1, r0x06
02C0 CFE4 F000 01889         MOVFF   PREINC1, r0x05
02C4 CFE4 F000 01890         MOVFF   PREINC1, r0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02C8 CFE4 F000 01891         MOVFF   PREINC1, r0x03
02CC CFE4 F000 01892         MOVFF   PREINC1, r0x02
02D0 CFE4 F000 01893         MOVFF   PREINC1, r0x01
02D4 CFE4 F000 01894         MOVFF   PREINC1, r0x00
02D8 CFE4 FFD9 01895         MOVFF   PREINC1, FSR2L
02DC 0012      01896         RETURN  
               01897 
               01898 ; ; Starting pCode block
               01899 S_MainDemo__timeCheck   code
0000 01900 _timeCheck:
               01901 ;       .line   819; MainDemo.c void timeCheck(UDP_SOCKET *send_s_socket){
0000 CFD9 FFE5 01902         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01903         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01904         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01905         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01906         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01907         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01908         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01909         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01910         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01911         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01912         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01913         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01914         MOVFF   r0x0a, POSTDEC1
0034 0E02      01915         MOVLW   0x02
0036 CFDB F000 01916         MOVFF   PLUSW2, r0x00
003A 0E03      01917         MOVLW   0x03
003C CFDB F000 01918         MOVFF   PLUSW2, r0x01
0040 0E04      01919         MOVLW   0x04
0042 CFDB F000 01920         MOVFF   PLUSW2, r0x02
               01921 ;       .line   823; MainDemo.c current = TickConvertToMilliseconds(TickGet());
0046 EC00 F000 01922         CALL    _TickGet
004A 6E00      01923         MOVWF   r0x03
004C CFF3 F000 01924         MOVFF   PRODL, r0x04
0050 CFF4 F000 01925         MOVFF   PRODH, r0x05
0054 CFE9 F000 01926         MOVFF   FSR0L, r0x06
0058 5000      01927         MOVF    r0x06, W
005A 6EE5      01928         MOVWF   POSTDEC1
005C 5000      01929         MOVF    r0x05, W
005E 6EE5      01930         MOVWF   POSTDEC1
0060 5000      01931         MOVF    r0x04, W
0062 6EE5      01932         MOVWF   POSTDEC1
0064 5000      01933         MOVF    r0x03, W
0066 6EE5      01934         MOVWF   POSTDEC1
0068 EC00 F000 01935         CALL    _TickConvertToMilliseconds
006C 6E00      01936         MOVWF   r0x03
006E CFF3 F000 01937         MOVFF   PRODL, r0x04
0072 CFF4 F000 01938         MOVFF   PRODH, r0x05
0076 CFE9 F000 01939         MOVFF   FSR0L, r0x06
007A 0E04      01940         MOVLW   0x04
007C 26E1      01941         ADDWF   FSR1L, F
007E 0000      01942         BANKSEL _timeCheck_previous_1_1
               01943 ;       .line   825; MainDemo.c if (current-previous >= 1000 || current < previous) {
0080 5100      01944         MOVF    _timeCheck_previous_1_1, W, B
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0082 5C00      01945         SUBWF   r0x03, W
0084 6E00      01946         MOVWF   r0x07
0086 0000      01947         BANKSEL (_timeCheck_previous_1_1 + 1)
0088 5100      01948         MOVF    (_timeCheck_previous_1_1 + 1), W, B
008A 5800      01949         SUBWFB  r0x04, W
008C 6E00      01950         MOVWF   r0x08
008E 0000      01951         BANKSEL (_timeCheck_previous_1_1 + 2)
0090 5100      01952         MOVF    (_timeCheck_previous_1_1 + 2), W, B
0092 5800      01953         SUBWFB  r0x05, W
0094 6E00      01954         MOVWF   r0x09
0096 0000      01955         BANKSEL (_timeCheck_previous_1_1 + 3)
0098 5100      01956         MOVF    (_timeCheck_previous_1_1 + 3), W, B
009A 5800      01957         SUBWFB  r0x06, W
009C 6E00      01958         MOVWF   r0x0a
009E 0E00      01959         MOVLW   0x00
00A0 5C00      01960         SUBWF   r0x0a, W
00A2 E100      01961         BNZ     _00590_DS_
00A4 0E00      01962         MOVLW   0x00
00A6 5C00      01963         SUBWF   r0x09, W
00A8 E100      01964         BNZ     _00590_DS_
00AA 0E03      01965         MOVLW   0x03
00AC 5C00      01966         SUBWF   r0x08, W
00AE E100      01967         BNZ     _00590_DS_
00B0 0EE8      01968         MOVLW   0xe8
00B2 5C00      01969         SUBWF   r0x07, W
00B4 01970 _00590_DS_:
00B4 E200      01971         BC      _00583_DS_
00B6 0000      01972         BANKSEL (_timeCheck_previous_1_1 + 3)
00B8 5100      01973         MOVF    (_timeCheck_previous_1_1 + 3), W, B
00BA 5C00      01974         SUBWF   r0x06, W
00BC E100      01975         BNZ     _00591_DS_
00BE 0000      01976         BANKSEL (_timeCheck_previous_1_1 + 2)
00C0 5100      01977         MOVF    (_timeCheck_previous_1_1 + 2), W, B
00C2 5C00      01978         SUBWF   r0x05, W
00C4 E100      01979         BNZ     _00591_DS_
00C6 0000      01980         BANKSEL (_timeCheck_previous_1_1 + 1)
00C8 5100      01981         MOVF    (_timeCheck_previous_1_1 + 1), W, B
00CA 5C00      01982         SUBWF   r0x04, W
00CC E100      01983         BNZ     _00591_DS_
00CE 0000      01984         BANKSEL _timeCheck_previous_1_1
00D0 5100      01985         MOVF    _timeCheck_previous_1_1, W, B
00D2 5C00      01986         SUBWF   r0x03, W
00D4 01987 _00591_DS_:
00D4 B0D8      01988         BTFSC   STATUS, 0
00D6 D000      01989         BRA     _00586_DS_
00D8 01990 _00583_DS_:
               01991 ;       .line   826; MainDemo.c previous += 1000;
00D8 0EE8      01992         MOVLW   0xe8
00DA 0000      01993         BANKSEL _timeCheck_previous_1_1
00DC 2700      01994         ADDWF   _timeCheck_previous_1_1, F, B
00DE 0E03      01995         MOVLW   0x03
00E0 0000      01996         BANKSEL (_timeCheck_previous_1_1 + 1)
00E2 2300      01997         ADDWFC  (_timeCheck_previous_1_1 + 1), F, B
00E4 0E00      01998         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E6 0000      01999         BANKSEL (_timeCheck_previous_1_1 + 2)
00E8 2300      02000         ADDWFC  (_timeCheck_previous_1_1 + 2), F, B
00EA 0E00      02001         MOVLW   0x00
00EC 0000      02002         BANKSEL (_timeCheck_previous_1_1 + 3)
00EE 2300      02003         ADDWFC  (_timeCheck_previous_1_1 + 3), F, B
00F0 0000      02004         BANKSEL _timeCheck_counter_1_1
               02005 ;       .line   827; MainDemo.c counter++;
00F2 2B00      02006         INCF    _timeCheck_counter_1_1, F, B
00F4 E300      02007         BNC     _10730_DS_
00F6 0000      02008         BANKSEL (_timeCheck_counter_1_1 + 1)
00F8 2B00      02009         INCF    (_timeCheck_counter_1_1 + 1), F, B
00FA 02010 _10730_DS_:
00FA E300      02011         BNC     _20731_DS_
00FC 0000      02012         BANKSEL (_timeCheck_counter_1_1 + 2)
00FE 2B00      02013         INCF    (_timeCheck_counter_1_1 + 2), F, B
0100 02014 _20731_DS_:
0100 E300      02015         BNC     _30732_DS_
0102 0000      02016         BANKSEL (_timeCheck_counter_1_1 + 3)
0104 2B00      02017         INCF    (_timeCheck_counter_1_1 + 3), F, B
0106 02018 _30732_DS_:
               02019 ;       .line   828; MainDemo.c if(counter%OVERFLOW_TIME == 0){
0106 0E00      02020         MOVLW   0x00
0108 6EE5      02021         MOVWF   POSTDEC1
010A 0E00      02022         MOVLW   0x00
010C 6EE5      02023         MOVWF   POSTDEC1
010E 0E00      02024         MOVLW   0x00
0110 6EE5      02025         MOVWF   POSTDEC1
0112 0E3D      02026         MOVLW   0x3d
0114 6EE5      02027         MOVWF   POSTDEC1
0116 0000      02028         BANKSEL (_timeCheck_counter_1_1 + 3)
0118 5100      02029         MOVF    (_timeCheck_counter_1_1 + 3), W, B
011A 6EE5      02030         MOVWF   POSTDEC1
011C 0000      02031         BANKSEL (_timeCheck_counter_1_1 + 2)
011E 5100      02032         MOVF    (_timeCheck_counter_1_1 + 2), W, B
0120 6EE5      02033         MOVWF   POSTDEC1
0122 0000      02034         BANKSEL (_timeCheck_counter_1_1 + 1)
0124 5100      02035         MOVF    (_timeCheck_counter_1_1 + 1), W, B
0126 6EE5      02036         MOVWF   POSTDEC1
0128 0000      02037         BANKSEL _timeCheck_counter_1_1
012A 5100      02038         MOVF    _timeCheck_counter_1_1, W, B
012C 6EE5      02039         MOVWF   POSTDEC1
012E EC00 F000 02040         CALL    __modulong
0132 6E00      02041         MOVWF   r0x03
0134 CFF3 F000 02042         MOVFF   PRODL, r0x04
0138 CFF4 F000 02043         MOVFF   PRODH, r0x05
013C CFE9 F000 02044         MOVFF   FSR0L, r0x06
0140 0E08      02045         MOVLW   0x08
0142 26E1      02046         ADDWF   FSR1L, F
0144 5000      02047         MOVF    r0x03, W
0146 1000      02048         IORWF   r0x04, W
0148 1000      02049         IORWF   r0x05, W
014A 1000      02050         IORWF   r0x06, W
014C E100      02051         BNZ     _00586_DS_
               02052 ;       .line   829; MainDemo.c leaseTimeCheck(send_s_socket);
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
014E 5000      02053         MOVF    r0x02, W
0150 6EE5      02054         MOVWF   POSTDEC1
0152 5000      02055         MOVF    r0x01, W
0154 6EE5      02056         MOVWF   POSTDEC1
0156 5000      02057         MOVF    r0x00, W
0158 6EE5      02058         MOVWF   POSTDEC1
015A EC00 F000 02059         CALL    _leaseTimeCheck
015E 0E03      02060         MOVLW   0x03
0160 26E1      02061         ADDWF   FSR1L, F
0162 0000      02062         BANKSEL _timeCheck_counter_1_1
               02063 ;       .line   830; MainDemo.c counter = 0;
0164 6B00      02064         CLRF    _timeCheck_counter_1_1, B
0166 0000      02065         BANKSEL (_timeCheck_counter_1_1 + 1)
0168 6B00      02066         CLRF    (_timeCheck_counter_1_1 + 1), B
016A 0000      02067         BANKSEL (_timeCheck_counter_1_1 + 2)
016C 6B00      02068         CLRF    (_timeCheck_counter_1_1 + 2), B
016E 0000      02069         BANKSEL (_timeCheck_counter_1_1 + 3)
0170 6B00      02070         CLRF    (_timeCheck_counter_1_1 + 3), B
0172 02071 _00586_DS_:
0172 CFE4 F000 02072         MOVFF   PREINC1, r0x0a
0176 CFE4 F000 02073         MOVFF   PREINC1, r0x09
017A CFE4 F000 02074         MOVFF   PREINC1, r0x08
017E CFE4 F000 02075         MOVFF   PREINC1, r0x07
0182 CFE4 F000 02076         MOVFF   PREINC1, r0x06
0186 CFE4 F000 02077         MOVFF   PREINC1, r0x05
018A CFE4 F000 02078         MOVFF   PREINC1, r0x04
018E CFE4 F000 02079         MOVFF   PREINC1, r0x03
0192 CFE4 F000 02080         MOVFF   PREINC1, r0x02
0196 CFE4 F000 02081         MOVFF   PREINC1, r0x01
019A CFE4 F000 02082         MOVFF   PREINC1, r0x00
019E CFE4 FFD9 02083         MOVFF   PREINC1, FSR2L
01A2 0012      02084         RETURN  
               02085 
               02086 ; ; Starting pCode block
               02087 S_MainDemo__leaseTimeCheck      code
0000 02088 _leaseTimeCheck:
               02089 ;       .line   786; MainDemo.c void leaseTimeCheck(UDP_SOCKET *send_s_socket){
0000 CFD9 FFE5 02090         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02091         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02092         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02093         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02094         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02095         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02096         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02097         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02098         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02099         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02100         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 02101         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 02102         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 02103         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 02104         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 02105         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 02106         MOVFF   r0x0e, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0044 C000 FFE5 02107         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 02108         MOVFF   r0x10, POSTDEC1
004C 0E02      02109         MOVLW   0x02
004E CFDB F000 02110         MOVFF   PLUSW2, r0x00
0052 0E03      02111         MOVLW   0x03
0054 CFDB F000 02112         MOVFF   PLUSW2, r0x01
0058 0E04      02113         MOVLW   0x04
005A CFDB F000 02114         MOVFF   PLUSW2, r0x02
               02115 ;       .line   788; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
005E 6A00      02116         CLRF    r0x03
0060 6A00      02117         CLRF    r0x04
0062 6A00      02118         CLRF    r0x05
0064 6A00      02119         CLRF    r0x06
0066 6A00      02120         CLRF    r0x07
0068 6A00      02121         CLRF    r0x08
006A 02122 _00558_DS_:
006A 5000      02123         MOVF    r0x04, W
006C 0F80      02124         ADDLW   0x80
006E 0F80      02125         ADDLW   0x80
0070 E100      02126         BNZ     _00572_DS_
0072 0E0A      02127         MOVLW   0x0a
0074 5C00      02128         SUBWF   r0x03, W
0076 02129 _00572_DS_:
0076 B0D8      02130         BTFSC   STATUS, 0
0078 D000      02131         BRA     _00562_DS_
               02132 ;       .line   789; MainDemo.c if(!isPoolItemUsed(&pool[i])){
007A 0E00      02133         MOVLW   LOW(_pool)
007C 2400      02134         ADDWF   r0x07, W
007E 6E00      02135         MOVWF   r0x09
0080 0E00      02136         MOVLW   HIGH(_pool)
0082 2000      02137         ADDWFC  r0x08, W
0084 6E00      02138         MOVWF   r0x0a
0086 5000      02139         MOVF    r0x0a, W
0088 6E00      02140         MOVWF   r0x0a
008A 5000      02141         MOVF    r0x09, W
008C 6E00      02142         MOVWF   r0x09
008E 0E80      02143         MOVLW   0x80
0090 6E00      02144         MOVWF   r0x0b
0092 5000      02145         MOVF    r0x0b, W
0094 6EE5      02146         MOVWF   POSTDEC1
0096 5000      02147         MOVF    r0x0a, W
0098 6EE5      02148         MOVWF   POSTDEC1
009A 5000      02149         MOVF    r0x09, W
009C 6EE5      02150         MOVWF   POSTDEC1
009E EC00 F000 02151         CALL    _isPoolItemUsed
00A2 6E00      02152         MOVWF   r0x09
00A4 0E03      02153         MOVLW   0x03
00A6 26E1      02154         ADDWF   FSR1L, F
00A8 5000      02155         MOVF    r0x09, W
00AA A4D8      02156         BTFSS   STATUS, 2
00AC D000      02157         BRA     _00560_DS_
               02158 ;       .line   791; MainDemo.c if(pool[i].server_leasetime < 60)
00AE 0E00      02159         MOVLW   LOW(_pool)
00B0 2400      02160         ADDWF   r0x07, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B2 6E00      02161         MOVWF   r0x09
00B4 0E00      02162         MOVLW   HIGH(_pool)
00B6 2000      02163         ADDWFC  r0x08, W
00B8 6E00      02164         MOVWF   r0x0a
00BA 0E10      02165         MOVLW   0x10
00BC 2600      02166         ADDWF   r0x09, F
00BE B0D8      02167         BTFSC   STATUS, 0
00C0 2A00      02168         INCF    r0x0a, F
00C2 C000 FFE9 02169         MOVFF   r0x09, FSR0L
00C6 C000 FFEA 02170         MOVFF   r0x0a, FSR0H
00CA CFEE F000 02171         MOVFF   POSTINC0, r0x0b
00CE CFEE F000 02172         MOVFF   POSTINC0, r0x0c
00D2 CFEE F000 02173         MOVFF   POSTINC0, r0x0d
00D6 CFEF F000 02174         MOVFF   INDF0, r0x0e
00DA 0E00      02175         MOVLW   0x00
00DC 5C00      02176         SUBWF   r0x0e, W
00DE E100      02177         BNZ     _00573_DS_
00E0 0E00      02178         MOVLW   0x00
00E2 5C00      02179         SUBWF   r0x0d, W
00E4 E100      02180         BNZ     _00573_DS_
00E6 0E00      02181         MOVLW   0x00
00E8 5C00      02182         SUBWF   r0x0c, W
00EA E100      02183         BNZ     _00573_DS_
00EC 0E3C      02184         MOVLW   0x3c
00EE 5C00      02185         SUBWF   r0x0b, W
00F0 02186 _00573_DS_:
00F0 E200      02187         BC      _00547_DS_
               02188 ;       .line   792; MainDemo.c pool[i].server_leasetime = 0;
00F2 C000 FFE9 02189         MOVFF   r0x09, FSR0L
00F6 C000 FFEA 02190         MOVFF   r0x0a, FSR0H
00FA 0E00      02191         MOVLW   0x00
00FC 6EEE      02192         MOVWF   POSTINC0
00FE 0E00      02193         MOVLW   0x00
0100 6EEE      02194         MOVWF   POSTINC0
0102 0E00      02195         MOVLW   0x00
0104 6EEE      02196         MOVWF   POSTINC0
0106 0E00      02197         MOVLW   0x00
0108 6EEF      02198         MOVWF   INDF0
010A D000      02199         BRA     _00548_DS_
010C 02200 _00547_DS_:
               02201 ;       .line   793; MainDemo.c else pool[i].server_leasetime -= 60;
010C C000 FFE9 02202         MOVFF   r0x09, FSR0L
0110 C000 FFEA 02203         MOVFF   r0x0a, FSR0H
0114 CFEE F000 02204         MOVFF   POSTINC0, r0x0b
0118 CFEE F000 02205         MOVFF   POSTINC0, r0x0c
011C CFEE F000 02206         MOVFF   POSTINC0, r0x0d
0120 CFEF F000 02207         MOVFF   INDF0, r0x0e
0124 0EC4      02208         MOVLW   0xc4
0126 2600      02209         ADDWF   r0x0b, F
0128 0EFF      02210         MOVLW   0xff
012A 2200      02211         ADDWFC  r0x0c, F
012C 0EFF      02212         MOVLW   0xff
012E 2200      02213         ADDWFC  r0x0d, F
0130 0EFF      02214         MOVLW   0xff
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0132 2200      02215         ADDWFC  r0x0e, F
0134 C000 FFE9 02216         MOVFF   r0x09, FSR0L
0138 C000 FFEA 02217         MOVFF   r0x0a, FSR0H
013C C000 FFEE 02218         MOVFF   r0x0b, POSTINC0
0140 C000 FFEE 02219         MOVFF   r0x0c, POSTINC0
0144 C000 FFEE 02220         MOVFF   r0x0d, POSTINC0
0148 C000 FFEF 02221         MOVFF   r0x0e, INDF0
014C 02222 _00548_DS_:
               02223 ;       .line   795; MainDemo.c if(pool[i].client_leasetime <= 60){
014C 0E00      02224         MOVLW   LOW(_pool)
014E 2400      02225         ADDWF   r0x05, W
0150 6E00      02226         MOVWF   r0x09
0152 0E00      02227         MOVLW   HIGH(_pool)
0154 2000      02228         ADDWFC  r0x06, W
0156 6E00      02229         MOVWF   r0x0a
0158 5000      02230         MOVF    r0x09, W
015A 0F0C      02231         ADDLW   0x0c
015C 6E00      02232         MOVWF   r0x0b
015E 0E00      02233         MOVLW   0x00
0160 2000      02234         ADDWFC  r0x0a, W
0162 6E00      02235         MOVWF   r0x0c
0164 C000 FFE9 02236         MOVFF   r0x0b, FSR0L
0168 C000 FFEA 02237         MOVFF   r0x0c, FSR0H
016C CFEE F000 02238         MOVFF   POSTINC0, r0x0d
0170 CFEE F000 02239         MOVFF   POSTINC0, r0x0e
0174 CFEE F000 02240         MOVFF   POSTINC0, r0x0f
0178 CFEF F000 02241         MOVFF   INDF0, r0x10
017C 0E00      02242         MOVLW   0x00
017E 5C00      02243         SUBWF   r0x10, W
0180 E100      02244         BNZ     _00574_DS_
0182 0E00      02245         MOVLW   0x00
0184 5C00      02246         SUBWF   r0x0f, W
0186 E100      02247         BNZ     _00574_DS_
0188 0E00      02248         MOVLW   0x00
018A 5C00      02249         SUBWF   r0x0e, W
018C E100      02250         BNZ     _00574_DS_
018E 0E3D      02251         MOVLW   0x3d
0190 5C00      02252         SUBWF   r0x0d, W
0192 02253 _00574_DS_:
0192 B0D8      02254         BTFSC   STATUS, 0
0194 D000      02255         BRA     _00552_DS_
               02256 ;       .line   796; MainDemo.c pool[i].terms_missed++;
0196 5000      02257         MOVF    r0x09, W
0198 0F0A      02258         ADDLW   0x0a
019A 6E00      02259         MOVWF   r0x0d
019C 0E00      02260         MOVLW   0x00
019E 2000      02261         ADDWFC  r0x0a, W
01A0 6E00      02262         MOVWF   r0x0e
01A2 C000 FFE9 02263         MOVFF   r0x0d, FSR0L
01A6 C000 FFEA 02264         MOVFF   r0x0e, FSR0H
01AA CFEE F000 02265         MOVFF   POSTINC0, r0x0f
01AE CFEF F000 02266         MOVFF   INDF0, r0x10
01B2 2A00      02267         INCF    r0x0f, F
01B4 B0D8      02268         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01B6 2A00      02269         INCF    r0x10, F
01B8 C000 FFE9 02270         MOVFF   r0x0d, FSR0L
01BC C000 FFEA 02271         MOVFF   r0x0e, FSR0H
01C0 C000 FFEE 02272         MOVFF   r0x0f, POSTINC0
01C4 C000 FFEF 02273         MOVFF   r0x10, INDF0
               02274 ;       .line   797; MainDemo.c pool[i].client_leasetime = CLIENT_LEASE_TIME;
01C8 C000 FFE9 02275         MOVFF   r0x0b, FSR0L
01CC C000 FFEA 02276         MOVFF   r0x0c, FSR0H
01D0 0E2C      02277         MOVLW   0x2c
01D2 6EEE      02278         MOVWF   POSTINC0
01D4 0E01      02279         MOVLW   0x01
01D6 6EEE      02280         MOVWF   POSTINC0
01D8 0E00      02281         MOVLW   0x00
01DA 6EEE      02282         MOVWF   POSTINC0
01DC 0E00      02283         MOVLW   0x00
01DE 6EEF      02284         MOVWF   INDF0
               02285 ;       .line   799; MainDemo.c if(pool[i].terms_missed >= 5){
01E0 0E00      02286         MOVLW   0x00
01E2 5C00      02287         SUBWF   r0x10, W
01E4 E100      02288         BNZ     _00575_DS_
01E6 0E05      02289         MOVLW   0x05
01E8 5C00      02290         SUBWF   r0x0f, W
01EA 02291 _00575_DS_:
01EA E300      02292         BNC     _00553_DS_
               02293 ;       .line   801; MainDemo.c sendRelease(send_s_socket, &pool[i]); // TODO
01EC 5000      02294         MOVF    r0x0a, W
01EE 6E00      02295         MOVWF   r0x0a
01F0 5000      02296         MOVF    r0x09, W
01F2 6E00      02297         MOVWF   r0x09
01F4 0E80      02298         MOVLW   0x80
01F6 6E00      02299         MOVWF   r0x0d
01F8 5000      02300         MOVF    r0x0d, W
01FA 6EE5      02301         MOVWF   POSTDEC1
01FC 5000      02302         MOVF    r0x0a, W
01FE 6EE5      02303         MOVWF   POSTDEC1
0200 5000      02304         MOVF    r0x09, W
0202 6EE5      02305         MOVWF   POSTDEC1
0204 5000      02306         MOVF    r0x02, W
0206 6EE5      02307         MOVWF   POSTDEC1
0208 5000      02308         MOVF    r0x01, W
020A 6EE5      02309         MOVWF   POSTDEC1
020C 5000      02310         MOVF    r0x00, W
020E 6EE5      02311         MOVWF   POSTDEC1
0210 EC00 F000 02312         CALL    _sendRelease
0214 0E06      02313         MOVLW   0x06
0216 26E1      02314         ADDWF   FSR1L, F
               02315 ;       .line   802; MainDemo.c continue; 
0218 D000      02316         BRA     _00560_DS_
021A 02317 _00552_DS_:
               02318 ;       .line   805; MainDemo.c else pool[i].client_leasetime -= 60;            
021A C000 FFE9 02319         MOVFF   r0x0b, FSR0L
021E C000 FFEA 02320         MOVFF   r0x0c, FSR0H
0222 CFEE F000 02321         MOVFF   POSTINC0, r0x09
0226 CFEE F000 02322         MOVFF   POSTINC0, r0x0a
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
022A CFEE F000 02323         MOVFF   POSTINC0, r0x0d
022E CFEF F000 02324         MOVFF   INDF0, r0x0e
0232 0EC4      02325         MOVLW   0xc4
0234 2600      02326         ADDWF   r0x09, F
0236 0EFF      02327         MOVLW   0xff
0238 2200      02328         ADDWFC  r0x0a, F
023A 0EFF      02329         MOVLW   0xff
023C 2200      02330         ADDWFC  r0x0d, F
023E 0EFF      02331         MOVLW   0xff
0240 2200      02332         ADDWFC  r0x0e, F
0242 C000 FFE9 02333         MOVFF   r0x0b, FSR0L
0246 C000 FFEA 02334         MOVFF   r0x0c, FSR0H
024A C000 FFEE 02335         MOVFF   r0x09, POSTINC0
024E C000 FFEE 02336         MOVFF   r0x0a, POSTINC0
0252 C000 FFEE 02337         MOVFF   r0x0d, POSTINC0
0256 C000 FFEF 02338         MOVFF   r0x0e, INDF0
025A 02339 _00553_DS_:
               02340 ;       .line   806; MainDemo.c if(pool[i].server_leasetime <= SERVER_LEASE_TIME){
025A 0E00      02341         MOVLW   LOW(_pool)
025C 2400      02342         ADDWF   r0x05, W
025E 6E00      02343         MOVWF   r0x09
0260 0E00      02344         MOVLW   HIGH(_pool)
0262 2000      02345         ADDWFC  r0x06, W
0264 6E00      02346         MOVWF   r0x0a
0266 5000      02347         MOVF    r0x09, W
0268 0F10      02348         ADDLW   0x10
026A 6E00      02349         MOVWF   r0x0b
026C 0E00      02350         MOVLW   0x00
026E 2000      02351         ADDWFC  r0x0a, W
0270 6E00      02352         MOVWF   r0x0c
0272 C000 FFE9 02353         MOVFF   r0x0b, FSR0L
0276 C000 FFEA 02354         MOVFF   r0x0c, FSR0H
027A CFEE F000 02355         MOVFF   POSTINC0, r0x0b
027E CFEE F000 02356         MOVFF   POSTINC0, r0x0c
0282 CFEE F000 02357         MOVFF   POSTINC0, r0x0d
0286 CFEF F000 02358         MOVFF   INDF0, r0x0e
028A 0E00      02359         MOVLW   0x00
028C 5C00      02360         SUBWF   r0x0e, W
028E E100      02361         BNZ     _00576_DS_
0290 0E00      02362         MOVLW   0x00
0292 5C00      02363         SUBWF   r0x0d, W
0294 E100      02364         BNZ     _00576_DS_
0296 0E01      02365         MOVLW   0x01
0298 5C00      02366         SUBWF   r0x0c, W
029A E100      02367         BNZ     _00576_DS_
029C 0E2D      02368         MOVLW   0x2d
029E 5C00      02369         SUBWF   r0x0b, W
02A0 02370 _00576_DS_:
02A0 E200      02371         BC      _00560_DS_
               02372 ;       .line   807; MainDemo.c sendRequest(send_s_socket, &pool[i]);       // TODO
02A2 5000      02373         MOVF    r0x0a, W
02A4 6E00      02374         MOVWF   r0x0a
02A6 5000      02375         MOVF    r0x09, W
02A8 6E00      02376         MOVWF   r0x09
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02AA 0E80      02377         MOVLW   0x80
02AC 6E00      02378         MOVWF   r0x0b
02AE 5000      02379         MOVF    r0x0b, W
02B0 6EE5      02380         MOVWF   POSTDEC1
02B2 5000      02381         MOVF    r0x0a, W
02B4 6EE5      02382         MOVWF   POSTDEC1
02B6 5000      02383         MOVF    r0x09, W
02B8 6EE5      02384         MOVWF   POSTDEC1
02BA 5000      02385         MOVF    r0x02, W
02BC 6EE5      02386         MOVWF   POSTDEC1
02BE 5000      02387         MOVF    r0x01, W
02C0 6EE5      02388         MOVWF   POSTDEC1
02C2 5000      02389         MOVF    r0x00, W
02C4 6EE5      02390         MOVWF   POSTDEC1
02C6 EC00 F000 02391         CALL    _sendRequest
02CA 0E06      02392         MOVLW   0x06
02CC 26E1      02393         ADDWF   FSR1L, F
02CE 02394 _00560_DS_:
               02395 ;       .line   788; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
02CE 0E14      02396         MOVLW   0x14
02D0 2600      02397         ADDWF   r0x05, F
02D2 B0D8      02398         BTFSC   STATUS, 0
02D4 2A00      02399         INCF    r0x06, F
02D6 0E14      02400         MOVLW   0x14
02D8 2600      02401         ADDWF   r0x07, F
02DA B0D8      02402         BTFSC   STATUS, 0
02DC 2A00      02403         INCF    r0x08, F
02DE 2A00      02404         INCF    r0x03, F
02E0 B0D8      02405         BTFSC   STATUS, 0
02E2 2A00      02406         INCF    r0x04, F
02E4 D000      02407         BRA     _00558_DS_
02E6 02408 _00562_DS_:
02E6 CFE4 F000 02409         MOVFF   PREINC1, r0x10
02EA CFE4 F000 02410         MOVFF   PREINC1, r0x0f
02EE CFE4 F000 02411         MOVFF   PREINC1, r0x0e
02F2 CFE4 F000 02412         MOVFF   PREINC1, r0x0d
02F6 CFE4 F000 02413         MOVFF   PREINC1, r0x0c
02FA CFE4 F000 02414         MOVFF   PREINC1, r0x0b
02FE CFE4 F000 02415         MOVFF   PREINC1, r0x0a
0302 CFE4 F000 02416         MOVFF   PREINC1, r0x09
0306 CFE4 F000 02417         MOVFF   PREINC1, r0x08
030A CFE4 F000 02418         MOVFF   PREINC1, r0x07
030E CFE4 F000 02419         MOVFF   PREINC1, r0x06
0312 CFE4 F000 02420         MOVFF   PREINC1, r0x05
0316 CFE4 F000 02421         MOVFF   PREINC1, r0x04
031A CFE4 F000 02422         MOVFF   PREINC1, r0x03
031E CFE4 F000 02423         MOVFF   PREINC1, r0x02
0322 CFE4 F000 02424         MOVFF   PREINC1, r0x01
0326 CFE4 F000 02425         MOVFF   PREINC1, r0x00
032A CFE4 FFD9 02426         MOVFF   PREINC1, FSR2L
032E 0012      02427         RETURN  
               02428 
               02429 ; ; Starting pCode block
               02430 S_MainDemo__findInPool  code
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 02431 _findInPool:
               02432 ;       .line   774; MainDemo.c BOOL findInPool(POOL_ITEM **it, MAC_ADDR *mac){
0000 CFD9 FFE5 02433         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02434         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02435         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02436         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02437         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02438         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02439         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02440         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02441         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02442         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02443         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 02444         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 02445         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 02446         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 02447         MOVFF   r0x0c, POSTDEC1
003C 0E02      02448         MOVLW   0x02
003E CFDB F000 02449         MOVFF   PLUSW2, r0x00
0042 0E03      02450         MOVLW   0x03
0044 CFDB F000 02451         MOVFF   PLUSW2, r0x01
0048 0E04      02452         MOVLW   0x04
004A CFDB F000 02453         MOVFF   PLUSW2, r0x02
004E 0E05      02454         MOVLW   0x05
0050 CFDB F000 02455         MOVFF   PLUSW2, r0x03
0054 0E06      02456         MOVLW   0x06
0056 CFDB F000 02457         MOVFF   PLUSW2, r0x04
005A 0E07      02458         MOVLW   0x07
005C CFDB F000 02459         MOVFF   PLUSW2, r0x05
               02460 ;       .line   776; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
0060 6A00      02461         CLRF    r0x06
0062 6A00      02462         CLRF    r0x07
0064 6A00      02463         CLRF    r0x08
0066 6A00      02464         CLRF    r0x09
0068 02465 _00532_DS_:
0068 5000      02466         MOVF    r0x07, W
006A 0F80      02467         ADDLW   0x80
006C 0F80      02468         ADDLW   0x80
006E E100      02469         BNZ     _00541_DS_
0070 0E0A      02470         MOVLW   0x0a
0072 5C00      02471         SUBWF   r0x06, W
0074 02472 _00541_DS_:
0074 B0D8      02473         BTFSC   STATUS, 0
0076 D000      02474         BRA     _00535_DS_
               02475 ;       .line   777; MainDemo.c if(mac_cmp(mac, &pool[i].mac)){
0078 0E00      02476         MOVLW   LOW(_pool)
007A 2400      02477         ADDWF   r0x08, W
007C 6E00      02478         MOVWF   r0x0a
007E 0E00      02479         MOVLW   HIGH(_pool)
0080 2000      02480         ADDWFC  r0x09, W
0082 6E00      02481         MOVWF   r0x0b
0084 0E04      02482         MOVLW   0x04
0086 2600      02483         ADDWF   r0x0a, F
0088 B0D8      02484         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A 2A00      02485         INCF    r0x0b, F
008C 5000      02486         MOVF    r0x0b, W
008E 6E00      02487         MOVWF   r0x0b
0090 5000      02488         MOVF    r0x0a, W
0092 6E00      02489         MOVWF   r0x0a
0094 0E80      02490         MOVLW   0x80
0096 6E00      02491         MOVWF   r0x0c
0098 5000      02492         MOVF    r0x0c, W
009A 6EE5      02493         MOVWF   POSTDEC1
009C 5000      02494         MOVF    r0x0b, W
009E 6EE5      02495         MOVWF   POSTDEC1
00A0 5000      02496         MOVF    r0x0a, W
00A2 6EE5      02497         MOVWF   POSTDEC1
00A4 5000      02498         MOVF    r0x05, W
00A6 6EE5      02499         MOVWF   POSTDEC1
00A8 5000      02500         MOVF    r0x04, W
00AA 6EE5      02501         MOVWF   POSTDEC1
00AC 5000      02502         MOVF    r0x03, W
00AE 6EE5      02503         MOVWF   POSTDEC1
00B0 EC00 F000 02504         CALL    _mac_cmp
00B4 6E00      02505         MOVWF   r0x0a
00B6 0E06      02506         MOVLW   0x06
00B8 26E1      02507         ADDWF   FSR1L, F
00BA 5000      02508         MOVF    r0x0a, W
00BC E000      02509         BZ      _00534_DS_
               02510 ;       .line   778; MainDemo.c *it = &pool[i];
00BE 0E00      02511         MOVLW   LOW(_pool)
00C0 2400      02512         ADDWF   r0x08, W
00C2 6E00      02513         MOVWF   r0x0a
00C4 0E00      02514         MOVLW   HIGH(_pool)
00C6 2000      02515         ADDWFC  r0x09, W
00C8 6E00      02516         MOVWF   r0x0b
00CA 5000      02517         MOVF    r0x0b, W
00CC 6E00      02518         MOVWF   r0x0b
00CE 5000      02519         MOVF    r0x0a, W
00D0 6E00      02520         MOVWF   r0x0a
00D2 0E80      02521         MOVLW   0x80
00D4 6E00      02522         MOVWF   r0x0c
00D6 C000 FFE5 02523         MOVFF   r0x0a, POSTDEC1
00DA C000 FFF4 02524         MOVFF   r0x0b, PRODH
00DE C000 FFF6 02525         MOVFF   r0x0c, TBLPTRL
00E2 C000 FFE9 02526         MOVFF   r0x00, FSR0L
00E6 C000 FFF3 02527         MOVFF   r0x01, PRODL
00EA 5000      02528         MOVF    r0x02, W
00EC EC00 F000 02529         CALL    __gptrput3
               02530 ;       .line   779; MainDemo.c return TRUE;
00F0 0E01      02531         MOVLW   0x01
00F2 D000      02532         BRA     _00536_DS_
00F4 02533 _00534_DS_:
               02534 ;       .line   776; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
00F4 0E14      02535         MOVLW   0x14
00F6 2600      02536         ADDWF   r0x08, F
00F8 B0D8      02537         BTFSC   STATUS, 0
00FA 2A00      02538         INCF    r0x09, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FC 2A00      02539         INCF    r0x06, F
00FE B0D8      02540         BTFSC   STATUS, 0
0100 2A00      02541         INCF    r0x07, F
0102 D000      02542         BRA     _00532_DS_
0104 02543 _00535_DS_:
               02544 ;       .line   782; MainDemo.c return FALSE;
0104 6AE8      02545         CLRF    WREG
0106 02546 _00536_DS_:
0106 CFE4 F000 02547         MOVFF   PREINC1, r0x0c
010A CFE4 F000 02548         MOVFF   PREINC1, r0x0b
010E CFE4 F000 02549         MOVFF   PREINC1, r0x0a
0112 CFE4 F000 02550         MOVFF   PREINC1, r0x09
0116 CFE4 F000 02551         MOVFF   PREINC1, r0x08
011A CFE4 F000 02552         MOVFF   PREINC1, r0x07
011E CFE4 F000 02553         MOVFF   PREINC1, r0x06
0122 CFE4 F000 02554         MOVFF   PREINC1, r0x05
0126 CFE4 F000 02555         MOVFF   PREINC1, r0x04
012A CFE4 F000 02556         MOVFF   PREINC1, r0x03
012E CFE4 F000 02557         MOVFF   PREINC1, r0x02
0132 CFE4 F000 02558         MOVFF   PREINC1, r0x01
0136 CFE4 F000 02559         MOVFF   PREINC1, r0x00
013A CFE4 FFD9 02560         MOVFF   PREINC1, FSR2L
013E 0012      02561         RETURN  
               02562 
               02563 ; ; Starting pCode block
               02564 S_MainDemo__isPoolItemUsed      code
0000 02565 _isPoolItemUsed:
               02566 ;       .line   764; MainDemo.c BOOL isPoolItemUsed(POOL_ITEM *it){
0000 CFD9 FFE5 02567         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02568         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02569         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02570         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02571         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02572         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02573         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02574         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02575         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02576         MOVFF   r0x07, POSTDEC1
0028 0E02      02577         MOVLW   0x02
002A CFDB F000 02578         MOVFF   PLUSW2, r0x00
002E 0E03      02579         MOVLW   0x03
0030 CFDB F000 02580         MOVFF   PLUSW2, r0x01
0034 0E04      02581         MOVLW   0x04
0036 CFDB F000 02582         MOVFF   PLUSW2, r0x02
               02583 ;       .line   766; MainDemo.c for(i=0; i<6; i++){
003A 0E04      02584         MOVLW   0x04
003C 2600      02585         ADDWF   r0x00, F
003E 0E00      02586         MOVLW   0x00
0040 2200      02587         ADDWFC  r0x01, F
0042 0E00      02588         MOVLW   0x00
0044 2200      02589         ADDWFC  r0x02, F
0046 6A00      02590         CLRF    r0x03
0048 6A00      02591         CLRF    r0x04
004A 02592 _00516_DS_:
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A 5000      02593         MOVF    r0x04, W
004C 0F80      02594         ADDLW   0x80
004E 0F80      02595         ADDLW   0x80
0050 E100      02596         BNZ     _00525_DS_
0052 0E06      02597         MOVLW   0x06
0054 5C00      02598         SUBWF   r0x03, W
0056 02599 _00525_DS_:
0056 E200      02600         BC      _00519_DS_
               02601 ;       .line   767; MainDemo.c if(it->mac.v[i] != 0){
0058 5000      02602         MOVF    r0x03, W
005A 2400      02603         ADDWF   r0x00, W
005C 6E00      02604         MOVWF   r0x05
005E 5000      02605         MOVF    r0x04, W
0060 2000      02606         ADDWFC  r0x01, W
0062 6E00      02607         MOVWF   r0x06
0064 6AE8      02608         CLRF    WREG
0066 BE00      02609         BTFSC   r0x04, 7
0068 68E8      02610         SETF    WREG
006A 2000      02611         ADDWFC  r0x02, W
006C 6E00      02612         MOVWF   r0x07
006E C000 FFE9 02613         MOVFF   r0x05, FSR0L
0072 C000 FFF3 02614         MOVFF   r0x06, PRODL
0076 5000      02615         MOVF    r0x07, W
0078 EC00 F000 02616         CALL    __gptrget1
007C 6E00      02617         MOVWF   r0x05
007E 5000      02618         MOVF    r0x05, W
0080 E000      02619         BZ      _00518_DS_
               02620 ;       .line   768; MainDemo.c return FALSE;
0082 6AE8      02621         CLRF    WREG
0084 D000      02622         BRA     _00520_DS_
0086 02623 _00518_DS_:
               02624 ;       .line   766; MainDemo.c for(i=0; i<6; i++){
0086 2A00      02625         INCF    r0x03, F
0088 B0D8      02626         BTFSC   STATUS, 0
008A 2A00      02627         INCF    r0x04, F
008C D000      02628         BRA     _00516_DS_
008E 02629 _00519_DS_:
               02630 ;       .line   771; MainDemo.c return TRUE;
008E 0E01      02631         MOVLW   0x01
0090 02632 _00520_DS_:
0090 CFE4 F000 02633         MOVFF   PREINC1, r0x07
0094 CFE4 F000 02634         MOVFF   PREINC1, r0x06
0098 CFE4 F000 02635         MOVFF   PREINC1, r0x05
009C CFE4 F000 02636         MOVFF   PREINC1, r0x04
00A0 CFE4 F000 02637         MOVFF   PREINC1, r0x03
00A4 CFE4 F000 02638         MOVFF   PREINC1, r0x02
00A8 CFE4 F000 02639         MOVFF   PREINC1, r0x01
00AC CFE4 F000 02640         MOVFF   PREINC1, r0x00
00B0 CFE4 FFD9 02641         MOVFF   PREINC1, FSR2L
00B4 0012      02642         RETURN  
               02643 
               02644 ; ; Starting pCode block
               02645 S_MainDemo__addItem     code
0000 02646 _addItem:
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02647 ;       .line   747; MainDemo.c BOOL addItem(IP_ADDR *ip, MAC_ADDR *mac, DWORD leasetime, unsigned int terms_missed_tmp){
0000 CFD9 FFE5 02648         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02649         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02650         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02651         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02652         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02653         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02654         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02655         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02656         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02657         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02658         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 02659         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 02660         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 02661         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 02662         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 02663         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 02664         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 02665         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 02666         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 02667         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 02668         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 02669         MOVFF   r0x13, POSTDEC1
0058 0E02      02670         MOVLW   0x02
005A CFDB F000 02671         MOVFF   PLUSW2, r0x00
005E 0E03      02672         MOVLW   0x03
0060 CFDB F000 02673         MOVFF   PLUSW2, r0x01
0064 0E04      02674         MOVLW   0x04
0066 CFDB F000 02675         MOVFF   PLUSW2, r0x02
006A 0E05      02676         MOVLW   0x05
006C CFDB F000 02677         MOVFF   PLUSW2, r0x03
0070 0E06      02678         MOVLW   0x06
0072 CFDB F000 02679         MOVFF   PLUSW2, r0x04
0076 0E07      02680         MOVLW   0x07
0078 CFDB F000 02681         MOVFF   PLUSW2, r0x05
007C 0E08      02682         MOVLW   0x08
007E CFDB F000 02683         MOVFF   PLUSW2, r0x06
0082 0E09      02684         MOVLW   0x09
0084 CFDB F000 02685         MOVFF   PLUSW2, r0x07
0088 0E0A      02686         MOVLW   0x0a
008A CFDB F000 02687         MOVFF   PLUSW2, r0x08
008E 0E0B      02688         MOVLW   0x0b
0090 CFDB F000 02689         MOVFF   PLUSW2, r0x09
0094 0E0C      02690         MOVLW   0x0c
0096 CFDB F000 02691         MOVFF   PLUSW2, r0x0a
009A 0E0D      02692         MOVLW   0x0d
009C CFDB F000 02693         MOVFF   PLUSW2, r0x0b
               02694 ;       .line   749; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
00A0 6A00      02695         CLRF    r0x0c
00A2 6A00      02696         CLRF    r0x0d
00A4 6A00      02697         CLRF    r0x0e
00A6 6A00      02698         CLRF    r0x0f
00A8 02699 _00500_DS_:
00A8 5000      02700         MOVF    r0x0d, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AA 0F80      02701         ADDLW   0x80
00AC 0F80      02702         ADDLW   0x80
00AE E100      02703         BNZ     _00509_DS_
00B0 0E0A      02704         MOVLW   0x0a
00B2 5C00      02705         SUBWF   r0x0c, W
00B4 02706 _00509_DS_:
00B4 B0D8      02707         BTFSC   STATUS, 0
00B6 D000      02708         BRA     _00503_DS_
               02709 ;       .line   750; MainDemo.c if(isPoolItemUsed(&pool[i])){
00B8 0E00      02710         MOVLW   LOW(_pool)
00BA 2400      02711         ADDWF   r0x0e, W
00BC 6E00      02712         MOVWF   r0x10
00BE 0E00      02713         MOVLW   HIGH(_pool)
00C0 2000      02714         ADDWFC  r0x0f, W
00C2 6E00      02715         MOVWF   r0x11
00C4 5000      02716         MOVF    r0x11, W
00C6 6E00      02717         MOVWF   r0x11
00C8 5000      02718         MOVF    r0x10, W
00CA 6E00      02719         MOVWF   r0x10
00CC 0E80      02720         MOVLW   0x80
00CE 6E00      02721         MOVWF   r0x12
00D0 5000      02722         MOVF    r0x12, W
00D2 6EE5      02723         MOVWF   POSTDEC1
00D4 5000      02724         MOVF    r0x11, W
00D6 6EE5      02725         MOVWF   POSTDEC1
00D8 5000      02726         MOVF    r0x10, W
00DA 6EE5      02727         MOVWF   POSTDEC1
00DC EC00 F000 02728         CALL    _isPoolItemUsed
00E0 6E00      02729         MOVWF   r0x10
00E2 0E03      02730         MOVLW   0x03
00E4 26E1      02731         ADDWF   FSR1L, F
00E6 5000      02732         MOVF    r0x10, W
00E8 B4D8      02733         BTFSC   STATUS, 2
00EA D000      02734         BRA     _00502_DS_
               02735 ;       .line   751; MainDemo.c memcpy(pool[i].ip.v, ip->v, sizeof(IP_ADDR));
00EC 0E00      02736         MOVLW   LOW(_pool)
00EE 2400      02737         ADDWF   r0x0e, W
00F0 6E00      02738         MOVWF   r0x10
00F2 0E00      02739         MOVLW   HIGH(_pool)
00F4 2000      02740         ADDWFC  r0x0f, W
00F6 6E00      02741         MOVWF   r0x11
00F8 5000      02742         MOVF    r0x11, W
00FA 6E00      02743         MOVWF   r0x11
00FC 5000      02744         MOVF    r0x10, W
00FE 6E00      02745         MOVWF   r0x10
0100 0E80      02746         MOVLW   0x80
0102 6E00      02747         MOVWF   r0x12
0104 0E00      02748         MOVLW   0x00
0106 6EE5      02749         MOVWF   POSTDEC1
0108 0E04      02750         MOVLW   0x04
010A 6EE5      02751         MOVWF   POSTDEC1
010C 5000      02752         MOVF    r0x02, W
010E 6EE5      02753         MOVWF   POSTDEC1
0110 5000      02754         MOVF    r0x01, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0112 6EE5      02755         MOVWF   POSTDEC1
0114 5000      02756         MOVF    r0x00, W
0116 6EE5      02757         MOVWF   POSTDEC1
0118 5000      02758         MOVF    r0x12, W
011A 6EE5      02759         MOVWF   POSTDEC1
011C 5000      02760         MOVF    r0x11, W
011E 6EE5      02761         MOVWF   POSTDEC1
0120 5000      02762         MOVF    r0x10, W
0122 6EE5      02763         MOVWF   POSTDEC1
0124 EC00 F000 02764         CALL    _memcpy
0128 0E08      02765         MOVLW   0x08
012A 26E1      02766         ADDWF   FSR1L, F
               02767 ;       .line   752; MainDemo.c memcpy(pool[i].mac.v, mac->v, sizeof(MAC_ADDR));
012C 0E00      02768         MOVLW   LOW(_pool)
012E 2400      02769         ADDWF   r0x0e, W
0130 6E00      02770         MOVWF   r0x10
0132 0E00      02771         MOVLW   HIGH(_pool)
0134 2000      02772         ADDWFC  r0x0f, W
0136 6E00      02773         MOVWF   r0x11
0138 0E04      02774         MOVLW   0x04
013A 2600      02775         ADDWF   r0x10, F
013C B0D8      02776         BTFSC   STATUS, 0
013E 2A00      02777         INCF    r0x11, F
0140 5000      02778         MOVF    r0x11, W
0142 6E00      02779         MOVWF   r0x11
0144 5000      02780         MOVF    r0x10, W
0146 6E00      02781         MOVWF   r0x10
0148 0E80      02782         MOVLW   0x80
014A 6E00      02783         MOVWF   r0x12
014C 0E00      02784         MOVLW   0x00
014E 6EE5      02785         MOVWF   POSTDEC1
0150 0E06      02786         MOVLW   0x06
0152 6EE5      02787         MOVWF   POSTDEC1
0154 5000      02788         MOVF    r0x05, W
0156 6EE5      02789         MOVWF   POSTDEC1
0158 5000      02790         MOVF    r0x04, W
015A 6EE5      02791         MOVWF   POSTDEC1
015C 5000      02792         MOVF    r0x03, W
015E 6EE5      02793         MOVWF   POSTDEC1
0160 5000      02794         MOVF    r0x12, W
0162 6EE5      02795         MOVWF   POSTDEC1
0164 5000      02796         MOVF    r0x11, W
0166 6EE5      02797         MOVWF   POSTDEC1
0168 5000      02798         MOVF    r0x10, W
016A 6EE5      02799         MOVWF   POSTDEC1
016C EC00 F000 02800         CALL    _memcpy
0170 0E08      02801         MOVLW   0x08
0172 26E1      02802         ADDWF   FSR1L, F
               02803 ;       .line   753; MainDemo.c pool[i].client_leasetime = CLIENT_LEASE_TIME;
0174 0E00      02804         MOVLW   LOW(_pool)
0176 2400      02805         ADDWF   r0x0e, W
0178 6E00      02806         MOVWF   r0x10
017A 0E00      02807         MOVLW   HIGH(_pool)
017C 2000      02808         ADDWFC  r0x0f, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
017E 6E00      02809         MOVWF   r0x11
0180 5000      02810         MOVF    r0x10, W
0182 0F0C      02811         ADDLW   0x0c
0184 6E00      02812         MOVWF   r0x12
0186 0E00      02813         MOVLW   0x00
0188 2000      02814         ADDWFC  r0x11, W
018A 6E00      02815         MOVWF   r0x13
018C C000 FFE9 02816         MOVFF   r0x12, FSR0L
0190 C000 FFEA 02817         MOVFF   r0x13, FSR0H
0194 0E2C      02818         MOVLW   0x2c
0196 6EEE      02819         MOVWF   POSTINC0
0198 0E01      02820         MOVLW   0x01
019A 6EEE      02821         MOVWF   POSTINC0
019C 0E00      02822         MOVLW   0x00
019E 6EEE      02823         MOVWF   POSTINC0
01A0 0E00      02824         MOVLW   0x00
01A2 6EEF      02825         MOVWF   INDF0
               02826 ;       .line   754; MainDemo.c pool[i].server_leasetime = leasetime;
01A4 5000      02827         MOVF    r0x10, W
01A6 0F10      02828         ADDLW   0x10
01A8 6E00      02829         MOVWF   r0x12
01AA 0E00      02830         MOVLW   0x00
01AC 2000      02831         ADDWFC  r0x11, W
01AE 6E00      02832         MOVWF   r0x13
01B0 C000 FFE9 02833         MOVFF   r0x12, FSR0L
01B4 C000 FFEA 02834         MOVFF   r0x13, FSR0H
01B8 C000 FFEE 02835         MOVFF   r0x06, POSTINC0
01BC C000 FFEE 02836         MOVFF   r0x07, POSTINC0
01C0 C000 FFEE 02837         MOVFF   r0x08, POSTINC0
01C4 C000 FFEF 02838         MOVFF   r0x09, INDF0
               02839 ;       .line   755; MainDemo.c pool[i].terms_missed = terms_missed_tmp;
01C8 0E0A      02840         MOVLW   0x0a
01CA 2600      02841         ADDWF   r0x10, F
01CC B0D8      02842         BTFSC   STATUS, 0
01CE 2A00      02843         INCF    r0x11, F
01D0 C000 FFE9 02844         MOVFF   r0x10, FSR0L
01D4 C000 FFEA 02845         MOVFF   r0x11, FSR0H
01D8 C000 FFEE 02846         MOVFF   r0x0a, POSTINC0
01DC C000 FFEF 02847         MOVFF   r0x0b, INDF0
               02848 ;       .line   756; MainDemo.c return TRUE;
01E0 0E01      02849         MOVLW   0x01
01E2 D000      02850         BRA     _00504_DS_
01E4 02851 _00502_DS_:
               02852 ;       .line   749; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
01E4 0E14      02853         MOVLW   0x14
01E6 2600      02854         ADDWF   r0x0e, F
01E8 B0D8      02855         BTFSC   STATUS, 0
01EA 2A00      02856         INCF    r0x0f, F
01EC 2A00      02857         INCF    r0x0c, F
01EE B0D8      02858         BTFSC   STATUS, 0
01F0 2A00      02859         INCF    r0x0d, F
01F2 D000      02860         BRA     _00500_DS_
01F4 02861 _00503_DS_:
               02862 ;       .line   759; MainDemo.c return FALSE;
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01F4 6AE8      02863         CLRF    WREG
01F6 02864 _00504_DS_:
01F6 CFE4 F000 02865         MOVFF   PREINC1, r0x13
01FA CFE4 F000 02866         MOVFF   PREINC1, r0x12
01FE CFE4 F000 02867         MOVFF   PREINC1, r0x11
0202 CFE4 F000 02868         MOVFF   PREINC1, r0x10
0206 CFE4 F000 02869         MOVFF   PREINC1, r0x0f
020A CFE4 F000 02870         MOVFF   PREINC1, r0x0e
020E CFE4 F000 02871         MOVFF   PREINC1, r0x0d
0212 CFE4 F000 02872         MOVFF   PREINC1, r0x0c
0216 CFE4 F000 02873         MOVFF   PREINC1, r0x0b
021A CFE4 F000 02874         MOVFF   PREINC1, r0x0a
021E CFE4 F000 02875         MOVFF   PREINC1, r0x09
0222 CFE4 F000 02876         MOVFF   PREINC1, r0x08
0226 CFE4 F000 02877         MOVFF   PREINC1, r0x07
022A CFE4 F000 02878         MOVFF   PREINC1, r0x06
022E CFE4 F000 02879         MOVFF   PREINC1, r0x05
0232 CFE4 F000 02880         MOVFF   PREINC1, r0x04
0236 CFE4 F000 02881         MOVFF   PREINC1, r0x03
023A CFE4 F000 02882         MOVFF   PREINC1, r0x02
023E CFE4 F000 02883         MOVFF   PREINC1, r0x01
0242 CFE4 F000 02884         MOVFF   PREINC1, r0x00
0246 CFE4 FFD9 02885         MOVFF   PREINC1, FSR2L
024A 0012      02886         RETURN  
               02887 
               02888 ; ; Starting pCode block
               02889 S_MainDemo__initializeItem      code
0000 02890 _initializeItem:
               02891 ;       .line   732; MainDemo.c void initializeItem(POOL_ITEM *p){
0000 CFD9 FFE5 02892         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02893         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02894         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02895         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02896         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02897         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02898         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02899         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02900         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02901         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02902         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 02903         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 02904         MOVFF   r0x0a, POSTDEC1
0034 0E02      02905         MOVLW   0x02
0036 CFDB F000 02906         MOVFF   PLUSW2, r0x00
003A 0E03      02907         MOVLW   0x03
003C CFDB F000 02908         MOVFF   PLUSW2, r0x01
0040 0E04      02909         MOVLW   0x04
0042 CFDB F000 02910         MOVFF   PLUSW2, r0x02
               02911 ;       .line   734; MainDemo.c for(j=0; j<4; j++){
0046 6A00      02912         CLRF    r0x03
0048 6A00      02913         CLRF    r0x04
004A 02914 _00476_DS_:
004A 5000      02915         MOVF    r0x04, W
004C 0F80      02916         ADDLW   0x80
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004E 0F80      02917         ADDLW   0x80
0050 E100      02918         BNZ     _00492_DS_
0052 0E04      02919         MOVLW   0x04
0054 5C00      02920         SUBWF   r0x03, W
0056 02921 _00492_DS_:
0056 E200      02922         BC      _00479_DS_
               02923 ;       .line   735; MainDemo.c p->ip.v[j] = 0;
0058 5000      02924         MOVF    r0x03, W
005A 2400      02925         ADDWF   r0x00, W
005C 6E00      02926         MOVWF   r0x05
005E 5000      02927         MOVF    r0x04, W
0060 2000      02928         ADDWFC  r0x01, W
0062 6E00      02929         MOVWF   r0x06
0064 6AE8      02930         CLRF    WREG
0066 BE00      02931         BTFSC   r0x04, 7
0068 68E8      02932         SETF    WREG
006A 2000      02933         ADDWFC  r0x02, W
006C 6E00      02934         MOVWF   r0x07
006E 0E00      02935         MOVLW   0x00
0070 6EE5      02936         MOVWF   POSTDEC1
0072 C000 FFE9 02937         MOVFF   r0x05, FSR0L
0076 C000 FFF3 02938         MOVFF   r0x06, PRODL
007A 5000      02939         MOVF    r0x07, W
007C EC00 F000 02940         CALL    __gptrput1
               02941 ;       .line   734; MainDemo.c for(j=0; j<4; j++){
0080 2A00      02942         INCF    r0x03, F
0082 B0D8      02943         BTFSC   STATUS, 0
0084 2A00      02944         INCF    r0x04, F
0086 D000      02945         BRA     _00476_DS_
0088 02946 _00479_DS_:
               02947 ;       .line   739; MainDemo.c for(j=0; j<6; j++){
0088 5000      02948         MOVF    r0x00, W
008A 0F04      02949         ADDLW   0x04
008C 6E00      02950         MOVWF   r0x03
008E 0E00      02951         MOVLW   0x00
0090 2000      02952         ADDWFC  r0x01, W
0092 6E00      02953         MOVWF   r0x04
0094 0E00      02954         MOVLW   0x00
0096 2000      02955         ADDWFC  r0x02, W
0098 6E00      02956         MOVWF   r0x05
009A 6A00      02957         CLRF    r0x06
009C 6A00      02958         CLRF    r0x07
009E 02959 _00480_DS_:
009E 5000      02960         MOVF    r0x07, W
00A0 0F80      02961         ADDLW   0x80
00A2 0F80      02962         ADDLW   0x80
00A4 E100      02963         BNZ     _00493_DS_
00A6 0E06      02964         MOVLW   0x06
00A8 5C00      02965         SUBWF   r0x06, W
00AA 02966 _00493_DS_:
00AA E200      02967         BC      _00483_DS_
               02968 ;       .line   740; MainDemo.c p->mac.v[j] = 0;
00AC 5000      02969         MOVF    r0x06, W
00AE 2400      02970         ADDWF   r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 6E00      02971         MOVWF   r0x08
00B2 5000      02972         MOVF    r0x07, W
00B4 2000      02973         ADDWFC  r0x04, W
00B6 6E00      02974         MOVWF   r0x09
00B8 6AE8      02975         CLRF    WREG
00BA BE00      02976         BTFSC   r0x07, 7
00BC 68E8      02977         SETF    WREG
00BE 2000      02978         ADDWFC  r0x05, W
00C0 6E00      02979         MOVWF   r0x0a
00C2 0E00      02980         MOVLW   0x00
00C4 6EE5      02981         MOVWF   POSTDEC1
00C6 C000 FFE9 02982         MOVFF   r0x08, FSR0L
00CA C000 FFF3 02983         MOVFF   r0x09, PRODL
00CE 5000      02984         MOVF    r0x0a, W
00D0 EC00 F000 02985         CALL    __gptrput1
               02986 ;       .line   739; MainDemo.c for(j=0; j<6; j++){
00D4 2A00      02987         INCF    r0x06, F
00D6 B0D8      02988         BTFSC   STATUS, 0
00D8 2A00      02989         INCF    r0x07, F
00DA D000      02990         BRA     _00480_DS_
00DC 02991 _00483_DS_:
               02992 ;       .line   742; MainDemo.c p->terms_missed = 0;
00DC 5000      02993         MOVF    r0x00, W
00DE 0F0A      02994         ADDLW   0x0a
00E0 6E00      02995         MOVWF   r0x03
00E2 0E00      02996         MOVLW   0x00
00E4 2000      02997         ADDWFC  r0x01, W
00E6 6E00      02998         MOVWF   r0x04
00E8 0E00      02999         MOVLW   0x00
00EA 2000      03000         ADDWFC  r0x02, W
00EC 6E00      03001         MOVWF   r0x05
00EE 0E00      03002         MOVLW   0x00
00F0 6EE5      03003         MOVWF   POSTDEC1
00F2 0E00      03004         MOVLW   0x00
00F4 6EF4      03005         MOVWF   PRODH
00F6 C000 FFE9 03006         MOVFF   r0x03, FSR0L
00FA C000 FFF3 03007         MOVFF   r0x04, PRODL
00FE 5000      03008         MOVF    r0x05, W
0100 EC00 F000 03009         CALL    __gptrput2
               03010 ;       .line   743; MainDemo.c p->client_leasetime = 0;
0104 5000      03011         MOVF    r0x00, W
0106 0F0C      03012         ADDLW   0x0c
0108 6E00      03013         MOVWF   r0x03
010A 0E00      03014         MOVLW   0x00
010C 2000      03015         ADDWFC  r0x01, W
010E 6E00      03016         MOVWF   r0x04
0110 0E00      03017         MOVLW   0x00
0112 2000      03018         ADDWFC  r0x02, W
0114 6E00      03019         MOVWF   r0x05
0116 0E00      03020         MOVLW   0x00
0118 6EE5      03021         MOVWF   POSTDEC1
011A 0E00      03022         MOVLW   0x00
011C 6EF4      03023         MOVWF   PRODH
011E 0E00      03024         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0120 6EF6      03025         MOVWF   TBLPTRL
0122 0E00      03026         MOVLW   0x00
0124 6EF7      03027         MOVWF   TBLPTRH
0126 C000 FFE9 03028         MOVFF   r0x03, FSR0L
012A C000 FFF3 03029         MOVFF   r0x04, PRODL
012E 5000      03030         MOVF    r0x05, W
0130 EC00 F000 03031         CALL    __gptrput4
               03032 ;       .line   744; MainDemo.c p->server_leasetime = 0;
0134 0E10      03033         MOVLW   0x10
0136 2600      03034         ADDWF   r0x00, F
0138 0E00      03035         MOVLW   0x00
013A 2200      03036         ADDWFC  r0x01, F
013C 0E00      03037         MOVLW   0x00
013E 2200      03038         ADDWFC  r0x02, F
0140 0E00      03039         MOVLW   0x00
0142 6EE5      03040         MOVWF   POSTDEC1
0144 0E00      03041         MOVLW   0x00
0146 6EF4      03042         MOVWF   PRODH
0148 0E00      03043         MOVLW   0x00
014A 6EF6      03044         MOVWF   TBLPTRL
014C 0E00      03045         MOVLW   0x00
014E 6EF7      03046         MOVWF   TBLPTRH
0150 C000 FFE9 03047         MOVFF   r0x00, FSR0L
0154 C000 FFF3 03048         MOVFF   r0x01, PRODL
0158 5000      03049         MOVF    r0x02, W
015A EC00 F000 03050         CALL    __gptrput4
015E CFE4 F000 03051         MOVFF   PREINC1, r0x0a
0162 CFE4 F000 03052         MOVFF   PREINC1, r0x09
0166 CFE4 F000 03053         MOVFF   PREINC1, r0x08
016A CFE4 F000 03054         MOVFF   PREINC1, r0x07
016E CFE4 F000 03055         MOVFF   PREINC1, r0x06
0172 CFE4 F000 03056         MOVFF   PREINC1, r0x05
0176 CFE4 F000 03057         MOVFF   PREINC1, r0x04
017A CFE4 F000 03058         MOVFF   PREINC1, r0x03
017E CFE4 F000 03059         MOVFF   PREINC1, r0x02
0182 CFE4 F000 03060         MOVFF   PREINC1, r0x01
0186 CFE4 F000 03061         MOVFF   PREINC1, r0x00
018A CFE4 FFD9 03062         MOVFF   PREINC1, FSR2L
018E 0012      03063         RETURN  
               03064 
               03065 ; ; Starting pCode block
               03066 S_MainDemo__initializeClientDB  code
0000 03067 _initializeClientDB:
               03068 ;       .line   724; MainDemo.c void initializeClientDB(){
0000 CFD9 FFE5 03069         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03070         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03071         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03072         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03073         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03074         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03075         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03076         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03077         MOVFF   r0x06, POSTDEC1
               03078 ;       .line   726; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0024 6A00      03079         CLRF    r0x00
0026 6A00      03080         CLRF    r0x01
0028 6A00      03081         CLRF    r0x02
002A 6A00      03082         CLRF    r0x03
002C 03083 _00462_DS_:
002C 5000      03084         MOVF    r0x01, W
002E 0F80      03085         ADDLW   0x80
0030 0F80      03086         ADDLW   0x80
0032 E100      03087         BNZ     _00471_DS_
0034 0E0A      03088         MOVLW   0x0a
0036 5C00      03089         SUBWF   r0x00, W
0038 03090 _00471_DS_:
0038 E200      03091         BC      _00466_DS_
               03092 ;       .line   727; MainDemo.c initializeItem(&pool[i]);
003A 0E00      03093         MOVLW   LOW(_pool)
003C 2400      03094         ADDWF   r0x02, W
003E 6E00      03095         MOVWF   r0x04
0040 0E00      03096         MOVLW   HIGH(_pool)
0042 2000      03097         ADDWFC  r0x03, W
0044 6E00      03098         MOVWF   r0x05
0046 5000      03099         MOVF    r0x05, W
0048 6E00      03100         MOVWF   r0x05
004A 5000      03101         MOVF    r0x04, W
004C 6E00      03102         MOVWF   r0x04
004E 0E80      03103         MOVLW   0x80
0050 6E00      03104         MOVWF   r0x06
0052 5000      03105         MOVF    r0x06, W
0054 6EE5      03106         MOVWF   POSTDEC1
0056 5000      03107         MOVF    r0x05, W
0058 6EE5      03108         MOVWF   POSTDEC1
005A 5000      03109         MOVF    r0x04, W
005C 6EE5      03110         MOVWF   POSTDEC1
005E EC00 F000 03111         CALL    _initializeItem
0062 0E03      03112         MOVLW   0x03
0064 26E1      03113         ADDWF   FSR1L, F
               03114 ;       .line   726; MainDemo.c for(i=0; i<MAX_CLIENT; i++){
0066 0E14      03115         MOVLW   0x14
0068 2600      03116         ADDWF   r0x02, F
006A B0D8      03117         BTFSC   STATUS, 0
006C 2A00      03118         INCF    r0x03, F
006E 2A00      03119         INCF    r0x00, F
0070 B0D8      03120         BTFSC   STATUS, 0
0072 2A00      03121         INCF    r0x01, F
0074 D000      03122         BRA     _00462_DS_
0076 03123 _00466_DS_:
0076 CFE4 F000 03124         MOVFF   PREINC1, r0x06
007A CFE4 F000 03125         MOVFF   PREINC1, r0x05
007E CFE4 F000 03126         MOVFF   PREINC1, r0x04
0082 CFE4 F000 03127         MOVFF   PREINC1, r0x03
0086 CFE4 F000 03128         MOVFF   PREINC1, r0x02
008A CFE4 F000 03129         MOVFF   PREINC1, r0x01
008E CFE4 F000 03130         MOVFF   PREINC1, r0x00
0092 CFE4 FFD9 03131         MOVFF   PREINC1, FSR2L
0096 0012      03132         RETURN  
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               03133 
               03134 ; ; Starting pCode block
               03135 S_MainDemo__getLeaseFromAck     code
0000 03136 _getLeaseFromAck:
               03137 ;       .line   698; MainDemo.c BOOL getLeaseFromAck(DWORD *lease_time, BYTE *dhcp_header, unsigned int dhcp_header_length){
0000 CFD9 FFE5 03138         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03139         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03140         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03141         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03142         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03143         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03144         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03145         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03146         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03147         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03148         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03149         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 03150         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 03151         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 03152         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 03153         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 03154         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 03155         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 03156         MOVFF   r0x10, POSTDEC1
004C 0E02      03157         MOVLW   0x02
004E CFDB F000 03158         MOVFF   PLUSW2, r0x00
0052 0E03      03159         MOVLW   0x03
0054 CFDB F000 03160         MOVFF   PLUSW2, r0x01
0058 0E04      03161         MOVLW   0x04
005A CFDB F000 03162         MOVFF   PLUSW2, r0x02
005E 0E05      03163         MOVLW   0x05
0060 CFDB F000 03164         MOVFF   PLUSW2, r0x03
0064 0E06      03165         MOVLW   0x06
0066 CFDB F000 03166         MOVFF   PLUSW2, r0x04
006A 0E07      03167         MOVLW   0x07
006C CFDB F000 03168         MOVFF   PLUSW2, r0x05
0070 0E08      03169         MOVLW   0x08
0072 CFDB F000 03170         MOVFF   PLUSW2, r0x06
0076 0E09      03171         MOVLW   0x09
0078 CFDB F000 03172         MOVFF   PLUSW2, r0x07
               03173 ;       .line   701; MainDemo.c i=0;
007C 6A00      03174         CLRF    r0x08
007E 6A00      03175         CLRF    r0x09
0080 03176 _00447_DS_:
               03177 ;       .line   703; MainDemo.c while(i<dhcp_header_length){
0080 C000 F000 03178         MOVFF   r0x08, r0x0a
0084 C000 F000 03179         MOVFF   r0x09, r0x0b
0088 5000      03180         MOVF    r0x07, W
008A 5C00      03181         SUBWF   r0x0b, W
008C E100      03182         BNZ     _00455_DS_
008E 5000      03183         MOVF    r0x06, W
0090 5C00      03184         SUBWF   r0x0a, W
0092 03185 _00455_DS_:
0092 B0D8      03186         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0094 D000      03187         BRA     _00449_DS_
               03188 ;       .line   704; MainDemo.c opt = dhcp_header[i];
0096 5000      03189         MOVF    r0x08, W
0098 2400      03190         ADDWF   r0x03, W
009A 6E00      03191         MOVWF   r0x0a
009C 5000      03192         MOVF    r0x09, W
009E 2000      03193         ADDWFC  r0x04, W
00A0 6E00      03194         MOVWF   r0x0b
00A2 6AE8      03195         CLRF    WREG
00A4 BE00      03196         BTFSC   r0x09, 7
00A6 68E8      03197         SETF    WREG
00A8 2000      03198         ADDWFC  r0x05, W
00AA 6E00      03199         MOVWF   r0x0c
00AC C000 FFE9 03200         MOVFF   r0x0a, FSR0L
00B0 C000 FFF3 03201         MOVFF   r0x0b, PRODL
00B4 5000      03202         MOVF    r0x0c, W
00B6 EC00 F000 03203         CALL    __gptrget1
00BA 6E00      03204         MOVWF   r0x0a
               03205 ;       .line   705; MainDemo.c i++;
00BC 2A00      03206         INCF    r0x08, F
00BE B0D8      03207         BTFSC   STATUS, 0
00C0 2A00      03208         INCF    r0x09, F
               03209 ;       .line   706; MainDemo.c length = dhcp_header[i];
00C2 5000      03210         MOVF    r0x08, W
00C4 2400      03211         ADDWF   r0x03, W
00C6 6E00      03212         MOVWF   r0x0b
00C8 5000      03213         MOVF    r0x09, W
00CA 2000      03214         ADDWFC  r0x04, W
00CC 6E00      03215         MOVWF   r0x0c
00CE 6AE8      03216         CLRF    WREG
00D0 BE00      03217         BTFSC   r0x09, 7
00D2 68E8      03218         SETF    WREG
00D4 2000      03219         ADDWFC  r0x05, W
00D6 6E00      03220         MOVWF   r0x0d
00D8 C000 FFE9 03221         MOVFF   r0x0b, FSR0L
00DC C000 FFF3 03222         MOVFF   r0x0c, PRODL
00E0 5000      03223         MOVF    r0x0d, W
00E2 EC00 F000 03224         CALL    __gptrget1
00E6 6E00      03225         MOVWF   r0x0b
               03226 ;       .line   707; MainDemo.c i++;
00E8 2A00      03227         INCF    r0x08, F
00EA B0D8      03228         BTFSC   STATUS, 0
00EC 2A00      03229         INCF    r0x09, F
               03230 ;       .line   709; MainDemo.c if(opt == DHCP_IP_LEASE_TIME){
00EE 6A00      03231         CLRF    r0x0c
00F0 5000      03232         MOVF    r0x0a, W
00F2 0A33      03233         XORLW   0x33
00F4 E100      03234         BNZ     _00456_DS_
00F6 5000      03235         MOVF    r0x0c, W
00F8 E000      03236         BZ      _00457_DS_
00FA 03237 _00456_DS_:
00FA D000      03238         BRA     _00446_DS_
00FC 03239 _00457_DS_:
               03240 ;       .line   710; MainDemo.c *lease_time = dhcp_header[i+3]|dhcp_header[i+2]<<8|dhcp_header[i+1]<<16|dhcp_header[i]<<24;
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FC 5000      03241         MOVF    r0x08, W
00FE 0F03      03242         ADDLW   0x03
0100 6E00      03243         MOVWF   r0x0a
0102 0E00      03244         MOVLW   0x00
0104 2000      03245         ADDWFC  r0x09, W
0106 6E00      03246         MOVWF   r0x0c
0108 6A00      03247         CLRF    r0x0d
010A BE00      03248         BTFSC   r0x0c, 7
010C 6800      03249         SETF    r0x0d
010E 5000      03250         MOVF    r0x03, W
0110 2600      03251         ADDWF   r0x0a, F
0112 5000      03252         MOVF    r0x04, W
0114 2200      03253         ADDWFC  r0x0c, F
0116 5000      03254         MOVF    r0x05, W
0118 2200      03255         ADDWFC  r0x0d, F
011A C000 FFE9 03256         MOVFF   r0x0a, FSR0L
011E C000 FFF3 03257         MOVFF   r0x0c, PRODL
0122 5000      03258         MOVF    r0x0d, W
0124 EC00 F000 03259         CALL    __gptrget1
0128 6E00      03260         MOVWF   r0x0a
012A 5000      03261         MOVF    r0x08, W
012C 0F02      03262         ADDLW   0x02
012E 6E00      03263         MOVWF   r0x0c
0130 0E00      03264         MOVLW   0x00
0132 2000      03265         ADDWFC  r0x09, W
0134 6E00      03266         MOVWF   r0x0d
0136 6A00      03267         CLRF    r0x0e
0138 BE00      03268         BTFSC   r0x0d, 7
013A 6800      03269         SETF    r0x0e
013C 5000      03270         MOVF    r0x03, W
013E 2600      03271         ADDWF   r0x0c, F
0140 5000      03272         MOVF    r0x04, W
0142 2200      03273         ADDWFC  r0x0d, F
0144 5000      03274         MOVF    r0x05, W
0146 2200      03275         ADDWFC  r0x0e, F
0148 C000 FFE9 03276         MOVFF   r0x0c, FSR0L
014C C000 FFF3 03277         MOVFF   r0x0d, PRODL
0150 5000      03278         MOVF    r0x0e, W
0152 EC00 F000 03279         CALL    __gptrget1
0156 6E00      03280         MOVWF   r0x0c
0158 6A00      03281         CLRF    r0x0d
015A 5000      03282         MOVF    r0x0c, W
015C 6E00      03283         MOVWF   r0x0f
015E 6A00      03284         CLRF    r0x0e
0160 6A00      03285         CLRF    r0x10
0162 5000      03286         MOVF    r0x0a, W
0164 1200      03287         IORWF   r0x0e, F
0166 5000      03288         MOVF    r0x10, W
0168 1200      03289         IORWF   r0x0f, F
016A 6AE8      03290         CLRF    WREG
016C BE00      03291         BTFSC   r0x0f, 7
016E 0EFF      03292         MOVLW   0xff
0170 6E00      03293         MOVWF   r0x0a
0172 6E00      03294         MOVWF   r0x0c
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0174 C000 FFE5 03295         MOVFF   r0x0e, POSTDEC1
0178 C000 FFF4 03296         MOVFF   r0x0f, PRODH
017C C000 FFF6 03297         MOVFF   r0x0a, TBLPTRL
0180 C000 FFF7 03298         MOVFF   r0x0c, TBLPTRH
0184 C000 FFE9 03299         MOVFF   r0x00, FSR0L
0188 C000 FFF3 03300         MOVFF   r0x01, PRODL
018C 5000      03301         MOVF    r0x02, W
018E EC00 F000 03302         CALL    __gptrput4
               03303 ;       .line   711; MainDemo.c return TRUE;
0192 0E01      03304         MOVLW   0x01
0194 D000      03305         BRA     _00450_DS_
0196 03306 _00446_DS_:
               03307 ;       .line   713; MainDemo.c i+=length;
0196 6A00      03308         CLRF    r0x0a
0198 5000      03309         MOVF    r0x0b, W
019A 2600      03310         ADDWF   r0x08, F
019C 5000      03311         MOVF    r0x0a, W
019E 2200      03312         ADDWFC  r0x09, F
01A0 D000      03313         BRA     _00447_DS_
01A2 03314 _00449_DS_:
               03315 ;       .line   715; MainDemo.c return FALSE;    
01A2 6AE8      03316         CLRF    WREG
01A4 03317 _00450_DS_:
01A4 CFE4 F000 03318         MOVFF   PREINC1, r0x10
01A8 CFE4 F000 03319         MOVFF   PREINC1, r0x0f
01AC CFE4 F000 03320         MOVFF   PREINC1, r0x0e
01B0 CFE4 F000 03321         MOVFF   PREINC1, r0x0d
01B4 CFE4 F000 03322         MOVFF   PREINC1, r0x0c
01B8 CFE4 F000 03323         MOVFF   PREINC1, r0x0b
01BC CFE4 F000 03324         MOVFF   PREINC1, r0x0a
01C0 CFE4 F000 03325         MOVFF   PREINC1, r0x09
01C4 CFE4 F000 03326         MOVFF   PREINC1, r0x08
01C8 CFE4 F000 03327         MOVFF   PREINC1, r0x07
01CC CFE4 F000 03328         MOVFF   PREINC1, r0x06
01D0 CFE4 F000 03329         MOVFF   PREINC1, r0x05
01D4 CFE4 F000 03330         MOVFF   PREINC1, r0x04
01D8 CFE4 F000 03331         MOVFF   PREINC1, r0x03
01DC CFE4 F000 03332         MOVFF   PREINC1, r0x02
01E0 CFE4 F000 03333         MOVFF   PREINC1, r0x01
01E4 CFE4 F000 03334         MOVFF   PREINC1, r0x00
01E8 CFE4 FFD9 03335         MOVFF   PREINC1, FSR2L
01EC 0012      03336         RETURN  
               03337 
               03338 ; ; Starting pCode block
               03339 S_MainDemo__extractBootProtHeader       code
0000 03340 _extractBootProtHeader:
               03341 ;       .line   650; MainDemo.c BOOL extractBootProtHeader(BYTE *dhcp_type, BOOTP_HEADER *bootp_header,
0000 CFD9 FFE5 03342         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03343         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03344         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03345         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03346         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03347         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03348         MOVFF   r0x04, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001C C000 FFE5 03349         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03350         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03351         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03352         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03353         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 03354         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 03355         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 03356         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 03357         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 03358         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 03359         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 03360         MOVFF   r0x10, POSTDEC1
004C 0E02      03361         MOVLW   0x02
004E CFDB F000 03362         MOVFF   PLUSW2, r0x00
0052 0E03      03363         MOVLW   0x03
0054 CFDB F000 03364         MOVFF   PLUSW2, r0x01
0058 0E04      03365         MOVLW   0x04
005A CFDB F000 03366         MOVFF   PLUSW2, r0x02
005E 0E05      03367         MOVLW   0x05
0060 CFDB F000 03368         MOVFF   PLUSW2, r0x03
0064 0E06      03369         MOVLW   0x06
0066 CFDB F000 03370         MOVFF   PLUSW2, r0x04
006A 0E07      03371         MOVLW   0x07
006C CFDB F000 03372         MOVFF   PLUSW2, r0x05
0070 0E08      03373         MOVLW   0x08
0072 CFDB F000 03374         MOVFF   PLUSW2, r0x06
0076 0E09      03375         MOVLW   0x09
0078 CFDB F000 03376         MOVFF   PLUSW2, r0x07
007C 0E0A      03377         MOVLW   0x0a
007E CFDB F000 03378         MOVFF   PLUSW2, r0x08
0082 0E0B      03379         MOVLW   0x0b
0084 CFDB F000 03380         MOVFF   PLUSW2, r0x09
0088 0E0C      03381         MOVLW   0x0c
008A CFDB F000 03382         MOVFF   PLUSW2, r0x0a
008E 0E0D      03383         MOVLW   0x0d
0090 CFDB F000 03384         MOVFF   PLUSW2, r0x0b
0094 0E0E      03385         MOVLW   0x0e
0096 CFDB F000 03386         MOVFF   PLUSW2, r0x0c
009A 0E0F      03387         MOVLW   0x0f
009C CFDB F000 03388         MOVFF   PLUSW2, r0x0d
00A0 0E10      03389         MOVLW   0x10
00A2 CFDB F000 03390         MOVFF   PLUSW2, r0x0e
00A6 03391 _00395_DS_:
               03392 ;       .line   662; MainDemo.c while(!UDPIsGetReady(*receiver_socket));
00A6 C000 FFE9 03393         MOVFF   r0x0c, FSR0L
00AA C000 FFF3 03394         MOVFF   r0x0d, PRODL
00AE 5000      03395         MOVF    r0x0e, W
00B0 EC00 F000 03396         CALL    __gptrget1
00B4 6E00      03397         MOVWF   r0x0f
00B6 5000      03398         MOVF    r0x0f, W
00B8 6EE5      03399         MOVWF   POSTDEC1
00BA EC00 F000 03400         CALL    _UDPIsGetReady
00BE 6E00      03401         MOVWF   r0x0f
00C0 CFF3 F000 03402         MOVFF   PRODL, r0x10
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C4 2AE1      03403         INCF    FSR1L, F
00C6 5000      03404         MOVF    r0x0f, W
00C8 1000      03405         IORWF   r0x10, W
00CA E000      03406         BZ      _00395_DS_
               03407 ;       .line   664; MainDemo.c UDPGetArray((BYTE*)bootp_header, sizeof(BOOTP_HEADER)); //Read 34bytes
00CC 0E00      03408         MOVLW   0x00
00CE 6EE5      03409         MOVWF   POSTDEC1
00D0 0E22      03410         MOVLW   0x22
00D2 6EE5      03411         MOVWF   POSTDEC1
00D4 5000      03412         MOVF    r0x05, W
00D6 6EE5      03413         MOVWF   POSTDEC1
00D8 5000      03414         MOVF    r0x04, W
00DA 6EE5      03415         MOVWF   POSTDEC1
00DC 5000      03416         MOVF    r0x03, W
00DE 6EE5      03417         MOVWF   POSTDEC1
00E0 EC00 F000 03418         CALL    _UDPGetArray
00E4 0E05      03419         MOVLW   0x05
00E6 26E1      03420         ADDWF   FSR1L, F
               03421 ;       .line   666; MainDemo.c if(bootp_header->HardwareType != 1 || bootp_header->HardwareLen != 6){
00E8 5000      03422         MOVF    r0x03, W
00EA 0F01      03423         ADDLW   0x01
00EC 6E00      03424         MOVWF   r0x0c
00EE 0E00      03425         MOVLW   0x00
00F0 2000      03426         ADDWFC  r0x04, W
00F2 6E00      03427         MOVWF   r0x0d
00F4 0E00      03428         MOVLW   0x00
00F6 2000      03429         ADDWFC  r0x05, W
00F8 6E00      03430         MOVWF   r0x0e
00FA C000 FFE9 03431         MOVFF   r0x0c, FSR0L
00FE C000 FFF3 03432         MOVFF   r0x0d, PRODL
0102 5000      03433         MOVF    r0x0e, W
0104 EC00 F000 03434         CALL    __gptrget1
0108 6E00      03435         MOVWF   r0x0c
010A 5000      03436         MOVF    r0x0c, W
010C 0A01      03437         XORLW   0x01
010E E100      03438         BNZ     _00398_DS_
0110 0E02      03439         MOVLW   0x02
0112 2600      03440         ADDWF   r0x03, F
0114 0E00      03441         MOVLW   0x00
0116 2200      03442         ADDWFC  r0x04, F
0118 0E00      03443         MOVLW   0x00
011A 2200      03444         ADDWFC  r0x05, F
011C C000 FFE9 03445         MOVFF   r0x03, FSR0L
0120 C000 FFF3 03446         MOVFF   r0x04, PRODL
0124 5000      03447         MOVF    r0x05, W
0126 EC00 F000 03448         CALL    __gptrget1
012A 6E00      03449         MOVWF   r0x03
012C 5000      03450         MOVF    r0x03, W
012E 0A06      03451         XORLW   0x06
0130 E000      03452         BZ      _00422_DS_
0132 03453 _00398_DS_:
               03454 ;       .line   667; MainDemo.c return FALSE;
0132 6AE8      03455         CLRF    WREG
0134 D000      03456         BRA     _00416_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0136 03457 _00422_DS_:
               03458 ;       .line   671; MainDemo.c for(i=0; i<skip_length; i++){
0136 6A00      03459         CLRF    r0x03
0138 6A00      03460         CLRF    r0x04
013A 03461 _00412_DS_:
013A 0E00      03462         MOVLW   0x00
013C 5C00      03463         SUBWF   r0x04, W
013E E100      03464         BNZ     _00434_DS_
0140 0ECA      03465         MOVLW   0xca
0142 5C00      03466         SUBWF   r0x03, W
0144 03467 _00434_DS_:
0144 E200      03468         BC      _00415_DS_
               03469 ;       .line   672; MainDemo.c UDPGet(&opt);
0146 0E00      03470         MOVLW   HIGH(_extractBootProtHeader_opt_1_1)
0148 6E00      03471         MOVWF   r0x0c
014A 0E00      03472         MOVLW   LOW(_extractBootProtHeader_opt_1_1)
014C 6E00      03473         MOVWF   r0x05
014E 0E80      03474         MOVLW   0x80
0150 6E00      03475         MOVWF   r0x0d
0152 5000      03476         MOVF    r0x0d, W
0154 6EE5      03477         MOVWF   POSTDEC1
0156 5000      03478         MOVF    r0x0c, W
0158 6EE5      03479         MOVWF   POSTDEC1
015A 5000      03480         MOVF    r0x05, W
015C 6EE5      03481         MOVWF   POSTDEC1
015E EC00 F000 03482         CALL    _UDPGet
0162 0E03      03483         MOVLW   0x03
0164 26E1      03484         ADDWF   FSR1L, F
               03485 ;       .line   671; MainDemo.c for(i=0; i<skip_length; i++){
0166 2A00      03486         INCF    r0x03, F
0168 B0D8      03487         BTFSC   STATUS, 0
016A 2A00      03488         INCF    r0x04, F
016C D000      03489         BRA     _00412_DS_
016E 03490 _00415_DS_:
               03491 ;       .line   675; MainDemo.c UDPGetArray((BYTE*)&cookie_checker, sizeof(DWORD));
016E 0E00      03492         MOVLW   HIGH(_extractBootProtHeader_cookie_checker_1_1)
0170 6E00      03493         MOVWF   r0x04
0172 0E00      03494         MOVLW   LOW(_extractBootProtHeader_cookie_checker_1_1)
0174 6E00      03495         MOVWF   r0x03
0176 0E80      03496         MOVLW   0x80
0178 6E00      03497         MOVWF   r0x05
017A 0E00      03498         MOVLW   0x00
017C 6EE5      03499         MOVWF   POSTDEC1
017E 0E04      03500         MOVLW   0x04
0180 6EE5      03501         MOVWF   POSTDEC1
0182 5000      03502         MOVF    r0x05, W
0184 6EE5      03503         MOVWF   POSTDEC1
0186 5000      03504         MOVF    r0x04, W
0188 6EE5      03505         MOVWF   POSTDEC1
018A 5000      03506         MOVF    r0x03, W
018C 6EE5      03507         MOVWF   POSTDEC1
018E EC00 F000 03508         CALL    _UDPGetArray
0192 0E05      03509         MOVLW   0x05
0194 26E1      03510         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0196 0000      03511         BANKSEL _extractBootProtHeader_cookie_checker_1_1
               03512 ;       .line   676; MainDemo.c if(cookie_checker != MAGIC_COOKIE){
0198 5100      03513         MOVF    _extractBootProtHeader_cookie_checker_1_1, W, B
019A 0000      03514         BANKSEL _MAGIC_COOKIE
019C 1900      03515         XORWF   _MAGIC_COOKIE, W, B
019E E100      03516         BNZ     _00436_DS_
01A0 0000      03517         BANKSEL (_extractBootProtHeader_cookie_checker_1_1 + 1)
01A2 5100      03518         MOVF    (_extractBootProtHeader_cookie_checker_1_1 + 1), W, B
01A4 0000      03519         BANKSEL (_MAGIC_COOKIE + 1)
01A6 1900      03520         XORWF   (_MAGIC_COOKIE + 1), W, B
01A8 E100      03521         BNZ     _00436_DS_
01AA 0000      03522         BANKSEL (_extractBootProtHeader_cookie_checker_1_1 + 2)
01AC 5100      03523         MOVF    (_extractBootProtHeader_cookie_checker_1_1 + 2), W, B
01AE 0000      03524         BANKSEL (_MAGIC_COOKIE + 2)
01B0 1900      03525         XORWF   (_MAGIC_COOKIE + 2), W, B
01B2 E100      03526         BNZ     _00436_DS_
01B4 0000      03527         BANKSEL (_extractBootProtHeader_cookie_checker_1_1 + 3)
01B6 5100      03528         MOVF    (_extractBootProtHeader_cookie_checker_1_1 + 3), W, B
01B8 0000      03529         BANKSEL (_MAGIC_COOKIE + 3)
01BA 1900      03530         XORWF   (_MAGIC_COOKIE + 3), W, B
01BC E000      03531         BZ      _00402_DS_
01BE 03532 _00436_DS_:
               03533 ;       .line   677; MainDemo.c return FALSE;
01BE 6AE8      03534         CLRF    WREG
01C0 D000      03535         BRA     _00416_DS_
01C2 03536 _00402_DS_:
               03537 ;       .line   680; MainDemo.c *dhcp_header_length = 0;
01C2 0E00      03538         MOVLW   0x00
01C4 6EE5      03539         MOVWF   POSTDEC1
01C6 0E00      03540         MOVLW   0x00
01C8 6EF4      03541         MOVWF   PRODH
01CA C000 FFE9 03542         MOVFF   r0x09, FSR0L
01CE C000 FFF3 03543         MOVFF   r0x0a, PRODL
01D2 5000      03544         MOVF    r0x0b, W
01D4 EC00 F000 03545         CALL    __gptrput2
               03546 ;       .line   681; MainDemo.c wrong_packet = TRUE;
01D8 0E01      03547         MOVLW   0x01
01DA 6E00      03548         MOVWF   r0x03
01DC 03549 _00409_DS_:
               03550 ;       .line   682; MainDemo.c while(UDPGet(&opt) && opt != DHCP_END_OPTION){
01DC 0E00      03551         MOVLW   HIGH(_extractBootProtHeader_opt_1_1)
01DE 6E00      03552         MOVWF   r0x05
01E0 0E00      03553         MOVLW   LOW(_extractBootProtHeader_opt_1_1)
01E2 6E00      03554         MOVWF   r0x04
01E4 0E80      03555         MOVLW   0x80
01E6 6E00      03556         MOVWF   r0x0c
01E8 5000      03557         MOVF    r0x0c, W
01EA 6EE5      03558         MOVWF   POSTDEC1
01EC 5000      03559         MOVF    r0x05, W
01EE 6EE5      03560         MOVWF   POSTDEC1
01F0 5000      03561         MOVF    r0x04, W
01F2 6EE5      03562         MOVWF   POSTDEC1
01F4 EC00 F000 03563         CALL    _UDPGet
01F8 6E00      03564         MOVWF   r0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01FA 0E03      03565         MOVLW   0x03
01FC 26E1      03566         ADDWF   FSR1L, F
01FE 5000      03567         MOVF    r0x04, W
0200 B4D8      03568         BTFSC   STATUS, 2
0202 D000      03569         BRA     _00411_DS_
0204 C000 F000 03570         MOVFF   _extractBootProtHeader_opt_1_1, r0x04
0208 6A00      03571         CLRF    r0x05
020A 5000      03572         MOVF    r0x04, W
020C 0AFF      03573         XORLW   0xff
020E E100      03574         BNZ     _00438_DS_
0210 5000      03575         MOVF    r0x05, W
0212 E100      03576         BNZ     _00438_DS_
0214 D000      03577         BRA     _00411_DS_
0216 03578 _00438_DS_:
               03579 ;       .line   683; MainDemo.c UDPGet(&length);
0216 0E00      03580         MOVLW   HIGH(_extractBootProtHeader_length_1_1)
0218 6E00      03581         MOVWF   r0x05
021A 0E00      03582         MOVLW   LOW(_extractBootProtHeader_length_1_1)
021C 6E00      03583         MOVWF   r0x04
021E 0E80      03584         MOVLW   0x80
0220 6E00      03585         MOVWF   r0x0c
0222 5000      03586         MOVF    r0x0c, W
0224 6EE5      03587         MOVWF   POSTDEC1
0226 5000      03588         MOVF    r0x05, W
0228 6EE5      03589         MOVWF   POSTDEC1
022A 5000      03590         MOVF    r0x04, W
022C 6EE5      03591         MOVWF   POSTDEC1
022E EC00 F000 03592         CALL    _UDPGet
0232 0E03      03593         MOVLW   0x03
0234 26E1      03594         ADDWF   FSR1L, F
               03595 ;       .line   684; MainDemo.c if(opt == DHCP_MESSAGE_TYPE){
0236 C000 F000 03596         MOVFF   _extractBootProtHeader_opt_1_1, r0x04
023A 6A00      03597         CLRF    r0x05
023C 5000      03598         MOVF    r0x04, W
023E 0A35      03599         XORLW   0x35
0240 E100      03600         BNZ     _00439_DS_
0242 5000      03601         MOVF    r0x05, W
0244 E000      03602         BZ      _00440_DS_
0246 03603 _00439_DS_:
0246 D000      03604         BRA     _00406_DS_
0248 03605 _00440_DS_:
               03606 ;       .line   685; MainDemo.c UDPGet(dhcp_type);
0248 5000      03607         MOVF    r0x02, W
024A 6EE5      03608         MOVWF   POSTDEC1
024C 5000      03609         MOVF    r0x01, W
024E 6EE5      03610         MOVWF   POSTDEC1
0250 5000      03611         MOVF    r0x00, W
0252 6EE5      03612         MOVWF   POSTDEC1
0254 EC00 F000 03613         CALL    _UDPGet
0258 0E03      03614         MOVLW   0x03
025A 26E1      03615         ADDWF   FSR1L, F
               03616 ;       .line   686; MainDemo.c wrong_packet = FALSE;
025C 6A00      03617         CLRF    r0x03
025E D000      03618         BRA     _00409_DS_
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0260 03619 _00406_DS_:
               03620 ;       .line   688; MainDemo.c else if(dhcp_header != NULL){
0260 5000      03621         MOVF    r0x06, W
0262 1000      03622         IORWF   r0x07, W
0264 1000      03623         IORWF   r0x08, W
0266 B4D8      03624         BTFSC   STATUS, 2
0268 D000      03625         BRA     _00409_DS_
               03626 ;       .line   689; MainDemo.c dhcp_header[*dhcp_header_length] = opt;
026A C000 FFE9 03627         MOVFF   r0x09, FSR0L
026E C000 FFF3 03628         MOVFF   r0x0a, PRODL
0272 5000      03629         MOVF    r0x0b, W
0274 EC00 F000 03630         CALL    __gptrget2
0278 6E00      03631         MOVWF   r0x04
027A CFF3 F000 03632         MOVFF   PRODL, r0x05
027E 5000      03633         MOVF    r0x04, W
0280 2400      03634         ADDWF   r0x06, W
0282 6E00      03635         MOVWF   r0x0c
0284 5000      03636         MOVF    r0x05, W
0286 2000      03637         ADDWFC  r0x07, W
0288 6E00      03638         MOVWF   r0x0d
028A 6AE8      03639         CLRF    WREG
028C BE00      03640         BTFSC   r0x05, 7
028E 68E8      03641         SETF    WREG
0290 2000      03642         ADDWFC  r0x08, W
0292 6E00      03643         MOVWF   r0x0e
0294 C000 FFE5 03644         MOVFF   _extractBootProtHeader_opt_1_1, POSTDEC1
0298 C000 FFE9 03645         MOVFF   r0x0c, FSR0L
029C C000 FFF3 03646         MOVFF   r0x0d, PRODL
02A0 5000      03647         MOVF    r0x0e, W
02A2 EC00 F000 03648         CALL    __gptrput1
               03649 ;       .line   690; MainDemo.c dhcp_header[*dhcp_header_length+1] = length;
02A6 5000      03650         MOVF    r0x04, W
02A8 0F01      03651         ADDLW   0x01
02AA 6E00      03652         MOVWF   r0x0c
02AC 0E00      03653         MOVLW   0x00
02AE 2000      03654         ADDWFC  r0x05, W
02B0 6E00      03655         MOVWF   r0x0d
02B2 6A00      03656         CLRF    r0x0e
02B4 BE00      03657         BTFSC   r0x0d, 7
02B6 6800      03658         SETF    r0x0e
02B8 5000      03659         MOVF    r0x06, W
02BA 2600      03660         ADDWF   r0x0c, F
02BC 5000      03661         MOVF    r0x07, W
02BE 2200      03662         ADDWFC  r0x0d, F
02C0 5000      03663         MOVF    r0x08, W
02C2 2200      03664         ADDWFC  r0x0e, F
02C4 C000 FFE5 03665         MOVFF   _extractBootProtHeader_length_1_1, POSTDEC1
02C8 C000 FFE9 03666         MOVFF   r0x0c, FSR0L
02CC C000 FFF3 03667         MOVFF   r0x0d, PRODL
02D0 5000      03668         MOVF    r0x0e, W
02D2 EC00 F000 03669         CALL    __gptrput1
               03670 ;       .line   691; MainDemo.c UDPGetArray(&dhcp_header[*dhcp_header_length+2], length);
02D6 0E02      03671         MOVLW   0x02
02D8 2600      03672         ADDWF   r0x04, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02DA B0D8      03673         BTFSC   STATUS, 0
02DC 2A00      03674         INCF    r0x05, F
02DE 6A00      03675         CLRF    r0x0c
02E0 BE00      03676         BTFSC   r0x05, 7
02E2 6800      03677         SETF    r0x0c
02E4 5000      03678         MOVF    r0x06, W
02E6 2600      03679         ADDWF   r0x04, F
02E8 5000      03680         MOVF    r0x07, W
02EA 2200      03681         ADDWFC  r0x05, F
02EC 5000      03682         MOVF    r0x08, W
02EE 2200      03683         ADDWFC  r0x0c, F
02F0 C000 F000 03684         MOVFF   _extractBootProtHeader_length_1_1, r0x0d
02F4 6A00      03685         CLRF    r0x0e
02F6 5000      03686         MOVF    r0x0e, W
02F8 6EE5      03687         MOVWF   POSTDEC1
02FA 5000      03688         MOVF    r0x0d, W
02FC 6EE5      03689         MOVWF   POSTDEC1
02FE 5000      03690         MOVF    r0x0c, W
0300 6EE5      03691         MOVWF   POSTDEC1
0302 5000      03692         MOVF    r0x05, W
0304 6EE5      03693         MOVWF   POSTDEC1
0306 5000      03694         MOVF    r0x04, W
0308 6EE5      03695         MOVWF   POSTDEC1
030A EC00 F000 03696         CALL    _UDPGetArray
030E 0E05      03697         MOVLW   0x05
0310 26E1      03698         ADDWF   FSR1L, F
               03699 ;       .line   692; MainDemo.c *dhcp_header_length += 2+length;
0312 C000 FFE9 03700         MOVFF   r0x09, FSR0L
0316 C000 FFF3 03701         MOVFF   r0x0a, PRODL
031A 5000      03702         MOVF    r0x0b, W
031C EC00 F000 03703         CALL    __gptrget2
0320 6E00      03704         MOVWF   r0x04
0322 CFF3 F000 03705         MOVFF   PRODL, r0x05
0326 C000 F000 03706         MOVFF   _extractBootProtHeader_length_1_1, r0x0c
032A 6A00      03707         CLRF    r0x0d
032C 0E02      03708         MOVLW   0x02
032E 2600      03709         ADDWF   r0x0c, F
0330 B0D8      03710         BTFSC   STATUS, 0
0332 2A00      03711         INCF    r0x0d, F
0334 5000      03712         MOVF    r0x0c, W
0336 2600      03713         ADDWF   r0x04, F
0338 5000      03714         MOVF    r0x0d, W
033A 2200      03715         ADDWFC  r0x05, F
033C C000 FFE5 03716         MOVFF   r0x04, POSTDEC1
0340 C000 FFF4 03717         MOVFF   r0x05, PRODH
0344 C000 FFE9 03718         MOVFF   r0x09, FSR0L
0348 C000 FFF3 03719         MOVFF   r0x0a, PRODL
034C 5000      03720         MOVF    r0x0b, W
034E EC00 F000 03721         CALL    __gptrput2
0352 D000      03722         BRA     _00409_DS_
0354 03723 _00411_DS_:
               03724 ;       .line   695; MainDemo.c return !wrong_packet;
0354 5000      03725         MOVF    r0x03, W
0356 80D8      03726         BSF     STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0358 66E8      03727         TSTFSZ  WREG
035A 90D8      03728         BCF     STATUS, 0
035C 6A00      03729         CLRF    r0x03
035E 3600      03730         RLCF    r0x03, F
0360 5000      03731         MOVF    r0x03, W
0362 03732 _00416_DS_:
0362 CFE4 F000 03733         MOVFF   PREINC1, r0x10
0366 CFE4 F000 03734         MOVFF   PREINC1, r0x0f
036A CFE4 F000 03735         MOVFF   PREINC1, r0x0e
036E CFE4 F000 03736         MOVFF   PREINC1, r0x0d
0372 CFE4 F000 03737         MOVFF   PREINC1, r0x0c
0376 CFE4 F000 03738         MOVFF   PREINC1, r0x0b
037A CFE4 F000 03739         MOVFF   PREINC1, r0x0a
037E CFE4 F000 03740         MOVFF   PREINC1, r0x09
0382 CFE4 F000 03741         MOVFF   PREINC1, r0x08
0386 CFE4 F000 03742         MOVFF   PREINC1, r0x07
038A CFE4 F000 03743         MOVFF   PREINC1, r0x06
038E CFE4 F000 03744         MOVFF   PREINC1, r0x05
0392 CFE4 F000 03745         MOVFF   PREINC1, r0x04
0396 CFE4 F000 03746         MOVFF   PREINC1, r0x03
039A CFE4 F000 03747         MOVFF   PREINC1, r0x02
039E CFE4 F000 03748         MOVFF   PREINC1, r0x01
03A2 CFE4 F000 03749         MOVFF   PREINC1, r0x00
03A6 CFE4 FFD9 03750         MOVFF   PREINC1, FSR2L
03AA 0012      03751         RETURN  
               03752 
               03753 ; ; Starting pCode block
               03754 S_MainDemo__sendRequestMsg      code
0000 03755 _sendRequestMsg:
               03756 ;       .line   612; MainDemo.c void sendRequestMsg(BYTE *dhcp_header, int dhcp_header_length){
0000 CFD9 FFE5 03757         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03758         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03759         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03760         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03761         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03762         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03763         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03764         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03765         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03766         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 03767         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 03768         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 03769         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 03770         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 03771         MOVFF   r0x0c, POSTDEC1
003C 0E02      03772         MOVLW   0x02
003E CFDB F000 03773         MOVFF   PLUSW2, r0x00
0042 0E03      03774         MOVLW   0x03
0044 CFDB F000 03775         MOVFF   PLUSW2, r0x01
0048 0E04      03776         MOVLW   0x04
004A CFDB F000 03777         MOVFF   PLUSW2, r0x02
004E 0E05      03778         MOVLW   0x05
0050 CFDB F000 03779         MOVFF   PLUSW2, r0x03
0054 0E06      03780         MOVLW   0x06
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0056 CFDB F000 03781         MOVFF   PLUSW2, r0x04
               03782 ;       .line   616; MainDemo.c UDPPut(DHCP_REQUEST_MESSAGE);
005A 0E03      03783         MOVLW   0x03
005C 6EE5      03784         MOVWF   POSTDEC1
005E EC00 F000 03785         CALL    _UDPPut
0062 2AE1      03786         INCF    FSR1L, F
               03787 ;       .line   618; MainDemo.c i=0;
0064 6A00      03788         CLRF    r0x05
0066 6A00      03789         CLRF    r0x06
0068 03790 _00374_DS_:
               03791 ;       .line   619; MainDemo.c while(i<dhcp_header_length){
0068 5000      03792         MOVF    r0x06, W
006A 0F80      03793         ADDLW   0x80
006C 6EF3      03794         MOVWF   PRODL
006E 5000      03795         MOVF    r0x04, W
0070 0F80      03796         ADDLW   0x80
0072 5CF3      03797         SUBWF   PRODL, W
0074 E100      03798         BNZ     _00387_DS_
0076 5000      03799         MOVF    r0x03, W
0078 5C00      03800         SUBWF   r0x05, W
007A 03801 _00387_DS_:
007A B0D8      03802         BTFSC   STATUS, 0
007C D000      03803         BRA     _00376_DS_
               03804 ;       .line   620; MainDemo.c opt = dhcp_header[i];
007E 5000      03805         MOVF    r0x05, W
0080 2400      03806         ADDWF   r0x00, W
0082 6E00      03807         MOVWF   r0x07
0084 5000      03808         MOVF    r0x06, W
0086 2000      03809         ADDWFC  r0x01, W
0088 6E00      03810         MOVWF   r0x08
008A 6AE8      03811         CLRF    WREG
008C BE00      03812         BTFSC   r0x06, 7
008E 68E8      03813         SETF    WREG
0090 2000      03814         ADDWFC  r0x02, W
0092 6E00      03815         MOVWF   r0x09
0094 C000 FFE9 03816         MOVFF   r0x07, FSR0L
0098 C000 FFF3 03817         MOVFF   r0x08, PRODL
009C 5000      03818         MOVF    r0x09, W
009E EC00 F000 03819         CALL    __gptrget1
00A2 6E00      03820         MOVWF   r0x07
               03821 ;       .line   621; MainDemo.c UDPPut(opt);
00A4 5000      03822         MOVF    r0x07, W
00A6 6EE5      03823         MOVWF   POSTDEC1
00A8 EC00 F000 03824         CALL    _UDPPut
00AC 2AE1      03825         INCF    FSR1L, F
               03826 ;       .line   622; MainDemo.c i++;
00AE 2A00      03827         INCF    r0x05, F
00B0 B0D8      03828         BTFSC   STATUS, 0
00B2 2A00      03829         INCF    r0x06, F
               03830 ;       .line   623; MainDemo.c length = dhcp_header[i];
00B4 5000      03831         MOVF    r0x05, W
00B6 2400      03832         ADDWF   r0x00, W
00B8 6E00      03833         MOVWF   r0x08
00BA 5000      03834         MOVF    r0x06, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BC 2000      03835         ADDWFC  r0x01, W
00BE 6E00      03836         MOVWF   r0x09
00C0 6AE8      03837         CLRF    WREG
00C2 BE00      03838         BTFSC   r0x06, 7
00C4 68E8      03839         SETF    WREG
00C6 2000      03840         ADDWFC  r0x02, W
00C8 6E00      03841         MOVWF   r0x0a
00CA C000 FFE9 03842         MOVFF   r0x08, FSR0L
00CE C000 FFF3 03843         MOVFF   r0x09, PRODL
00D2 5000      03844         MOVF    r0x0a, W
00D4 EC00 F000 03845         CALL    __gptrget1
00D8 6E00      03846         MOVWF   r0x08
               03847 ;       .line   624; MainDemo.c UDPPut(length);
00DA 5000      03848         MOVF    r0x08, W
00DC 6EE5      03849         MOVWF   POSTDEC1
00DE EC00 F000 03850         CALL    _UDPPut
00E2 2AE1      03851         INCF    FSR1L, F
               03852 ;       .line   625; MainDemo.c i++;
00E4 2A00      03853         INCF    r0x05, F
00E6 B0D8      03854         BTFSC   STATUS, 0
00E8 2A00      03855         INCF    r0x06, F
               03856 ;       .line   626; MainDemo.c switch(opt){
00EA 6A00      03857         CLRF    r0x09
00EC 5000      03858         MOVF    r0x07, W
00EE 0A36      03859         XORLW   0x36
00F0 E100      03860         BNZ     _00388_DS_
00F2 5000      03861         MOVF    r0x09, W
00F4 E000      03862         BZ      _00389_DS_
00F6 03863 _00388_DS_:
00F6 D000      03864         BRA     _00372_DS_
               03865 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x07
               03866 ; ;Unrolled 8 X 8 multiplication
               03867 ; ;FIXME: the function does not support result==WREG
00F8 03868 _00389_DS_:
00F8 0000      03869         BANKSEL _activeUDPSocket
               03870 ;       .line   628; MainDemo.c UDPPutArray((BYTE*)&UDPSocketInfo[activeUDPSocket].remoteNode.IPAddr, length);
00FA 5100      03871         MOVF    _activeUDPSocket, W, B
00FC 0D0E      03872         MULLW   0x0e
00FE CFF3 F000 03873         MOVFF   PRODL, r0x07
0102 6A00      03874         CLRF    r0x09
0104 0E00      03875         MOVLW   LOW(_UDPSocketInfo)
0106 2600      03876         ADDWF   r0x07, F
0108 0E00      03877         MOVLW   HIGH(_UDPSocketInfo)
010A 2200      03878         ADDWFC  r0x09, F
010C 5000      03879         MOVF    r0x09, W
010E 6E00      03880         MOVWF   r0x09
0110 5000      03881         MOVF    r0x07, W
0112 6E00      03882         MOVWF   r0x07
0114 0E80      03883         MOVLW   0x80
0116 6E00      03884         MOVWF   r0x0a
0118 C000 F000 03885         MOVFF   r0x08, r0x0b
011C 6A00      03886         CLRF    r0x0c
011E 5000      03887         MOVF    r0x0c, W
0120 6EE5      03888         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0122 5000      03889         MOVF    r0x0b, W
0124 6EE5      03890         MOVWF   POSTDEC1
0126 5000      03891         MOVF    r0x0a, W
0128 6EE5      03892         MOVWF   POSTDEC1
012A 5000      03893         MOVF    r0x09, W
012C 6EE5      03894         MOVWF   POSTDEC1
012E 5000      03895         MOVF    r0x07, W
0130 6EE5      03896         MOVWF   POSTDEC1
0132 EC00 F000 03897         CALL    _UDPPutArray
0136 0E05      03898         MOVLW   0x05
0138 26E1      03899         ADDWF   FSR1L, F
               03900 ;       .line   629; MainDemo.c break;
013A D000      03901         BRA     _00373_DS_
013C 03902 _00372_DS_:
               03903 ;       .line   631; MainDemo.c UDPPutArray((BYTE*)&dhcp_header[i], length);   
013C 5000      03904         MOVF    r0x05, W
013E 2400      03905         ADDWF   r0x00, W
0140 6E00      03906         MOVWF   r0x07
0142 5000      03907         MOVF    r0x06, W
0144 2000      03908         ADDWFC  r0x01, W
0146 6E00      03909         MOVWF   r0x09
0148 6AE8      03910         CLRF    WREG
014A BE00      03911         BTFSC   r0x06, 7
014C 68E8      03912         SETF    WREG
014E 2000      03913         ADDWFC  r0x02, W
0150 6E00      03914         MOVWF   r0x0a
0152 C000 F000 03915         MOVFF   r0x08, r0x0b
0156 6A00      03916         CLRF    r0x0c
0158 5000      03917         MOVF    r0x0c, W
015A 6EE5      03918         MOVWF   POSTDEC1
015C 5000      03919         MOVF    r0x0b, W
015E 6EE5      03920         MOVWF   POSTDEC1
0160 5000      03921         MOVF    r0x0a, W
0162 6EE5      03922         MOVWF   POSTDEC1
0164 5000      03923         MOVF    r0x09, W
0166 6EE5      03924         MOVWF   POSTDEC1
0168 5000      03925         MOVF    r0x07, W
016A 6EE5      03926         MOVWF   POSTDEC1
016C EC00 F000 03927         CALL    _UDPPutArray
0170 0E05      03928         MOVLW   0x05
0172 26E1      03929         ADDWF   FSR1L, F
0174 03930 _00373_DS_:
               03931 ;       .line   634; MainDemo.c i+=length;
0174 6A00      03932         CLRF    r0x07
0176 5000      03933         MOVF    r0x08, W
0178 2600      03934         ADDWF   r0x05, F
017A 5000      03935         MOVF    r0x07, W
017C 2200      03936         ADDWFC  r0x06, F
017E D000      03937         BRA     _00374_DS_
0180 03938 _00376_DS_:
               03939 ;       .line   637; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
0180 0E00      03940         MOVLW   HIGH(_AppConfig)
0182 6E00      03941         MOVWF   r0x01
0184 0E00      03942         MOVLW   LOW(_AppConfig)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0186 6E00      03943         MOVWF   r0x00
0188 0E80      03944         MOVLW   0x80
018A 6E00      03945         MOVWF   r0x02
018C 0E00      03946         MOVLW   0x00
018E 6EE5      03947         MOVWF   POSTDEC1
0190 0E04      03948         MOVLW   0x04
0192 6EE5      03949         MOVWF   POSTDEC1
0194 5000      03950         MOVF    r0x02, W
0196 6EE5      03951         MOVWF   POSTDEC1
0198 5000      03952         MOVF    r0x01, W
019A 6EE5      03953         MOVWF   POSTDEC1
019C 5000      03954         MOVF    r0x00, W
019E 6EE5      03955         MOVWF   POSTDEC1
01A0 EC00 F000 03956         CALL    _UDPPutArray
01A4 0E05      03957         MOVLW   0x05
01A6 26E1      03958         ADDWF   FSR1L, F
               03959 ;       .line   638; MainDemo.c UDPPut(DHCP_END_OPTION);
01A8 0EFF      03960         MOVLW   0xff
01AA 6EE5      03961         MOVWF   POSTDEC1
01AC EC00 F000 03962         CALL    _UDPPut
01B0 2AE1      03963         INCF    FSR1L, F
01B2 03964 _00377_DS_:
               03965 ;       .line   639; MainDemo.c while(UDPTxCount < 300){
01B2 0E01      03966         MOVLW   0x01
01B4 0000      03967         BANKSEL (_UDPTxCount + 1)
01B6 5D00      03968         SUBWF   (_UDPTxCount + 1), W, B
01B8 E100      03969         BNZ     _00390_DS_
01BA 0E2C      03970         MOVLW   0x2c
01BC 0000      03971         BANKSEL _UDPTxCount
01BE 5D00      03972         SUBWF   _UDPTxCount, W, B
01C0 03973 _00390_DS_:
01C0 E200      03974         BC      _00379_DS_
               03975 ;       .line   640; MainDemo.c UDPPut(0);
01C2 0E00      03976         MOVLW   0x00
01C4 6EE5      03977         MOVWF   POSTDEC1
01C6 EC00 F000 03978         CALL    _UDPPut
01CA 2AE1      03979         INCF    FSR1L, F
01CC D000      03980         BRA     _00377_DS_
01CE 03981 _00379_DS_:
               03982 ;       .line   643; MainDemo.c UDPFlush();
01CE EC00 F000 03983         CALL    _UDPFlush
01D2 CFE4 F000 03984         MOVFF   PREINC1, r0x0c
01D6 CFE4 F000 03985         MOVFF   PREINC1, r0x0b
01DA CFE4 F000 03986         MOVFF   PREINC1, r0x0a
01DE CFE4 F000 03987         MOVFF   PREINC1, r0x09
01E2 CFE4 F000 03988         MOVFF   PREINC1, r0x08
01E6 CFE4 F000 03989         MOVFF   PREINC1, r0x07
01EA CFE4 F000 03990         MOVFF   PREINC1, r0x06
01EE CFE4 F000 03991         MOVFF   PREINC1, r0x05
01F2 CFE4 F000 03992         MOVFF   PREINC1, r0x04
01F6 CFE4 F000 03993         MOVFF   PREINC1, r0x03
01FA CFE4 F000 03994         MOVFF   PREINC1, r0x02
01FE CFE4 F000 03995         MOVFF   PREINC1, r0x01
0202 CFE4 F000 03996         MOVFF   PREINC1, r0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0206 CFE4 FFD9 03997         MOVFF   PREINC1, FSR2L
020A 0012      03998         RETURN  
               03999 
               04000 ; ; Starting pCode block
               04001 S_MainDemo__sendRelease code
0000 04002 _sendRelease:
               04003 ;       .line   588; MainDemo.c void sendRelease(UDP_SOCKET *send_s_socket, POOL_ITEM *it){
0000 CFD9 FFE5 04004         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 04005         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 04006         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 04007         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 04008         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 04009         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 04010         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 04011         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 04012         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 04013         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 04014         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 04015         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 04016         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 04017         MOVFF   r0x0b, POSTDEC1
0038 0E02      04018         MOVLW   0x02
003A CFDB F000 04019         MOVFF   PLUSW2, r0x00
003E 0E03      04020         MOVLW   0x03
0040 CFDB F000 04021         MOVFF   PLUSW2, r0x01
0044 0E04      04022         MOVLW   0x04
0046 CFDB F000 04023         MOVFF   PLUSW2, r0x02
004A 0E05      04024         MOVLW   0x05
004C CFDB F000 04025         MOVFF   PLUSW2, r0x03
0050 0E06      04026         MOVLW   0x06
0052 CFDB F000 04027         MOVFF   PLUSW2, r0x04
0056 0E07      04028         MOVLW   0x07
0058 CFDB F000 04029         MOVFF   PLUSW2, r0x05
005C 04030 _00354_DS_:
               04031 ;       .line   590; MainDemo.c while(!UDPIsPutReady(*send_s_socket));
005C C000 FFE9 04032         MOVFF   r0x00, FSR0L
0060 C000 FFF3 04033         MOVFF   r0x01, PRODL
0064 5000      04034         MOVF    r0x02, W
0066 EC00 F000 04035         CALL    __gptrget1
006A 6E00      04036         MOVWF   r0x06
006C 5000      04037         MOVF    r0x06, W
006E 6EE5      04038         MOVWF   POSTDEC1
0070 EC00 F000 04039         CALL    _UDPIsPutReady
0074 6E00      04040         MOVWF   r0x06
0076 CFF3 F000 04041         MOVFF   PRODL, r0x07
007A 2AE1      04042         INCF    FSR1L, F
007C 5000      04043         MOVF    r0x06, W
007E 1000      04044         IORWF   r0x07, W
0080 E000      04045         BZ      _00354_DS_
               04046 ;       .line   591; MainDemo.c addMacFromServ();
0082 EC00 F000 04047         CALL    _addMacFromServ
               04048 ;       .line   592; MainDemo.c configureBootpHeader(&bootp_header, 0, &it->ip, &it->ip, &it->mac, DHCP_ACK_MESSAGE);
0086 0E00      04049         MOVLW   HIGH(_sendRelease_bootp_header_1_1)
0088 6E00      04050         MOVWF   r0x07
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A 0E00      04051         MOVLW   LOW(_sendRelease_bootp_header_1_1)
008C 6E00      04052         MOVWF   r0x06
008E 0E80      04053         MOVLW   0x80
0090 6E00      04054         MOVWF   r0x08
0092 5000      04055         MOVF    r0x03, W
0094 0F04      04056         ADDLW   0x04
0096 6E00      04057         MOVWF   r0x09
0098 0E00      04058         MOVLW   0x00
009A 2000      04059         ADDWFC  r0x04, W
009C 6E00      04060         MOVWF   r0x0a
009E 0E00      04061         MOVLW   0x00
00A0 2000      04062         ADDWFC  r0x05, W
00A2 6E00      04063         MOVWF   r0x0b
00A4 0E05      04064         MOVLW   0x05
00A6 6EE5      04065         MOVWF   POSTDEC1
00A8 5000      04066         MOVF    r0x0b, W
00AA 6EE5      04067         MOVWF   POSTDEC1
00AC 5000      04068         MOVF    r0x0a, W
00AE 6EE5      04069         MOVWF   POSTDEC1
00B0 5000      04070         MOVF    r0x09, W
00B2 6EE5      04071         MOVWF   POSTDEC1
00B4 5000      04072         MOVF    r0x05, W
00B6 6EE5      04073         MOVWF   POSTDEC1
00B8 5000      04074         MOVF    r0x04, W
00BA 6EE5      04075         MOVWF   POSTDEC1
00BC 5000      04076         MOVF    r0x03, W
00BE 6EE5      04077         MOVWF   POSTDEC1
00C0 5000      04078         MOVF    r0x05, W
00C2 6EE5      04079         MOVWF   POSTDEC1
00C4 5000      04080         MOVF    r0x04, W
00C6 6EE5      04081         MOVWF   POSTDEC1
00C8 5000      04082         MOVF    r0x03, W
00CA 6EE5      04083         MOVWF   POSTDEC1
00CC 0E00      04084         MOVLW   0x00
00CE 6EE5      04085         MOVWF   POSTDEC1
00D0 0E00      04086         MOVLW   0x00
00D2 6EE5      04087         MOVWF   POSTDEC1
00D4 0E00      04088         MOVLW   0x00
00D6 6EE5      04089         MOVWF   POSTDEC1
00D8 0E00      04090         MOVLW   0x00
00DA 6EE5      04091         MOVWF   POSTDEC1
00DC 5000      04092         MOVF    r0x08, W
00DE 6EE5      04093         MOVWF   POSTDEC1
00E0 5000      04094         MOVF    r0x07, W
00E2 6EE5      04095         MOVWF   POSTDEC1
00E4 5000      04096         MOVF    r0x06, W
00E6 6EE5      04097         MOVWF   POSTDEC1
00E8 EC00 F000 04098         CALL    _configureBootpHeader
00EC 0E11      04099         MOVLW   0x11
00EE 26E1      04100         ADDWF   FSR1L, F
               04101 ;       .line   593; MainDemo.c buildBootpHeader(&bootp_header, send_s_socket);
00F0 0E00      04102         MOVLW   HIGH(_sendRelease_bootp_header_1_1)
00F2 6E00      04103         MOVWF   r0x07
00F4 0E00      04104         MOVLW   LOW(_sendRelease_bootp_header_1_1)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00F6 6E00      04105         MOVWF   r0x06
00F8 0E80      04106         MOVLW   0x80
00FA 6E00      04107         MOVWF   r0x08
00FC 5000      04108         MOVF    r0x02, W
00FE 6EE5      04109         MOVWF   POSTDEC1
0100 5000      04110         MOVF    r0x01, W
0102 6EE5      04111         MOVWF   POSTDEC1
0104 5000      04112         MOVF    r0x00, W
0106 6EE5      04113         MOVWF   POSTDEC1
0108 5000      04114         MOVF    r0x08, W
010A 6EE5      04115         MOVWF   POSTDEC1
010C 5000      04116         MOVF    r0x07, W
010E 6EE5      04117         MOVWF   POSTDEC1
0110 5000      04118         MOVF    r0x06, W
0112 6EE5      04119         MOVWF   POSTDEC1
0114 EC00 F000 04120         CALL    _buildBootpHeader
0118 0E06      04121         MOVLW   0x06
011A 26E1      04122         ADDWF   FSR1L, F
               04123 ;       .line   594; MainDemo.c UDPPut(DHCP_RELEASE_MESSAGE);
011C 0E07      04124         MOVLW   0x07
011E 6EE5      04125         MOVWF   POSTDEC1
0120 EC00 F000 04126         CALL    _UDPPut
0124 2AE1      04127         INCF    FSR1L, F
               04128 ;       .line   596; MainDemo.c UDPPut(DHCP_SERVER_IDENTIFIER);
0126 0E36      04129         MOVLW   0x36
0128 6EE5      04130         MOVWF   POSTDEC1
012A EC00 F000 04131         CALL    _UDPPut
012E 2AE1      04132         INCF    FSR1L, F
               04133 ;       .line   597; MainDemo.c UDPPut(sizeof(IP_ADDR));
0130 0E04      04134         MOVLW   0x04
0132 6EE5      04135         MOVWF   POSTDEC1
0134 EC00 F000 04136         CALL    _UDPPut
0138 2AE1      04137         INCF    FSR1L, F
               04138 ;       .line   598; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
013A 0E00      04139         MOVLW   HIGH(_AppConfig)
013C 6E00      04140         MOVWF   r0x01
013E 0E00      04141         MOVLW   LOW(_AppConfig)
0140 6E00      04142         MOVWF   r0x00
0142 0E80      04143         MOVLW   0x80
0144 6E00      04144         MOVWF   r0x02
0146 0E00      04145         MOVLW   0x00
0148 6EE5      04146         MOVWF   POSTDEC1
014A 0E04      04147         MOVLW   0x04
014C 6EE5      04148         MOVWF   POSTDEC1
014E 5000      04149         MOVF    r0x02, W
0150 6EE5      04150         MOVWF   POSTDEC1
0152 5000      04151         MOVF    r0x01, W
0154 6EE5      04152         MOVWF   POSTDEC1
0156 5000      04153         MOVF    r0x00, W
0158 6EE5      04154         MOVWF   POSTDEC1
015A EC00 F000 04155         CALL    _UDPPutArray
015E 0E05      04156         MOVLW   0x05
0160 26E1      04157         ADDWF   FSR1L, F
               04158 ;       .line   600; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0162 0E00      04159         MOVLW   HIGH(_AppConfig)
0164 6E00      04160         MOVWF   r0x01
0166 0E00      04161         MOVLW   LOW(_AppConfig)
0168 6E00      04162         MOVWF   r0x00
016A 0E80      04163         MOVLW   0x80
016C 6E00      04164         MOVWF   r0x02
016E 0E00      04165         MOVLW   0x00
0170 6EE5      04166         MOVWF   POSTDEC1
0172 0E04      04167         MOVLW   0x04
0174 6EE5      04168         MOVWF   POSTDEC1
0176 5000      04169         MOVF    r0x02, W
0178 6EE5      04170         MOVWF   POSTDEC1
017A 5000      04171         MOVF    r0x01, W
017C 6EE5      04172         MOVWF   POSTDEC1
017E 5000      04173         MOVF    r0x00, W
0180 6EE5      04174         MOVWF   POSTDEC1
0182 EC00 F000 04175         CALL    _UDPPutArray
0186 0E05      04176         MOVLW   0x05
0188 26E1      04177         ADDWF   FSR1L, F
               04178 ;       .line   601; MainDemo.c UDPPut(DHCP_END_OPTION);
018A 0EFF      04179         MOVLW   0xff
018C 6EE5      04180         MOVWF   POSTDEC1
018E EC00 F000 04181         CALL    _UDPPut
0192 2AE1      04182         INCF    FSR1L, F
0194 04183 _00357_DS_:
               04184 ;       .line   602; MainDemo.c while(UDPTxCount < 300){
0194 0E01      04185         MOVLW   0x01
0196 0000      04186         BANKSEL (_UDPTxCount + 1)
0198 5D00      04187         SUBWF   (_UDPTxCount + 1), W, B
019A E100      04188         BNZ     _00366_DS_
019C 0E2C      04189         MOVLW   0x2c
019E 0000      04190         BANKSEL _UDPTxCount
01A0 5D00      04191         SUBWF   _UDPTxCount, W, B
01A2 04192 _00366_DS_:
01A2 E200      04193         BC      _00359_DS_
               04194 ;       .line   603; MainDemo.c UDPPut(0);
01A4 0E00      04195         MOVLW   0x00
01A6 6EE5      04196         MOVWF   POSTDEC1
01A8 EC00 F000 04197         CALL    _UDPPut
01AC 2AE1      04198         INCF    FSR1L, F
01AE D000      04199         BRA     _00357_DS_
01B0 04200 _00359_DS_:
               04201 ;       .line   606; MainDemo.c UDPFlush();
01B0 EC00 F000 04202         CALL    _UDPFlush
               04203 ;       .line   608; MainDemo.c initializeItem(it); // Corresponds to RemoveFromPool action in ASG
01B4 5000      04204         MOVF    r0x05, W
01B6 6EE5      04205         MOVWF   POSTDEC1
01B8 5000      04206         MOVF    r0x04, W
01BA 6EE5      04207         MOVWF   POSTDEC1
01BC 5000      04208         MOVF    r0x03, W
01BE 6EE5      04209         MOVWF   POSTDEC1
01C0 EC00 F000 04210         CALL    _initializeItem
01C4 0E03      04211         MOVLW   0x03
01C6 26E1      04212         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01C8 CFE4 F000 04213         MOVFF   PREINC1, r0x0b
01CC CFE4 F000 04214         MOVFF   PREINC1, r0x0a
01D0 CFE4 F000 04215         MOVFF   PREINC1, r0x09
01D4 CFE4 F000 04216         MOVFF   PREINC1, r0x08
01D8 CFE4 F000 04217         MOVFF   PREINC1, r0x07
01DC CFE4 F000 04218         MOVFF   PREINC1, r0x06
01E0 CFE4 F000 04219         MOVFF   PREINC1, r0x05
01E4 CFE4 F000 04220         MOVFF   PREINC1, r0x04
01E8 CFE4 F000 04221         MOVFF   PREINC1, r0x03
01EC CFE4 F000 04222         MOVFF   PREINC1, r0x02
01F0 CFE4 F000 04223         MOVFF   PREINC1, r0x01
01F4 CFE4 F000 04224         MOVFF   PREINC1, r0x00
01F8 CFE4 FFD9 04225         MOVFF   PREINC1, FSR2L
01FC 0012      04226         RETURN  
               04227 
               04228 ; ; Starting pCode block
               04229 S_MainDemo__buildDiscoverMsg    code
0000 04230 _buildDiscoverMsg:
               04231 ;       .line   566; MainDemo.c void buildDiscoverMsg(){
0000 CFD9 FFE5 04232         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 04233         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 04234         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 04235         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 04236         MOVFF   r0x02, POSTDEC1
               04237 ;       .line   568; MainDemo.c UDPPut(DHCP_DISCOVER_MESSAGE);
0014 0E01      04238         MOVLW   0x01
0016 6EE5      04239         MOVWF   POSTDEC1
0018 EC00 F000 04240         CALL    _UDPPut
001C 2AE1      04241         INCF    FSR1L, F
               04242 ;       .line   570; MainDemo.c UDPPut(DHCP_SERVER_IDENTIFIER);
001E 0E36      04243         MOVLW   0x36
0020 6EE5      04244         MOVWF   POSTDEC1
0022 EC00 F000 04245         CALL    _UDPPut
0026 2AE1      04246         INCF    FSR1L, F
               04247 ;       .line   571; MainDemo.c UDPPut(sizeof(IP_ADDR));
0028 0E04      04248         MOVLW   0x04
002A 6EE5      04249         MOVWF   POSTDEC1
002C EC00 F000 04250         CALL    _UDPPut
0030 2AE1      04251         INCF    FSR1L, F
               04252 ;       .line   572; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
0032 0E00      04253         MOVLW   HIGH(_AppConfig)
0034 6E00      04254         MOVWF   r0x01
0036 0E00      04255         MOVLW   LOW(_AppConfig)
0038 6E00      04256         MOVWF   r0x00
003A 0E80      04257         MOVLW   0x80
003C 6E00      04258         MOVWF   r0x02
003E 0E00      04259         MOVLW   0x00
0040 6EE5      04260         MOVWF   POSTDEC1
0042 0E04      04261         MOVLW   0x04
0044 6EE5      04262         MOVWF   POSTDEC1
0046 5000      04263         MOVF    r0x02, W
0048 6EE5      04264         MOVWF   POSTDEC1
004A 5000      04265         MOVF    r0x01, W
004C 6EE5      04266         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004E 5000      04267         MOVF    r0x00, W
0050 6EE5      04268         MOVWF   POSTDEC1
0052 EC00 F000 04269         CALL    _UDPPutArray
0056 0E05      04270         MOVLW   0x05
0058 26E1      04271         ADDWF   FSR1L, F
               04272 ;       .line   574; MainDemo.c UDPPut(DHCP_ROUTER);
005A 0E03      04273         MOVLW   0x03
005C 6EE5      04274         MOVWF   POSTDEC1
005E EC00 F000 04275         CALL    _UDPPut
0062 2AE1      04276         INCF    FSR1L, F
               04277 ;       .line   575; MainDemo.c UDPPut(sizeof(IP_ADDR));
0064 0E04      04278         MOVLW   0x04
0066 6EE5      04279         MOVWF   POSTDEC1
0068 EC00 F000 04280         CALL    _UDPPut
006C 2AE1      04281         INCF    FSR1L, F
               04282 ;       .line   576; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
006E 0E00      04283         MOVLW   HIGH(_AppConfig)
0070 6E00      04284         MOVWF   r0x01
0072 0E00      04285         MOVLW   LOW(_AppConfig)
0074 6E00      04286         MOVWF   r0x00
0076 0E80      04287         MOVLW   0x80
0078 6E00      04288         MOVWF   r0x02
007A 0E00      04289         MOVLW   0x00
007C 6EE5      04290         MOVWF   POSTDEC1
007E 0E04      04291         MOVLW   0x04
0080 6EE5      04292         MOVWF   POSTDEC1
0082 5000      04293         MOVF    r0x02, W
0084 6EE5      04294         MOVWF   POSTDEC1
0086 5000      04295         MOVF    r0x01, W
0088 6EE5      04296         MOVWF   POSTDEC1
008A 5000      04297         MOVF    r0x00, W
008C 6EE5      04298         MOVWF   POSTDEC1
008E EC00 F000 04299         CALL    _UDPPutArray
0092 0E05      04300         MOVLW   0x05
0094 26E1      04301         ADDWF   FSR1L, F
               04302 ;       .line   578; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
0096 0E00      04303         MOVLW   HIGH(_AppConfig)
0098 6E00      04304         MOVWF   r0x01
009A 0E00      04305         MOVLW   LOW(_AppConfig)
009C 6E00      04306         MOVWF   r0x00
009E 0E80      04307         MOVLW   0x80
00A0 6E00      04308         MOVWF   r0x02
00A2 0E00      04309         MOVLW   0x00
00A4 6EE5      04310         MOVWF   POSTDEC1
00A6 0E04      04311         MOVLW   0x04
00A8 6EE5      04312         MOVWF   POSTDEC1
00AA 5000      04313         MOVF    r0x02, W
00AC 6EE5      04314         MOVWF   POSTDEC1
00AE 5000      04315         MOVF    r0x01, W
00B0 6EE5      04316         MOVWF   POSTDEC1
00B2 5000      04317         MOVF    r0x00, W
00B4 6EE5      04318         MOVWF   POSTDEC1
00B6 EC00 F000 04319         CALL    _UDPPutArray
00BA 0E05      04320         MOVLW   0x05
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BC 26E1      04321         ADDWF   FSR1L, F
               04322 ;       .line   579; MainDemo.c UDPPut(DHCP_END_OPTION);
00BE 0EFF      04323         MOVLW   0xff
00C0 6EE5      04324         MOVWF   POSTDEC1
00C2 EC00 F000 04325         CALL    _UDPPut
00C6 2AE1      04326         INCF    FSR1L, F
00C8 04327 _00342_DS_:
               04328 ;       .line   580; MainDemo.c while(UDPTxCount < 300){
00C8 0E01      04329         MOVLW   0x01
00CA 0000      04330         BANKSEL (_UDPTxCount + 1)
00CC 5D00      04331         SUBWF   (_UDPTxCount + 1), W, B
00CE E100      04332         BNZ     _00349_DS_
00D0 0E2C      04333         MOVLW   0x2c
00D2 0000      04334         BANKSEL _UDPTxCount
00D4 5D00      04335         SUBWF   _UDPTxCount, W, B
00D6 04336 _00349_DS_:
00D6 E200      04337         BC      _00344_DS_
               04338 ;       .line   581; MainDemo.c UDPPut(0);
00D8 0E00      04339         MOVLW   0x00
00DA 6EE5      04340         MOVWF   POSTDEC1
00DC EC00 F000 04341         CALL    _UDPPut
00E0 2AE1      04342         INCF    FSR1L, F
00E2 D000      04343         BRA     _00342_DS_
00E4 04344 _00344_DS_:
               04345 ;       .line   584; MainDemo.c UDPFlush();
00E4 EC00 F000 04346         CALL    _UDPFlush
00E8 CFE4 F000 04347         MOVFF   PREINC1, r0x02
00EC CFE4 F000 04348         MOVFF   PREINC1, r0x01
00F0 CFE4 F000 04349         MOVFF   PREINC1, r0x00
00F4 CFE4 FFD9 04350         MOVFF   PREINC1, FSR2L
00F8 0012      04351         RETURN  
               04352 
               04353 ; ; Starting pCode block
               04354 S_MainDemo__configureBootpHeader        code
0000 04355 _configureBootpHeader:
               04356 ;       .line   547; MainDemo.c void configureBootpHeader(BOOTP_HEADER *bootp_header, DWORD transactionId, IP_ADDR *clientIP, IP_ADDR *yourIP, MAC_ADDR *clientMAC, BYTE msg_type)
0000 CFD9 FFE5 04357         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 04358         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 04359         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 04360         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 04361         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 04362         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 04363         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 04364         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 04365         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 04366         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 04367         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 04368         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 04369         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 04370         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 04371         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 04372         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 04373         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 04374         MOVFF   r0x0f, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0048 C000 FFE5 04375         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 04376         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 04377         MOVFF   r0x12, POSTDEC1
0054 0E02      04378         MOVLW   0x02
0056 CFDB F000 04379         MOVFF   PLUSW2, r0x00
005A 0E03      04380         MOVLW   0x03
005C CFDB F000 04381         MOVFF   PLUSW2, r0x01
0060 0E04      04382         MOVLW   0x04
0062 CFDB F000 04383         MOVFF   PLUSW2, r0x02
0066 0E05      04384         MOVLW   0x05
0068 CFDB F000 04385         MOVFF   PLUSW2, r0x03
006C 0E06      04386         MOVLW   0x06
006E CFDB F000 04387         MOVFF   PLUSW2, r0x04
0072 0E07      04388         MOVLW   0x07
0074 CFDB F000 04389         MOVFF   PLUSW2, r0x05
0078 0E08      04390         MOVLW   0x08
007A CFDB F000 04391         MOVFF   PLUSW2, r0x06
007E 0E09      04392         MOVLW   0x09
0080 CFDB F000 04393         MOVFF   PLUSW2, r0x07
0084 0E0A      04394         MOVLW   0x0a
0086 CFDB F000 04395         MOVFF   PLUSW2, r0x08
008A 0E0B      04396         MOVLW   0x0b
008C CFDB F000 04397         MOVFF   PLUSW2, r0x09
0090 0E0C      04398         MOVLW   0x0c
0092 CFDB F000 04399         MOVFF   PLUSW2, r0x0a
0096 0E0D      04400         MOVLW   0x0d
0098 CFDB F000 04401         MOVFF   PLUSW2, r0x0b
009C 0E0E      04402         MOVLW   0x0e
009E CFDB F000 04403         MOVFF   PLUSW2, r0x0c
00A2 0E0F      04404         MOVLW   0x0f
00A4 CFDB F000 04405         MOVFF   PLUSW2, r0x0d
00A8 0E10      04406         MOVLW   0x10
00AA CFDB F000 04407         MOVFF   PLUSW2, r0x0e
00AE 0E11      04408         MOVLW   0x11
00B0 CFDB F000 04409         MOVFF   PLUSW2, r0x0f
00B4 0E12      04410         MOVLW   0x12
00B6 CFDB F000 04411         MOVFF   PLUSW2, r0x10
               04412 ;       .line   550; MainDemo.c bootp_header->MessageType = msg_type;
00BA C000 FFE5 04413         MOVFF   r0x10, POSTDEC1
00BE C000 FFE9 04414         MOVFF   r0x00, FSR0L
00C2 C000 FFF3 04415         MOVFF   r0x01, PRODL
00C6 5000      04416         MOVF    r0x02, W
00C8 EC00 F000 04417         CALL    __gptrput1
               04418 ;       .line   551; MainDemo.c bootp_header->HardwareType = BOOT_HW_TYPE;
00CC 5000      04419         MOVF    r0x00, W
00CE 0F01      04420         ADDLW   0x01
00D0 6E00      04421         MOVWF   r0x10
00D2 0E00      04422         MOVLW   0x00
00D4 2000      04423         ADDWFC  r0x01, W
00D6 6E00      04424         MOVWF   r0x11
00D8 0E00      04425         MOVLW   0x00
00DA 2000      04426         ADDWFC  r0x02, W
00DC 6E00      04427         MOVWF   r0x12
00DE 0E01      04428         MOVLW   0x01
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E0 6EE5      04429         MOVWF   POSTDEC1
00E2 C000 FFE9 04430         MOVFF   r0x10, FSR0L
00E6 C000 FFF3 04431         MOVFF   r0x11, PRODL
00EA 5000      04432         MOVF    r0x12, W
00EC EC00 F000 04433         CALL    __gptrput1
               04434 ;       .line   552; MainDemo.c bootp_header->HardwareLen = BOOT_LEN_OF_HW_TYPE;
00F0 5000      04435         MOVF    r0x00, W
00F2 0F02      04436         ADDLW   0x02
00F4 6E00      04437         MOVWF   r0x10
00F6 0E00      04438         MOVLW   0x00
00F8 2000      04439         ADDWFC  r0x01, W
00FA 6E00      04440         MOVWF   r0x11
00FC 0E00      04441         MOVLW   0x00
00FE 2000      04442         ADDWFC  r0x02, W
0100 6E00      04443         MOVWF   r0x12
0102 0E06      04444         MOVLW   0x06
0104 6EE5      04445         MOVWF   POSTDEC1
0106 C000 FFE9 04446         MOVFF   r0x10, FSR0L
010A C000 FFF3 04447         MOVFF   r0x11, PRODL
010E 5000      04448         MOVF    r0x12, W
0110 EC00 F000 04449         CALL    __gptrput1
               04450 ;       .line   553; MainDemo.c bootp_header->Hops = 1;
0114 5000      04451         MOVF    r0x00, W
0116 0F03      04452         ADDLW   0x03
0118 6E00      04453         MOVWF   r0x10
011A 0E00      04454         MOVLW   0x00
011C 2000      04455         ADDWFC  r0x01, W
011E 6E00      04456         MOVWF   r0x11
0120 0E00      04457         MOVLW   0x00
0122 2000      04458         ADDWFC  r0x02, W
0124 6E00      04459         MOVWF   r0x12
0126 0E01      04460         MOVLW   0x01
0128 6EE5      04461         MOVWF   POSTDEC1
012A C000 FFE9 04462         MOVFF   r0x10, FSR0L
012E C000 FFF3 04463         MOVFF   r0x11, PRODL
0132 5000      04464         MOVF    r0x12, W
0134 EC00 F000 04465         CALL    __gptrput1
               04466 ;       .line   554; MainDemo.c bootp_header->TransactionID = transactionId;
0138 5000      04467         MOVF    r0x00, W
013A 0F04      04468         ADDLW   0x04
013C 6E00      04469         MOVWF   r0x10
013E 0E00      04470         MOVLW   0x00
0140 2000      04471         ADDWFC  r0x01, W
0142 6E00      04472         MOVWF   r0x11
0144 0E00      04473         MOVLW   0x00
0146 2000      04474         ADDWFC  r0x02, W
0148 6E00      04475         MOVWF   r0x12
014A C000 FFE5 04476         MOVFF   r0x03, POSTDEC1
014E C000 FFF4 04477         MOVFF   r0x04, PRODH
0152 C000 FFF6 04478         MOVFF   r0x05, TBLPTRL
0156 C000 FFF7 04479         MOVFF   r0x06, TBLPTRH
015A C000 FFE9 04480         MOVFF   r0x10, FSR0L
015E C000 FFF3 04481         MOVFF   r0x11, PRODL
0162 5000      04482         MOVF    r0x12, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0164 EC00 F000 04483         CALL    __gptrput4
               04484 ;       .line   555; MainDemo.c bootp_header->SecondsElapsed = 0;
0168 5000      04485         MOVF    r0x00, W
016A 0F08      04486         ADDLW   0x08
016C 6E00      04487         MOVWF   r0x03
016E 0E00      04488         MOVLW   0x00
0170 2000      04489         ADDWFC  r0x01, W
0172 6E00      04490         MOVWF   r0x04
0174 0E00      04491         MOVLW   0x00
0176 2000      04492         ADDWFC  r0x02, W
0178 6E00      04493         MOVWF   r0x05
017A 0E00      04494         MOVLW   0x00
017C 6EE5      04495         MOVWF   POSTDEC1
017E 0E00      04496         MOVLW   0x00
0180 6EF4      04497         MOVWF   PRODH
0182 C000 FFE9 04498         MOVFF   r0x03, FSR0L
0186 C000 FFF3 04499         MOVFF   r0x04, PRODL
018A 5000      04500         MOVF    r0x05, W
018C EC00 F000 04501         CALL    __gptrput2
               04502 ;       .line   556; MainDemo.c bootp_header->BootpFlags = 0;
0190 5000      04503         MOVF    r0x00, W
0192 0F0A      04504         ADDLW   0x0a
0194 6E00      04505         MOVWF   r0x03
0196 0E00      04506         MOVLW   0x00
0198 2000      04507         ADDWFC  r0x01, W
019A 6E00      04508         MOVWF   r0x04
019C 0E00      04509         MOVLW   0x00
019E 2000      04510         ADDWFC  r0x02, W
01A0 6E00      04511         MOVWF   r0x05
01A2 0E00      04512         MOVLW   0x00
01A4 6EE5      04513         MOVWF   POSTDEC1
01A6 0E00      04514         MOVLW   0x00
01A8 6EF4      04515         MOVWF   PRODH
01AA C000 FFE9 04516         MOVFF   r0x03, FSR0L
01AE C000 FFF3 04517         MOVFF   r0x04, PRODL
01B2 5000      04518         MOVF    r0x05, W
01B4 EC00 F000 04519         CALL    __gptrput2
               04520 ;       .line   557; MainDemo.c memcpy(&bootp_header->ClientIP, clientIP, sizeof(IP_ADDR));
01B8 5000      04521         MOVF    r0x00, W
01BA 0F0C      04522         ADDLW   0x0c
01BC 6E00      04523         MOVWF   r0x03
01BE 0E00      04524         MOVLW   0x00
01C0 2000      04525         ADDWFC  r0x01, W
01C2 6E00      04526         MOVWF   r0x04
01C4 0E00      04527         MOVLW   0x00
01C6 2000      04528         ADDWFC  r0x02, W
01C8 6E00      04529         MOVWF   r0x05
01CA 0E00      04530         MOVLW   0x00
01CC 6EE5      04531         MOVWF   POSTDEC1
01CE 0E04      04532         MOVLW   0x04
01D0 6EE5      04533         MOVWF   POSTDEC1
01D2 5000      04534         MOVF    r0x09, W
01D4 6EE5      04535         MOVWF   POSTDEC1
01D6 5000      04536         MOVF    r0x08, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01D8 6EE5      04537         MOVWF   POSTDEC1
01DA 5000      04538         MOVF    r0x07, W
01DC 6EE5      04539         MOVWF   POSTDEC1
01DE 5000      04540         MOVF    r0x05, W
01E0 6EE5      04541         MOVWF   POSTDEC1
01E2 5000      04542         MOVF    r0x04, W
01E4 6EE5      04543         MOVWF   POSTDEC1
01E6 5000      04544         MOVF    r0x03, W
01E8 6EE5      04545         MOVWF   POSTDEC1
01EA EC00 F000 04546         CALL    _memcpy
01EE 0E08      04547         MOVLW   0x08
01F0 26E1      04548         ADDWF   FSR1L, F
               04549 ;       .line   558; MainDemo.c memcpy(&bootp_header->YourIP, yourIP, sizeof(IP_ADDR));
01F2 5000      04550         MOVF    r0x00, W
01F4 0F10      04551         ADDLW   0x10
01F6 6E00      04552         MOVWF   r0x03
01F8 0E00      04553         MOVLW   0x00
01FA 2000      04554         ADDWFC  r0x01, W
01FC 6E00      04555         MOVWF   r0x04
01FE 0E00      04556         MOVLW   0x00
0200 2000      04557         ADDWFC  r0x02, W
0202 6E00      04558         MOVWF   r0x05
0204 0E00      04559         MOVLW   0x00
0206 6EE5      04560         MOVWF   POSTDEC1
0208 0E04      04561         MOVLW   0x04
020A 6EE5      04562         MOVWF   POSTDEC1
020C 5000      04563         MOVF    r0x0c, W
020E 6EE5      04564         MOVWF   POSTDEC1
0210 5000      04565         MOVF    r0x0b, W
0212 6EE5      04566         MOVWF   POSTDEC1
0214 5000      04567         MOVF    r0x0a, W
0216 6EE5      04568         MOVWF   POSTDEC1
0218 5000      04569         MOVF    r0x05, W
021A 6EE5      04570         MOVWF   POSTDEC1
021C 5000      04571         MOVF    r0x04, W
021E 6EE5      04572         MOVWF   POSTDEC1
0220 5000      04573         MOVF    r0x03, W
0222 6EE5      04574         MOVWF   POSTDEC1
0224 EC00 F000 04575         CALL    _memcpy
0228 0E08      04576         MOVLW   0x08
022A 26E1      04577         ADDWF   FSR1L, F
               04578 ;       .line   559; MainDemo.c memset((void*)&bootp_header->NextServerIP, 0, sizeof(IP_ADDR));
022C 5000      04579         MOVF    r0x00, W
022E 0F14      04580         ADDLW   0x14
0230 6E00      04581         MOVWF   r0x03
0232 0E00      04582         MOVLW   0x00
0234 2000      04583         ADDWFC  r0x01, W
0236 6E00      04584         MOVWF   r0x04
0238 0E00      04585         MOVLW   0x00
023A 2000      04586         ADDWFC  r0x02, W
023C 6E00      04587         MOVWF   r0x05
023E 0E00      04588         MOVLW   0x00
0240 6EE5      04589         MOVWF   POSTDEC1
0242 0E04      04590         MOVLW   0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0244 6EE5      04591         MOVWF   POSTDEC1
0246 0E00      04592         MOVLW   0x00
0248 6EE5      04593         MOVWF   POSTDEC1
024A 5000      04594         MOVF    r0x04, W
024C 6EE5      04595         MOVWF   POSTDEC1
024E 5000      04596         MOVF    r0x03, W
0250 6EE5      04597         MOVWF   POSTDEC1
0252 EC00 F000 04598         CALL    _memset
0256 0E05      04599         MOVLW   0x05
0258 26E1      04600         ADDWF   FSR1L, F
               04601 ;       .line   560; MainDemo.c memset((void*)&bootp_header->RelayAgentIP, 42, sizeof(IP_ADDR));
025A 5000      04602         MOVF    r0x00, W
025C 0F18      04603         ADDLW   0x18
025E 6E00      04604         MOVWF   r0x03
0260 0E00      04605         MOVLW   0x00
0262 2000      04606         ADDWFC  r0x01, W
0264 6E00      04607         MOVWF   r0x04
0266 0E00      04608         MOVLW   0x00
0268 2000      04609         ADDWFC  r0x02, W
026A 6E00      04610         MOVWF   r0x05
026C 0E00      04611         MOVLW   0x00
026E 6EE5      04612         MOVWF   POSTDEC1
0270 0E04      04613         MOVLW   0x04
0272 6EE5      04614         MOVWF   POSTDEC1
0274 0E2A      04615         MOVLW   0x2a
0276 6EE5      04616         MOVWF   POSTDEC1
0278 5000      04617         MOVF    r0x04, W
027A 6EE5      04618         MOVWF   POSTDEC1
027C 5000      04619         MOVF    r0x03, W
027E 6EE5      04620         MOVWF   POSTDEC1
0280 EC00 F000 04621         CALL    _memset
0284 0E05      04622         MOVLW   0x05
0286 26E1      04623         ADDWF   FSR1L, F
               04624 ;       .line   561; MainDemo.c memcpy(&bootp_header->ClientMAC, clientMAC->v, sizeof(MAC_ADDR));
0288 0E1C      04625         MOVLW   0x1c
028A 2600      04626         ADDWF   r0x00, F
028C 0E00      04627         MOVLW   0x00
028E 2200      04628         ADDWFC  r0x01, F
0290 0E00      04629         MOVLW   0x00
0292 2200      04630         ADDWFC  r0x02, F
0294 0E00      04631         MOVLW   0x00
0296 6EE5      04632         MOVWF   POSTDEC1
0298 0E06      04633         MOVLW   0x06
029A 6EE5      04634         MOVWF   POSTDEC1
029C 5000      04635         MOVF    r0x0f, W
029E 6EE5      04636         MOVWF   POSTDEC1
02A0 5000      04637         MOVF    r0x0e, W
02A2 6EE5      04638         MOVWF   POSTDEC1
02A4 5000      04639         MOVF    r0x0d, W
02A6 6EE5      04640         MOVWF   POSTDEC1
02A8 5000      04641         MOVF    r0x02, W
02AA 6EE5      04642         MOVWF   POSTDEC1
02AC 5000      04643         MOVF    r0x01, W
02AE 6EE5      04644         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02B0 5000      04645         MOVF    r0x00, W
02B2 6EE5      04646         MOVWF   POSTDEC1
02B4 EC00 F000 04647         CALL    _memcpy
02B8 0E08      04648         MOVLW   0x08
02BA 26E1      04649         ADDWF   FSR1L, F
02BC CFE4 F000 04650         MOVFF   PREINC1, r0x12
02C0 CFE4 F000 04651         MOVFF   PREINC1, r0x11
02C4 CFE4 F000 04652         MOVFF   PREINC1, r0x10
02C8 CFE4 F000 04653         MOVFF   PREINC1, r0x0f
02CC CFE4 F000 04654         MOVFF   PREINC1, r0x0e
02D0 CFE4 F000 04655         MOVFF   PREINC1, r0x0d
02D4 CFE4 F000 04656         MOVFF   PREINC1, r0x0c
02D8 CFE4 F000 04657         MOVFF   PREINC1, r0x0b
02DC CFE4 F000 04658         MOVFF   PREINC1, r0x0a
02E0 CFE4 F000 04659         MOVFF   PREINC1, r0x09
02E4 CFE4 F000 04660         MOVFF   PREINC1, r0x08
02E8 CFE4 F000 04661         MOVFF   PREINC1, r0x07
02EC CFE4 F000 04662         MOVFF   PREINC1, r0x06
02F0 CFE4 F000 04663         MOVFF   PREINC1, r0x05
02F4 CFE4 F000 04664         MOVFF   PREINC1, r0x04
02F8 CFE4 F000 04665         MOVFF   PREINC1, r0x03
02FC CFE4 F000 04666         MOVFF   PREINC1, r0x02
0300 CFE4 F000 04667         MOVFF   PREINC1, r0x01
0304 CFE4 F000 04668         MOVFF   PREINC1, r0x00
0308 CFE4 FFD9 04669         MOVFF   PREINC1, FSR2L
030C 0012      04670         RETURN  
               04671 
               04672 ; ; Starting pCode block
               04673 S_MainDemo__buildBootpHeader    code
0000 04674 _buildBootpHeader:
               04675 ;       .line   517; MainDemo.c void buildBootpHeader(BOOTP_HEADER *bootp_header, UDP_SOCKET *my_socket){
0000 CFD9 FFE5 04676         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 04677         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 04678         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 04679         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 04680         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 04681         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 04682         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 04683         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 04684         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 04685         MOVFF   r0x07, POSTDEC1
0028 0E02      04686         MOVLW   0x02
002A CFDB F000 04687         MOVFF   PLUSW2, r0x00
002E 0E03      04688         MOVLW   0x03
0030 CFDB F000 04689         MOVFF   PLUSW2, r0x01
0034 0E04      04690         MOVLW   0x04
0036 CFDB F000 04691         MOVFF   PLUSW2, r0x02
003A 0E05      04692         MOVLW   0x05
003C CFDB F000 04693         MOVFF   PLUSW2, r0x03
0040 0E06      04694         MOVLW   0x06
0042 CFDB F000 04695         MOVFF   PLUSW2, r0x04
0046 0E07      04696         MOVLW   0x07
0048 CFDB F000 04697         MOVFF   PLUSW2, r0x05
004C 04698 _00326_DS_:
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               04699 ;       .line   520; MainDemo.c while(!UDPIsPutReady(*my_socket));
004C C000 FFE9 04700         MOVFF   r0x03, FSR0L
0050 C000 FFF3 04701         MOVFF   r0x04, PRODL
0054 5000      04702         MOVF    r0x05, W
0056 EC00 F000 04703         CALL    __gptrget1
005A 6E00      04704         MOVWF   r0x06
005C 5000      04705         MOVF    r0x06, W
005E 6EE5      04706         MOVWF   POSTDEC1
0060 EC00 F000 04707         CALL    _UDPIsPutReady
0064 6E00      04708         MOVWF   r0x06
0066 CFF3 F000 04709         MOVFF   PRODL, r0x07
006A 2AE1      04710         INCF    FSR1L, F
006C 5000      04711         MOVF    r0x06, W
006E 1000      04712         IORWF   r0x07, W
0070 E000      04713         BZ      _00326_DS_
               04714 ;       .line   522; MainDemo.c UDPPutArray((BYTE*)&bootp_header->MessageType, sizeof(BYTE));
0072 0E00      04715         MOVLW   0x00
0074 6EE5      04716         MOVWF   POSTDEC1
0076 0E01      04717         MOVLW   0x01
0078 6EE5      04718         MOVWF   POSTDEC1
007A 5000      04719         MOVF    r0x02, W
007C 6EE5      04720         MOVWF   POSTDEC1
007E 5000      04721         MOVF    r0x01, W
0080 6EE5      04722         MOVWF   POSTDEC1
0082 5000      04723         MOVF    r0x00, W
0084 6EE5      04724         MOVWF   POSTDEC1
0086 EC00 F000 04725         CALL    _UDPPutArray
008A 0E05      04726         MOVLW   0x05
008C 26E1      04727         ADDWF   FSR1L, F
               04728 ;       .line   523; MainDemo.c UDPPutArray((BYTE*)&bootp_header->HardwareType, sizeof(BYTE));
008E 5000      04729         MOVF    r0x00, W
0090 0F01      04730         ADDLW   0x01
0092 6E00      04731         MOVWF   r0x03
0094 0E00      04732         MOVLW   0x00
0096 2000      04733         ADDWFC  r0x01, W
0098 6E00      04734         MOVWF   r0x04
009A 0E00      04735         MOVLW   0x00
009C 2000      04736         ADDWFC  r0x02, W
009E 6E00      04737         MOVWF   r0x05
00A0 0E00      04738         MOVLW   0x00
00A2 6EE5      04739         MOVWF   POSTDEC1
00A4 0E01      04740         MOVLW   0x01
00A6 6EE5      04741         MOVWF   POSTDEC1
00A8 5000      04742         MOVF    r0x05, W
00AA 6EE5      04743         MOVWF   POSTDEC1
00AC 5000      04744         MOVF    r0x04, W
00AE 6EE5      04745         MOVWF   POSTDEC1
00B0 5000      04746         MOVF    r0x03, W
00B2 6EE5      04747         MOVWF   POSTDEC1
00B4 EC00 F000 04748         CALL    _UDPPutArray
00B8 0E05      04749         MOVLW   0x05
00BA 26E1      04750         ADDWF   FSR1L, F
               04751 ;       .line   524; MainDemo.c UDPPutArray((BYTE*)&bootp_header->HardwareLen, sizeof(BYTE));
00BC 5000      04752         MOVF    r0x00, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BE 0F02      04753         ADDLW   0x02
00C0 6E00      04754         MOVWF   r0x03
00C2 0E00      04755         MOVLW   0x00
00C4 2000      04756         ADDWFC  r0x01, W
00C6 6E00      04757         MOVWF   r0x04
00C8 0E00      04758         MOVLW   0x00
00CA 2000      04759         ADDWFC  r0x02, W
00CC 6E00      04760         MOVWF   r0x05
00CE 0E00      04761         MOVLW   0x00
00D0 6EE5      04762         MOVWF   POSTDEC1
00D2 0E01      04763         MOVLW   0x01
00D4 6EE5      04764         MOVWF   POSTDEC1
00D6 5000      04765         MOVF    r0x05, W
00D8 6EE5      04766         MOVWF   POSTDEC1
00DA 5000      04767         MOVF    r0x04, W
00DC 6EE5      04768         MOVWF   POSTDEC1
00DE 5000      04769         MOVF    r0x03, W
00E0 6EE5      04770         MOVWF   POSTDEC1
00E2 EC00 F000 04771         CALL    _UDPPutArray
00E6 0E05      04772         MOVLW   0x05
00E8 26E1      04773         ADDWF   FSR1L, F
               04774 ;       .line   525; MainDemo.c UDPPutArray((BYTE*)&bootp_header->Hops, sizeof(BYTE));
00EA 5000      04775         MOVF    r0x00, W
00EC 0F03      04776         ADDLW   0x03
00EE 6E00      04777         MOVWF   r0x03
00F0 0E00      04778         MOVLW   0x00
00F2 2000      04779         ADDWFC  r0x01, W
00F4 6E00      04780         MOVWF   r0x04
00F6 0E00      04781         MOVLW   0x00
00F8 2000      04782         ADDWFC  r0x02, W
00FA 6E00      04783         MOVWF   r0x05
00FC 0E00      04784         MOVLW   0x00
00FE 6EE5      04785         MOVWF   POSTDEC1
0100 0E01      04786         MOVLW   0x01
0102 6EE5      04787         MOVWF   POSTDEC1
0104 5000      04788         MOVF    r0x05, W
0106 6EE5      04789         MOVWF   POSTDEC1
0108 5000      04790         MOVF    r0x04, W
010A 6EE5      04791         MOVWF   POSTDEC1
010C 5000      04792         MOVF    r0x03, W
010E 6EE5      04793         MOVWF   POSTDEC1
0110 EC00 F000 04794         CALL    _UDPPutArray
0114 0E05      04795         MOVLW   0x05
0116 26E1      04796         ADDWF   FSR1L, F
               04797 ;       .line   526; MainDemo.c UDPPutArray((BYTE*)&bootp_header->TransactionID, sizeof(DWORD));
0118 5000      04798         MOVF    r0x00, W
011A 0F04      04799         ADDLW   0x04
011C 6E00      04800         MOVWF   r0x03
011E 0E00      04801         MOVLW   0x00
0120 2000      04802         ADDWFC  r0x01, W
0122 6E00      04803         MOVWF   r0x04
0124 0E00      04804         MOVLW   0x00
0126 2000      04805         ADDWFC  r0x02, W
0128 6E00      04806         MOVWF   r0x05
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012A 0E00      04807         MOVLW   0x00
012C 6EE5      04808         MOVWF   POSTDEC1
012E 0E04      04809         MOVLW   0x04
0130 6EE5      04810         MOVWF   POSTDEC1
0132 5000      04811         MOVF    r0x05, W
0134 6EE5      04812         MOVWF   POSTDEC1
0136 5000      04813         MOVF    r0x04, W
0138 6EE5      04814         MOVWF   POSTDEC1
013A 5000      04815         MOVF    r0x03, W
013C 6EE5      04816         MOVWF   POSTDEC1
013E EC00 F000 04817         CALL    _UDPPutArray
0142 0E05      04818         MOVLW   0x05
0144 26E1      04819         ADDWF   FSR1L, F
               04820 ;       .line   527; MainDemo.c UDPPutArray((BYTE*)&bootp_header->SecondsElapsed, sizeof(WORD));
0146 5000      04821         MOVF    r0x00, W
0148 0F08      04822         ADDLW   0x08
014A 6E00      04823         MOVWF   r0x03
014C 0E00      04824         MOVLW   0x00
014E 2000      04825         ADDWFC  r0x01, W
0150 6E00      04826         MOVWF   r0x04
0152 0E00      04827         MOVLW   0x00
0154 2000      04828         ADDWFC  r0x02, W
0156 6E00      04829         MOVWF   r0x05
0158 0E00      04830         MOVLW   0x00
015A 6EE5      04831         MOVWF   POSTDEC1
015C 0E02      04832         MOVLW   0x02
015E 6EE5      04833         MOVWF   POSTDEC1
0160 5000      04834         MOVF    r0x05, W
0162 6EE5      04835         MOVWF   POSTDEC1
0164 5000      04836         MOVF    r0x04, W
0166 6EE5      04837         MOVWF   POSTDEC1
0168 5000      04838         MOVF    r0x03, W
016A 6EE5      04839         MOVWF   POSTDEC1
016C EC00 F000 04840         CALL    _UDPPutArray
0170 0E05      04841         MOVLW   0x05
0172 26E1      04842         ADDWF   FSR1L, F
               04843 ;       .line   528; MainDemo.c UDPPutArray((BYTE*)&bootp_header->BootpFlags, sizeof(WORD));
0174 5000      04844         MOVF    r0x00, W
0176 0F0A      04845         ADDLW   0x0a
0178 6E00      04846         MOVWF   r0x03
017A 0E00      04847         MOVLW   0x00
017C 2000      04848         ADDWFC  r0x01, W
017E 6E00      04849         MOVWF   r0x04
0180 0E00      04850         MOVLW   0x00
0182 2000      04851         ADDWFC  r0x02, W
0184 6E00      04852         MOVWF   r0x05
0186 0E00      04853         MOVLW   0x00
0188 6EE5      04854         MOVWF   POSTDEC1
018A 0E02      04855         MOVLW   0x02
018C 6EE5      04856         MOVWF   POSTDEC1
018E 5000      04857         MOVF    r0x05, W
0190 6EE5      04858         MOVWF   POSTDEC1
0192 5000      04859         MOVF    r0x04, W
0194 6EE5      04860         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0196 5000      04861         MOVF    r0x03, W
0198 6EE5      04862         MOVWF   POSTDEC1
019A EC00 F000 04863         CALL    _UDPPutArray
019E 0E05      04864         MOVLW   0x05
01A0 26E1      04865         ADDWF   FSR1L, F
               04866 ;       .line   529; MainDemo.c UDPPutArray((BYTE*)&bootp_header->ClientIP, sizeof(IP_ADDR));
01A2 5000      04867         MOVF    r0x00, W
01A4 0F0C      04868         ADDLW   0x0c
01A6 6E00      04869         MOVWF   r0x03
01A8 0E00      04870         MOVLW   0x00
01AA 2000      04871         ADDWFC  r0x01, W
01AC 6E00      04872         MOVWF   r0x04
01AE 0E00      04873         MOVLW   0x00
01B0 2000      04874         ADDWFC  r0x02, W
01B2 6E00      04875         MOVWF   r0x05
01B4 0E00      04876         MOVLW   0x00
01B6 6EE5      04877         MOVWF   POSTDEC1
01B8 0E04      04878         MOVLW   0x04
01BA 6EE5      04879         MOVWF   POSTDEC1
01BC 5000      04880         MOVF    r0x05, W
01BE 6EE5      04881         MOVWF   POSTDEC1
01C0 5000      04882         MOVF    r0x04, W
01C2 6EE5      04883         MOVWF   POSTDEC1
01C4 5000      04884         MOVF    r0x03, W
01C6 6EE5      04885         MOVWF   POSTDEC1
01C8 EC00 F000 04886         CALL    _UDPPutArray
01CC 0E05      04887         MOVLW   0x05
01CE 26E1      04888         ADDWF   FSR1L, F
               04889 ;       .line   530; MainDemo.c UDPPutArray((BYTE*)&bootp_header->YourIP, sizeof(IP_ADDR));
01D0 5000      04890         MOVF    r0x00, W
01D2 0F10      04891         ADDLW   0x10
01D4 6E00      04892         MOVWF   r0x03
01D6 0E00      04893         MOVLW   0x00
01D8 2000      04894         ADDWFC  r0x01, W
01DA 6E00      04895         MOVWF   r0x04
01DC 0E00      04896         MOVLW   0x00
01DE 2000      04897         ADDWFC  r0x02, W
01E0 6E00      04898         MOVWF   r0x05
01E2 0E00      04899         MOVLW   0x00
01E4 6EE5      04900         MOVWF   POSTDEC1
01E6 0E04      04901         MOVLW   0x04
01E8 6EE5      04902         MOVWF   POSTDEC1
01EA 5000      04903         MOVF    r0x05, W
01EC 6EE5      04904         MOVWF   POSTDEC1
01EE 5000      04905         MOVF    r0x04, W
01F0 6EE5      04906         MOVWF   POSTDEC1
01F2 5000      04907         MOVF    r0x03, W
01F4 6EE5      04908         MOVWF   POSTDEC1
01F6 EC00 F000 04909         CALL    _UDPPutArray
01FA 0E05      04910         MOVLW   0x05
01FC 26E1      04911         ADDWF   FSR1L, F
               04912 ;       .line   531; MainDemo.c UDPPutArray((BYTE*)&bootp_header->NextServerIP, sizeof(IP_ADDR));
01FE 5000      04913         MOVF    r0x00, W
0200 0F14      04914         ADDLW   0x14
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0202 6E00      04915         MOVWF   r0x03
0204 0E00      04916         MOVLW   0x00
0206 2000      04917         ADDWFC  r0x01, W
0208 6E00      04918         MOVWF   r0x04
020A 0E00      04919         MOVLW   0x00
020C 2000      04920         ADDWFC  r0x02, W
020E 6E00      04921         MOVWF   r0x05
0210 0E00      04922         MOVLW   0x00
0212 6EE5      04923         MOVWF   POSTDEC1
0214 0E04      04924         MOVLW   0x04
0216 6EE5      04925         MOVWF   POSTDEC1
0218 5000      04926         MOVF    r0x05, W
021A 6EE5      04927         MOVWF   POSTDEC1
021C 5000      04928         MOVF    r0x04, W
021E 6EE5      04929         MOVWF   POSTDEC1
0220 5000      04930         MOVF    r0x03, W
0222 6EE5      04931         MOVWF   POSTDEC1
0224 EC00 F000 04932         CALL    _UDPPutArray
0228 0E05      04933         MOVLW   0x05
022A 26E1      04934         ADDWF   FSR1L, F
               04935 ;       .line   532; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
022C 0E00      04936         MOVLW   HIGH(_AppConfig)
022E 6E00      04937         MOVWF   r0x04
0230 0E00      04938         MOVLW   LOW(_AppConfig)
0232 6E00      04939         MOVWF   r0x03
0234 0E80      04940         MOVLW   0x80
0236 6E00      04941         MOVWF   r0x05
0238 0E00      04942         MOVLW   0x00
023A 6EE5      04943         MOVWF   POSTDEC1
023C 0E04      04944         MOVLW   0x04
023E 6EE5      04945         MOVWF   POSTDEC1
0240 5000      04946         MOVF    r0x05, W
0242 6EE5      04947         MOVWF   POSTDEC1
0244 5000      04948         MOVF    r0x04, W
0246 6EE5      04949         MOVWF   POSTDEC1
0248 5000      04950         MOVF    r0x03, W
024A 6EE5      04951         MOVWF   POSTDEC1
024C EC00 F000 04952         CALL    _UDPPutArray
0250 0E05      04953         MOVLW   0x05
0252 26E1      04954         ADDWF   FSR1L, F
               04955 ;       .line   533; MainDemo.c UDPPutArray((BYTE*)&bootp_header->ClientMAC, sizeof(MAC_ADDR));
0254 0E1C      04956         MOVLW   0x1c
0256 2600      04957         ADDWF   r0x00, F
0258 0E00      04958         MOVLW   0x00
025A 2200      04959         ADDWFC  r0x01, F
025C 0E00      04960         MOVLW   0x00
025E 2200      04961         ADDWFC  r0x02, F
0260 0E00      04962         MOVLW   0x00
0262 6EE5      04963         MOVWF   POSTDEC1
0264 0E06      04964         MOVLW   0x06
0266 6EE5      04965         MOVWF   POSTDEC1
0268 5000      04966         MOVF    r0x02, W
026A 6EE5      04967         MOVWF   POSTDEC1
026C 5000      04968         MOVF    r0x01, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
026E 6EE5      04969         MOVWF   POSTDEC1
0270 5000      04970         MOVF    r0x00, W
0272 6EE5      04971         MOVWF   POSTDEC1
0274 EC00 F000 04972         CALL    _UDPPutArray
0278 0E05      04973         MOVLW   0x05
027A 26E1      04974         ADDWF   FSR1L, F
               04975 ;       .line   535; MainDemo.c for(i=0; i<202; i++){
027C 0ECA      04976         MOVLW   0xca
027E 6E00      04977         MOVWF   r0x00
0280 6A00      04978         CLRF    r0x01
0282 04979 _00331_DS_:
               04980 ;       .line   536; MainDemo.c UDPPut(0);
0282 0E00      04981         MOVLW   0x00
0284 6EE5      04982         MOVWF   POSTDEC1
0286 EC00 F000 04983         CALL    _UDPPut
028A 2AE1      04984         INCF    FSR1L, F
028C 0EFF      04985         MOVLW   0xff
028E 2600      04986         ADDWF   r0x00, F
0290 A0D8      04987         BTFSS   STATUS, 0
0292 0600      04988         DECF    r0x01, F
               04989 ;       .line   535; MainDemo.c for(i=0; i<202; i++){
0294 5000      04990         MOVF    r0x00, W
0296 1000      04991         IORWF   r0x01, W
0298 E100      04992         BNZ     _00331_DS_
               04993 ;       .line   539; MainDemo.c UDPPut(99);
029A 0E63      04994         MOVLW   0x63
029C 6EE5      04995         MOVWF   POSTDEC1
029E EC00 F000 04996         CALL    _UDPPut
02A2 2AE1      04997         INCF    FSR1L, F
               04998 ;       .line   540; MainDemo.c UDPPut(130);
02A4 0E82      04999         MOVLW   0x82
02A6 6EE5      05000         MOVWF   POSTDEC1
02A8 EC00 F000 05001         CALL    _UDPPut
02AC 2AE1      05002         INCF    FSR1L, F
               05003 ;       .line   541; MainDemo.c UDPPut(83);
02AE 0E53      05004         MOVLW   0x53
02B0 6EE5      05005         MOVWF   POSTDEC1
02B2 EC00 F000 05006         CALL    _UDPPut
02B6 2AE1      05007         INCF    FSR1L, F
               05008 ;       .line   542; MainDemo.c UDPPut(99);
02B8 0E63      05009         MOVLW   0x63
02BA 6EE5      05010         MOVWF   POSTDEC1
02BC EC00 F000 05011         CALL    _UDPPut
02C0 2AE1      05012         INCF    FSR1L, F
               05013 ;       .line   543; MainDemo.c UDPPut(DHCP_MESSAGE_TYPE);
02C2 0E35      05014         MOVLW   0x35
02C4 6EE5      05015         MOVWF   POSTDEC1
02C6 EC00 F000 05016         CALL    _UDPPut
02CA 2AE1      05017         INCF    FSR1L, F
               05018 ;       .line   544; MainDemo.c UDPPut(DHCP_MESSAGE_TYPE_LEN);
02CC 0E01      05019         MOVLW   0x01
02CE 6EE5      05020         MOVWF   POSTDEC1
02D0 EC00 F000 05021         CALL    _UDPPut
02D4 2AE1      05022         INCF    FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02D6 CFE4 F000 05023         MOVFF   PREINC1, r0x07
02DA CFE4 F000 05024         MOVFF   PREINC1, r0x06
02DE CFE4 F000 05025         MOVFF   PREINC1, r0x05
02E2 CFE4 F000 05026         MOVFF   PREINC1, r0x04
02E6 CFE4 F000 05027         MOVFF   PREINC1, r0x03
02EA CFE4 F000 05028         MOVFF   PREINC1, r0x02
02EE CFE4 F000 05029         MOVFF   PREINC1, r0x01
02F2 CFE4 F000 05030         MOVFF   PREINC1, r0x00
02F6 CFE4 FFD9 05031         MOVFF   PREINC1, FSR2L
02FA 0012      05032         RETURN  
               05033 
               05034 ; ; Starting pCode block
               05035 S_MainDemo__buildHeader code
0000 05036 _buildHeader:
               05037 ;       .line   501; MainDemo.c void buildHeader(BYTE *header, unsigned int *dhcp_header_length, POOL_ITEM *it){
0000 CFD9 FFE5 05038         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 05039         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 05040         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 05041         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 05042         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 05043         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 05044         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 05045         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 05046         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 05047         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 05048         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 05049         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 05050         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 05051         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 05052         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 05053         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 05054         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 05055         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 05056         MOVFF   r0x10, POSTDEC1
004C 0E02      05057         MOVLW   0x02
004E CFDB F000 05058         MOVFF   PLUSW2, r0x00
0052 0E03      05059         MOVLW   0x03
0054 CFDB F000 05060         MOVFF   PLUSW2, r0x01
0058 0E04      05061         MOVLW   0x04
005A CFDB F000 05062         MOVFF   PLUSW2, r0x02
005E 0E05      05063         MOVLW   0x05
0060 CFDB F000 05064         MOVFF   PLUSW2, r0x03
0064 0E06      05065         MOVLW   0x06
0066 CFDB F000 05066         MOVFF   PLUSW2, r0x04
006A 0E07      05067         MOVLW   0x07
006C CFDB F000 05068         MOVFF   PLUSW2, r0x05
0070 0E08      05069         MOVLW   0x08
0072 CFDB F000 05070         MOVFF   PLUSW2, r0x06
0076 0E09      05071         MOVLW   0x09
0078 CFDB F000 05072         MOVFF   PLUSW2, r0x07
007C 0E0A      05073         MOVLW   0x0a
007E CFDB F000 05074         MOVFF   PLUSW2, r0x08
               05075 ;       .line   504; MainDemo.c header[0] = DHCP_MESSAGE_TYPE;
0082 0E35      05076         MOVLW   0x35
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0084 6EE5      05077         MOVWF   POSTDEC1
0086 C000 FFE9 05078         MOVFF   r0x00, FSR0L
008A C000 FFF3 05079         MOVFF   r0x01, PRODL
008E 5000      05080         MOVF    r0x02, W
0090 EC00 F000 05081         CALL    __gptrput1
               05082 ;       .line   505; MainDemo.c header[1] = DHCP_MESSAGE_TYPE_LEN;
0094 5000      05083         MOVF    r0x00, W
0096 0F01      05084         ADDLW   0x01
0098 6E00      05085         MOVWF   r0x09
009A 0E00      05086         MOVLW   0x00
009C 2000      05087         ADDWFC  r0x01, W
009E 6E00      05088         MOVWF   r0x0a
00A0 0E00      05089         MOVLW   0x00
00A2 2000      05090         ADDWFC  r0x02, W
00A4 6E00      05091         MOVWF   r0x0b
00A6 0E01      05092         MOVLW   0x01
00A8 6EE5      05093         MOVWF   POSTDEC1
00AA C000 FFE9 05094         MOVFF   r0x09, FSR0L
00AE C000 FFF3 05095         MOVFF   r0x0a, PRODL
00B2 5000      05096         MOVF    r0x0b, W
00B4 EC00 F000 05097         CALL    __gptrput1
               05098 ;       .line   506; MainDemo.c header[2] = DHCP_REQUEST_MESSAGE;
00B8 5000      05099         MOVF    r0x00, W
00BA 0F02      05100         ADDLW   0x02
00BC 6E00      05101         MOVWF   r0x09
00BE 0E00      05102         MOVLW   0x00
00C0 2000      05103         ADDWFC  r0x01, W
00C2 6E00      05104         MOVWF   r0x0a
00C4 0E00      05105         MOVLW   0x00
00C6 2000      05106         ADDWFC  r0x02, W
00C8 6E00      05107         MOVWF   r0x0b
00CA 0E03      05108         MOVLW   0x03
00CC 6EE5      05109         MOVWF   POSTDEC1
00CE C000 FFE9 05110         MOVFF   r0x09, FSR0L
00D2 C000 FFF3 05111         MOVFF   r0x0a, PRODL
00D6 5000      05112         MOVF    r0x0b, W
00D8 EC00 F000 05113         CALL    __gptrput1
               05114 ;       .line   507; MainDemo.c header[3] = DHCP_PARAM_REQUEST_IP_ADDRESS;
00DC 5000      05115         MOVF    r0x00, W
00DE 0F03      05116         ADDLW   0x03
00E0 6E00      05117         MOVWF   r0x09
00E2 0E00      05118         MOVLW   0x00
00E4 2000      05119         ADDWFC  r0x01, W
00E6 6E00      05120         MOVWF   r0x0a
00E8 0E00      05121         MOVLW   0x00
00EA 2000      05122         ADDWFC  r0x02, W
00EC 6E00      05123         MOVWF   r0x0b
00EE 0E32      05124         MOVLW   0x32
00F0 6EE5      05125         MOVWF   POSTDEC1
00F2 C000 FFE9 05126         MOVFF   r0x09, FSR0L
00F6 C000 FFF3 05127         MOVFF   r0x0a, PRODL
00FA 5000      05128         MOVF    r0x0b, W
00FC EC00 F000 05129         CALL    __gptrput1
               05130 ;       .line   508; MainDemo.c header[4] = DHCP_PARAM_REQUEST_IP_ADDRESS_LEN;
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0100 5000      05131         MOVF    r0x00, W
0102 0F04      05132         ADDLW   0x04
0104 6E00      05133         MOVWF   r0x09
0106 0E00      05134         MOVLW   0x00
0108 2000      05135         ADDWFC  r0x01, W
010A 6E00      05136         MOVWF   r0x0a
010C 0E00      05137         MOVLW   0x00
010E 2000      05138         ADDWFC  r0x02, W
0110 6E00      05139         MOVWF   r0x0b
0112 0E04      05140         MOVLW   0x04
0114 6EE5      05141         MOVWF   POSTDEC1
0116 C000 FFE9 05142         MOVFF   r0x09, FSR0L
011A C000 FFF3 05143         MOVFF   r0x0a, PRODL
011E 5000      05144         MOVF    r0x0b, W
0120 EC00 F000 05145         CALL    __gptrput1
               05146 ;       .line   509; MainDemo.c for(i=5; i<9; i++){
0124 0E05      05147         MOVLW   0x05
0126 6E00      05148         MOVWF   r0x09
0128 6A00      05149         CLRF    r0x0a
012A 05150 _00312_DS_:
012A 5000      05151         MOVF    r0x0a, W
012C 0F80      05152         ADDLW   0x80
012E 0F80      05153         ADDLW   0x80
0130 E100      05154         BNZ     _00321_DS_
0132 0E09      05155         MOVLW   0x09
0134 5C00      05156         SUBWF   r0x09, W
0136 05157 _00321_DS_:
0136 E200      05158         BC      _00315_DS_
               05159 ;       .line   510; MainDemo.c header[i] = it->ip.v[i-5];
0138 5000      05160         MOVF    r0x09, W
013A 2400      05161         ADDWF   r0x00, W
013C 6E00      05162         MOVWF   r0x0b
013E 5000      05163         MOVF    r0x0a, W
0140 2000      05164         ADDWFC  r0x01, W
0142 6E00      05165         MOVWF   r0x0c
0144 6AE8      05166         CLRF    WREG
0146 BE00      05167         BTFSC   r0x0a, 7
0148 68E8      05168         SETF    WREG
014A 2000      05169         ADDWFC  r0x02, W
014C 6E00      05170         MOVWF   r0x0d
014E 5000      05171         MOVF    r0x09, W
0150 6E00      05172         MOVWF   r0x0e
0152 0EFB      05173         MOVLW   0xfb
0154 2600      05174         ADDWF   r0x0e, F
0156 0E00      05175         MOVLW   0x00
0158 BE00      05176         BTFSC   r0x0e, 7
015A 0EFF      05177         MOVLW   0xff
015C 6E00      05178         MOVWF   r0x10
015E 6E00      05179         MOVWF   r0x0f
0160 5000      05180         MOVF    r0x06, W
0162 2600      05181         ADDWF   r0x0e, F
0164 5000      05182         MOVF    r0x07, W
0166 2200      05183         ADDWFC  r0x0f, F
0168 5000      05184         MOVF    r0x08, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
016A 2200      05185         ADDWFC  r0x10, F
016C C000 FFE9 05186         MOVFF   r0x0e, FSR0L
0170 C000 FFF3 05187         MOVFF   r0x0f, PRODL
0174 5000      05188         MOVF    r0x10, W
0176 EC00 F000 05189         CALL    __gptrget1
017A 6E00      05190         MOVWF   r0x0e
017C C000 FFE5 05191         MOVFF   r0x0e, POSTDEC1
0180 C000 FFE9 05192         MOVFF   r0x0b, FSR0L
0184 C000 FFF3 05193         MOVFF   r0x0c, PRODL
0188 5000      05194         MOVF    r0x0d, W
018A EC00 F000 05195         CALL    __gptrput1
               05196 ;       .line   509; MainDemo.c for(i=5; i<9; i++){
018E 2A00      05197         INCF    r0x09, F
0190 B0D8      05198         BTFSC   STATUS, 0
0192 2A00      05199         INCF    r0x0a, F
0194 D000      05200         BRA     _00312_DS_
0196 05201 _00315_DS_:
               05202 ;       .line   512; MainDemo.c header[9] = DHCP_SERVER_IDENTIFIER;
0196 5000      05203         MOVF    r0x00, W
0198 0F09      05204         ADDLW   0x09
019A 6E00      05205         MOVWF   r0x06
019C 0E00      05206         MOVLW   0x00
019E 2000      05207         ADDWFC  r0x01, W
01A0 6E00      05208         MOVWF   r0x07
01A2 0E00      05209         MOVLW   0x00
01A4 2000      05210         ADDWFC  r0x02, W
01A6 6E00      05211         MOVWF   r0x08
01A8 0E36      05212         MOVLW   0x36
01AA 6EE5      05213         MOVWF   POSTDEC1
01AC C000 FFE9 05214         MOVFF   r0x06, FSR0L
01B0 C000 FFF3 05215         MOVFF   r0x07, PRODL
01B4 5000      05216         MOVF    r0x08, W
01B6 EC00 F000 05217         CALL    __gptrput1
               05218 ;       .line   513; MainDemo.c header[10] = sizeof(IP_ADDR);
01BA 0E0A      05219         MOVLW   0x0a
01BC 2600      05220         ADDWF   r0x00, F
01BE 0E00      05221         MOVLW   0x00
01C0 2200      05222         ADDWFC  r0x01, F
01C2 0E00      05223         MOVLW   0x00
01C4 2200      05224         ADDWFC  r0x02, F
01C6 0E04      05225         MOVLW   0x04
01C8 6EE5      05226         MOVWF   POSTDEC1
01CA C000 FFE9 05227         MOVFF   r0x00, FSR0L
01CE C000 FFF3 05228         MOVFF   r0x01, PRODL
01D2 5000      05229         MOVF    r0x02, W
01D4 EC00 F000 05230         CALL    __gptrput1
               05231 ;       .line   514; MainDemo.c *dhcp_header_length = 15;
01D8 0E0F      05232         MOVLW   0x0f
01DA 6EE5      05233         MOVWF   POSTDEC1
01DC 0E00      05234         MOVLW   0x00
01DE 6EF4      05235         MOVWF   PRODH
01E0 C000 FFE9 05236         MOVFF   r0x03, FSR0L
01E4 C000 FFF3 05237         MOVFF   r0x04, PRODL
01E8 5000      05238         MOVF    r0x05, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01EA EC00 F000 05239         CALL    __gptrput2
01EE CFE4 F000 05240         MOVFF   PREINC1, r0x10
01F2 CFE4 F000 05241         MOVFF   PREINC1, r0x0f
01F6 CFE4 F000 05242         MOVFF   PREINC1, r0x0e
01FA CFE4 F000 05243         MOVFF   PREINC1, r0x0d
01FE CFE4 F000 05244         MOVFF   PREINC1, r0x0c
0202 CFE4 F000 05245         MOVFF   PREINC1, r0x0b
0206 CFE4 F000 05246         MOVFF   PREINC1, r0x0a
020A CFE4 F000 05247         MOVFF   PREINC1, r0x09
020E CFE4 F000 05248         MOVFF   PREINC1, r0x08
0212 CFE4 F000 05249         MOVFF   PREINC1, r0x07
0216 CFE4 F000 05250         MOVFF   PREINC1, r0x06
021A CFE4 F000 05251         MOVFF   PREINC1, r0x05
021E CFE4 F000 05252         MOVFF   PREINC1, r0x04
0222 CFE4 F000 05253         MOVFF   PREINC1, r0x03
0226 CFE4 F000 05254         MOVFF   PREINC1, r0x02
022A CFE4 F000 05255         MOVFF   PREINC1, r0x01
022E CFE4 F000 05256         MOVFF   PREINC1, r0x00
0232 CFE4 FFD9 05257         MOVFF   PREINC1, FSR2L
0236 0012      05258         RETURN  
               05259 
               05260 ; ; Starting pCode block
               05261 S_MainDemo__rcvdFromClient      code
0000 05262 _rcvdFromClient:
               05263 ;       .line   440; MainDemo.c void rcvdFromClient(UDP_SOCKET *send_s_socket,
0000 CFD9 FFE5 05264         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 05265         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 05266         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 05267         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 05268         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 05269         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 05270         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 05271         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 05272         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 05273         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 05274         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 05275         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 05276         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 05277         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 05278         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 05279         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 05280         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 05281         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 05282         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 05283         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 05284         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 05285         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 05286         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 05287         MOVFF   r0x15, POSTDEC1
0060 C000 FFE5 05288         MOVFF   r0x16, POSTDEC1
0064 C000 FFE5 05289         MOVFF   r0x17, POSTDEC1
0068 C000 FFE5 05290         MOVFF   r0x18, POSTDEC1
006C C000 FFE5 05291         MOVFF   r0x19, POSTDEC1
0070 C000 FFE5 05292         MOVFF   r0x1a, POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0074 0E02      05293         MOVLW   0x02
0076 CFDB F000 05294         MOVFF   PLUSW2, r0x00
007A 0E03      05295         MOVLW   0x03
007C CFDB F000 05296         MOVFF   PLUSW2, r0x01
0080 0E04      05297         MOVLW   0x04
0082 CFDB F000 05298         MOVFF   PLUSW2, r0x02
0086 0E05      05299         MOVLW   0x05
0088 CFDB F000 05300         MOVFF   PLUSW2, r0x03
008C 0E06      05301         MOVLW   0x06
008E CFDB F000 05302         MOVFF   PLUSW2, r0x04
0092 0E07      05303         MOVLW   0x07
0094 CFDB F000 05304         MOVFF   PLUSW2, r0x05
0098 0E08      05305         MOVLW   0x08
009A CFDB F000 05306         MOVFF   PLUSW2, r0x06
009E 0E09      05307         MOVLW   0x09
00A0 CFDB F000 05308         MOVFF   PLUSW2, r0x07
00A4 0E0A      05309         MOVLW   0x0a
00A6 CFDB F000 05310         MOVFF   PLUSW2, r0x08
               05311 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x09
               05312 ; ;Unrolled 8 X 8 multiplication
               05313 ; ;FIXME: the function does not support result==WREG
00AA 0000      05314         BANKSEL _activeUDPSocket
               05315 ;       .line   452; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];   
00AC 5100      05316         MOVF    _activeUDPSocket, W, B
00AE 0D0E      05317         MULLW   0x0e
00B0 CFF3 F000 05318         MOVFF   PRODL, r0x09
00B4 6A00      05319         CLRF    r0x0a
00B6 0E00      05320         MOVLW   LOW(_UDPSocketInfo)
00B8 2600      05321         ADDWF   r0x09, F
00BA 0E00      05322         MOVLW   HIGH(_UDPSocketInfo)
00BC 2200      05323         ADDWFC  r0x0a, F
00BE 5000      05324         MOVF    r0x0a, W
00C0 6E00      05325         MOVWF   r0x0a
00C2 5000      05326         MOVF    r0x09, W
00C4 6E00      05327         MOVWF   r0x09
00C6 0E80      05328         MOVLW   0x80
00C8 6E00      05329         MOVWF   r0x0b
               05330 ;       .line   453; MainDemo.c remote_node_MAC = &info->remoteNode.MACAddr;
00CA 5000      05331         MOVF    r0x09, W
00CC 0F04      05332         ADDLW   0x04
00CE 6E00      05333         MOVWF   r0x0c
00D0 0E00      05334         MOVLW   0x00
00D2 2000      05335         ADDWFC  r0x0a, W
00D4 6E00      05336         MOVWF   r0x0d
00D6 0E00      05337         MOVLW   0x00
00D8 2000      05338         ADDWFC  r0x0b, W
00DA 6E00      05339         MOVWF   r0x0e
               05340 ;       .line   455; MainDemo.c extractBootProtHeader(&dhcp_type, &bootp_header, dhcp_header, &dhcp_header_length, receiver_socket);
00DC 0E00      05341         MOVLW   HIGH(_rcvdFromClient_dhcp_type_1_1)
00DE 6E00      05342         MOVWF   r0x10
00E0 0E00      05343         MOVLW   LOW(_rcvdFromClient_dhcp_type_1_1)
00E2 6E00      05344         MOVWF   r0x0f
00E4 0E80      05345         MOVLW   0x80
00E6 6E00      05346         MOVWF   r0x11
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E8 0E00      05347         MOVLW   HIGH(_rcvdFromClient_bootp_header_1_1)
00EA 6E00      05348         MOVWF   r0x13
00EC 0E00      05349         MOVLW   LOW(_rcvdFromClient_bootp_header_1_1)
00EE 6E00      05350         MOVWF   r0x12
00F0 0E80      05351         MOVLW   0x80
00F2 6E00      05352         MOVWF   r0x14
00F4 0E00      05353         MOVLW   HIGH(_rcvdFromClient_dhcp_header_1_1)
00F6 6E00      05354         MOVWF   r0x16
00F8 0E00      05355         MOVLW   LOW(_rcvdFromClient_dhcp_header_1_1)
00FA 6E00      05356         MOVWF   r0x15
00FC 0E80      05357         MOVLW   0x80
00FE 6E00      05358         MOVWF   r0x17
0100 0E00      05359         MOVLW   HIGH(_rcvdFromClient_dhcp_header_length_1_1)
0102 6E00      05360         MOVWF   r0x19
0104 0E00      05361         MOVLW   LOW(_rcvdFromClient_dhcp_header_length_1_1)
0106 6E00      05362         MOVWF   r0x18
0108 0E80      05363         MOVLW   0x80
010A 6E00      05364         MOVWF   r0x1a
010C 5000      05365         MOVF    r0x08, W
010E 6EE5      05366         MOVWF   POSTDEC1
0110 5000      05367         MOVF    r0x07, W
0112 6EE5      05368         MOVWF   POSTDEC1
0114 5000      05369         MOVF    r0x06, W
0116 6EE5      05370         MOVWF   POSTDEC1
0118 5000      05371         MOVF    r0x1a, W
011A 6EE5      05372         MOVWF   POSTDEC1
011C 5000      05373         MOVF    r0x19, W
011E 6EE5      05374         MOVWF   POSTDEC1
0120 5000      05375         MOVF    r0x18, W
0122 6EE5      05376         MOVWF   POSTDEC1
0124 5000      05377         MOVF    r0x17, W
0126 6EE5      05378         MOVWF   POSTDEC1
0128 5000      05379         MOVF    r0x16, W
012A 6EE5      05380         MOVWF   POSTDEC1
012C 5000      05381         MOVF    r0x15, W
012E 6EE5      05382         MOVWF   POSTDEC1
0130 5000      05383         MOVF    r0x14, W
0132 6EE5      05384         MOVWF   POSTDEC1
0134 5000      05385         MOVF    r0x13, W
0136 6EE5      05386         MOVWF   POSTDEC1
0138 5000      05387         MOVF    r0x12, W
013A 6EE5      05388         MOVWF   POSTDEC1
013C 5000      05389         MOVF    r0x11, W
013E 6EE5      05390         MOVWF   POSTDEC1
0140 5000      05391         MOVF    r0x10, W
0142 6EE5      05392         MOVWF   POSTDEC1
0144 5000      05393         MOVF    r0x0f, W
0146 6EE5      05394         MOVWF   POSTDEC1
0148 EC00 F000 05395         CALL    _extractBootProtHeader
014C 0E0F      05396         MOVLW   0x0f
014E 26E1      05397         ADDWF   FSR1L, F
               05398 ;       .line   456; MainDemo.c UDPDiscard();
0150 EC00 F000 05399         CALL    _UDPDiscard
               05400 ;       .line   458; MainDemo.c switch(dhcp_type){
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0154 C000 F000 05401         MOVFF   _rcvdFromClient_dhcp_type_1_1, r0x06
0158 6A00      05402         CLRF    r0x07
015A 5000      05403         MOVF    r0x06, W
015C 0A01      05404         XORLW   0x01
015E E100      05405         BNZ     _00305_DS_
0160 5000      05406         MOVF    r0x07, W
0162 E000      05407         BZ      _00279_DS_
0164 05408 _00305_DS_:
0164 5000      05409         MOVF    r0x06, W
0166 0A03      05410         XORLW   0x03
0168 E100      05411         BNZ     _00307_DS_
016A 5000      05412         MOVF    r0x07, W
016C E100      05413         BNZ     _00307_DS_
016E D000      05414         BRA     _00282_DS_
0170 05415 _00307_DS_:
0170 D000      05416         BRA     _00292_DS_
0172 05417 _00279_DS_:
               05418 ;       .line   460; MainDemo.c while(!UDPIsPutReady(*send_s_socket));
0172 C000 FFE9 05419         MOVFF   r0x00, FSR0L
0176 C000 FFF3 05420         MOVFF   r0x01, PRODL
017A 5000      05421         MOVF    r0x02, W
017C EC00 F000 05422         CALL    __gptrget1
0180 6E00      05423         MOVWF   r0x06
0182 5000      05424         MOVF    r0x06, W
0184 6EE5      05425         MOVWF   POSTDEC1
0186 EC00 F000 05426         CALL    _UDPIsPutReady
018A 6E00      05427         MOVWF   r0x06
018C CFF3 F000 05428         MOVFF   PRODL, r0x07
0190 2AE1      05429         INCF    FSR1L, F
0192 5000      05430         MOVF    r0x06, W
0194 1000      05431         IORWF   r0x07, W
0196 E000      05432         BZ      _00279_DS_
               05433 ;       .line   461; MainDemo.c addMacFromServ();
0198 EC00 F000 05434         CALL    _addMacFromServ
               05435 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x06
               05436 ; ;Unrolled 8 X 8 multiplication
               05437 ; ;FIXME: the function does not support result==WREG
019C 0000      05438         BANKSEL _activeUDPSocket
               05439 ;       .line   462; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];
019E 5100      05440         MOVF    _activeUDPSocket, W, B
01A0 0D0E      05441         MULLW   0x0e
01A2 CFF3 F000 05442         MOVFF   PRODL, r0x06
01A6 6A00      05443         CLRF    r0x07
01A8 0E00      05444         MOVLW   LOW(_UDPSocketInfo)
01AA 2600      05445         ADDWF   r0x06, F
01AC 0E00      05446         MOVLW   HIGH(_UDPSocketInfo)
01AE 2200      05447         ADDWFC  r0x07, F
01B0 5000      05448         MOVF    r0x07, W
01B2 6E00      05449         MOVWF   r0x0a
01B4 5000      05450         MOVF    r0x06, W
01B6 6E00      05451         MOVWF   r0x09
01B8 0E80      05452         MOVLW   0x80
01BA 6E00      05453         MOVWF   r0x0b
               05454 ;       .line   463; MainDemo.c setDhcpIp(&info->remoteNode.IPAddr);
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01BC 5000      05455         MOVF    r0x0b, W
01BE 6EE5      05456         MOVWF   POSTDEC1
01C0 5000      05457         MOVF    r0x0a, W
01C2 6EE5      05458         MOVWF   POSTDEC1
01C4 5000      05459         MOVF    r0x09, W
01C6 6EE5      05460         MOVWF   POSTDEC1
01C8 EC00 F000 05461         CALL    _setDhcpIp
01CC 0E03      05462         MOVLW   0x03
01CE 26E1      05463         ADDWF   FSR1L, F
               05464 ;       .line   465; MainDemo.c DisplayString(0, "DHCP DISCOVERY");
01D0 0E00      05465         MOVLW   UPPER(__str_4)
01D2 6EE5      05466         MOVWF   POSTDEC1
01D4 0E00      05467         MOVLW   HIGH(__str_4)
01D6 6EE5      05468         MOVWF   POSTDEC1
01D8 0E00      05469         MOVLW   LOW(__str_4)
01DA 6EE5      05470         MOVWF   POSTDEC1
01DC 0E00      05471         MOVLW   0x00
01DE 6EE5      05472         MOVWF   POSTDEC1
01E0 EC00 F000 05473         CALL    _DisplayString
01E4 0E04      05474         MOVLW   0x04
01E6 26E1      05475         ADDWF   FSR1L, F
               05476 ;       .line   466; MainDemo.c buildBootpHeader(&bootp_header, send_s_socket);
01E8 0E00      05477         MOVLW   HIGH(_rcvdFromClient_bootp_header_1_1)
01EA 6E00      05478         MOVWF   r0x07
01EC 0E00      05479         MOVLW   LOW(_rcvdFromClient_bootp_header_1_1)
01EE 6E00      05480         MOVWF   r0x06
01F0 0E80      05481         MOVLW   0x80
01F2 6E00      05482         MOVWF   r0x08
01F4 5000      05483         MOVF    r0x02, W
01F6 6EE5      05484         MOVWF   POSTDEC1
01F8 5000      05485         MOVF    r0x01, W
01FA 6EE5      05486         MOVWF   POSTDEC1
01FC 5000      05487         MOVF    r0x00, W
01FE 6EE5      05488         MOVWF   POSTDEC1
0200 5000      05489         MOVF    r0x08, W
0202 6EE5      05490         MOVWF   POSTDEC1
0204 5000      05491         MOVF    r0x07, W
0206 6EE5      05492         MOVWF   POSTDEC1
0208 5000      05493         MOVF    r0x06, W
020A 6EE5      05494         MOVWF   POSTDEC1
020C EC00 F000 05495         CALL    _buildBootpHeader
0210 0E06      05496         MOVLW   0x06
0212 26E1      05497         ADDWF   FSR1L, F
               05498 ;       .line   467; MainDemo.c buildDiscoverMsg();
0214 EC00 F000 05499         CALL    _buildDiscoverMsg
               05500 ;       .line   468; MainDemo.c break;
0218 D000      05501         BRA     _00294_DS_
021A 05502 _00282_DS_:
               05503 ;       .line   470; MainDemo.c DisplayString(0, "DHCP REQUEST");
021A 0E00      05504         MOVLW   UPPER(__str_5)
021C 6EE5      05505         MOVWF   POSTDEC1
021E 0E00      05506         MOVLW   HIGH(__str_5)
0220 6EE5      05507         MOVWF   POSTDEC1
0222 0E00      05508         MOVLW   LOW(__str_5)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0224 6EE5      05509         MOVWF   POSTDEC1
0226 0E00      05510         MOVLW   0x00
0228 6EE5      05511         MOVWF   POSTDEC1
022A EC00 F000 05512         CALL    _DisplayString
022E 0E04      05513         MOVLW   0x04
0230 26E1      05514         ADDWF   FSR1L, F
               05515 ;       .line   472; MainDemo.c if(findInPool(&pool_it,remote_node_MAC)){                
0232 0E00      05516         MOVLW   HIGH(_rcvdFromClient_pool_it_1_1)
0234 6E00      05517         MOVWF   r0x07
0236 0E00      05518         MOVLW   LOW(_rcvdFromClient_pool_it_1_1)
0238 6E00      05519         MOVWF   r0x06
023A 0E80      05520         MOVLW   0x80
023C 6E00      05521         MOVWF   r0x08
023E 5000      05522         MOVF    r0x0e, W
0240 6EE5      05523         MOVWF   POSTDEC1
0242 5000      05524         MOVF    r0x0d, W
0244 6EE5      05525         MOVWF   POSTDEC1
0246 5000      05526         MOVF    r0x0c, W
0248 6EE5      05527         MOVWF   POSTDEC1
024A 5000      05528         MOVF    r0x08, W
024C 6EE5      05529         MOVWF   POSTDEC1
024E 5000      05530         MOVF    r0x07, W
0250 6EE5      05531         MOVWF   POSTDEC1
0252 5000      05532         MOVF    r0x06, W
0254 6EE5      05533         MOVWF   POSTDEC1
0256 EC00 F000 05534         CALL    _findInPool
025A 6E00      05535         MOVWF   r0x06
025C 0E06      05536         MOVLW   0x06
025E 26E1      05537         ADDWF   FSR1L, F
0260 5000      05538         MOVF    r0x06, W
0262 B4D8      05539         BTFSC   STATUS, 2
0264 D000      05540         BRA     _00286_DS_
0266 05541 _00283_DS_:
               05542 ;       .line   473; MainDemo.c while(!UDPIsPutReady(*send_c_socket));
0266 C000 FFE9 05543         MOVFF   r0x03, FSR0L
026A C000 FFF3 05544         MOVFF   r0x04, PRODL
026E 5000      05545         MOVF    r0x05, W
0270 EC00 F000 05546         CALL    __gptrget1
0274 6E00      05547         MOVWF   r0x06
0276 5000      05548         MOVF    r0x06, W
0278 6EE5      05549         MOVWF   POSTDEC1
027A EC00 F000 05550         CALL    _UDPIsPutReady
027E 6E00      05551         MOVWF   r0x06
0280 CFF3 F000 05552         MOVFF   PRODL, r0x07
0284 2AE1      05553         INCF    FSR1L, F
0286 5000      05554         MOVF    r0x06, W
0288 1000      05555         IORWF   r0x07, W
028A E000      05556         BZ      _00283_DS_
               05557 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x06
               05558 ; ;Unrolled 8 X 8 multiplication
               05559 ; ;FIXME: the function does not support result==WREG
028C 0000      05560         BANKSEL _activeUDPSocket
               05561 ;       .line   474; MainDemo.c info = &UDPSocketInfo[activeUDPSocket]; 
028E 5100      05562         MOVF    _activeUDPSocket, W, B
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0290 0D0E      05563         MULLW   0x0e
0292 CFF3 F000 05564         MOVFF   PRODL, r0x06
0296 6A00      05565         CLRF    r0x07
0298 0E00      05566         MOVLW   LOW(_UDPSocketInfo)
029A 2600      05567         ADDWF   r0x06, F
029C 0E00      05568         MOVLW   HIGH(_UDPSocketInfo)
029E 2200      05569         ADDWFC  r0x07, F
02A0 5000      05570         MOVF    r0x07, W
02A2 6E00      05571         MOVWF   r0x0a
02A4 5000      05572         MOVF    r0x06, W
02A6 6E00      05573         MOVWF   r0x09
02A8 0E80      05574         MOVLW   0x80
02AA 6E00      05575         MOVWF   r0x0b
               05576 ;       .line   475; MainDemo.c setDhcpIp(&info->remoteNode.IPAddr);
02AC 5000      05577         MOVF    r0x0b, W
02AE 6EE5      05578         MOVWF   POSTDEC1
02B0 5000      05579         MOVF    r0x0a, W
02B2 6EE5      05580         MOVWF   POSTDEC1
02B4 5000      05581         MOVF    r0x09, W
02B6 6EE5      05582         MOVWF   POSTDEC1
02B8 EC00 F000 05583         CALL    _setDhcpIp
02BC 0E03      05584         MOVLW   0x03
02BE 26E1      05585         ADDWF   FSR1L, F
               05586 ;       .line   476; MainDemo.c pool_it->client_leasetime = CLIENT_LEASE_TIME;
02C0 C000 F000 05587         MOVFF   _rcvdFromClient_pool_it_1_1, r0x06
02C4 C000 F000 05588         MOVFF   (_rcvdFromClient_pool_it_1_1 + 1), r0x07
02C8 C000 F000 05589         MOVFF   (_rcvdFromClient_pool_it_1_1 + 2), r0x08
02CC 5000      05590         MOVF    r0x06, W
02CE 0F0C      05591         ADDLW   0x0c
02D0 6E00      05592         MOVWF   r0x0c
02D2 0E00      05593         MOVLW   0x00
02D4 2000      05594         ADDWFC  r0x07, W
02D6 6E00      05595         MOVWF   r0x0d
02D8 0E00      05596         MOVLW   0x00
02DA 2000      05597         ADDWFC  r0x08, W
02DC 6E00      05598         MOVWF   r0x0e
02DE 0E2C      05599         MOVLW   0x2c
02E0 6EE5      05600         MOVWF   POSTDEC1
02E2 0E01      05601         MOVLW   0x01
02E4 6EF4      05602         MOVWF   PRODH
02E6 0E00      05603         MOVLW   0x00
02E8 6EF6      05604         MOVWF   TBLPTRL
02EA 0E00      05605         MOVLW   0x00
02EC 6EF7      05606         MOVWF   TBLPTRH
02EE C000 FFE9 05607         MOVFF   r0x0c, FSR0L
02F2 C000 FFF3 05608         MOVFF   r0x0d, PRODL
02F6 5000      05609         MOVF    r0x0e, W
02F8 EC00 F000 05610         CALL    __gptrput4
               05611 ;       .line   477; MainDemo.c pool_it->terms_missed = 0;
02FC 5000      05612         MOVF    r0x06, W
02FE 0F0A      05613         ADDLW   0x0a
0300 6E00      05614         MOVWF   r0x0c
0302 0E00      05615         MOVLW   0x00
0304 2000      05616         ADDWFC  r0x07, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0306 6E00      05617         MOVWF   r0x0d
0308 0E00      05618         MOVLW   0x00
030A 2000      05619         ADDWFC  r0x08, W
030C 6E00      05620         MOVWF   r0x0e
030E 0E00      05621         MOVLW   0x00
0310 6EE5      05622         MOVWF   POSTDEC1
0312 0E00      05623         MOVLW   0x00
0314 6EF4      05624         MOVWF   PRODH
0316 C000 FFE9 05625         MOVFF   r0x0c, FSR0L
031A C000 FFF3 05626         MOVFF   r0x0d, PRODL
031E 5000      05627         MOVF    r0x0e, W
0320 EC00 F000 05628         CALL    __gptrput2
               05629 ;       .line   478; MainDemo.c configureBootpHeader(&bootp_header, bootp_header.TransactionID, &bootp_header.ClientIP, &pool_it->ip, &pool_it->mac, BOOT_REPLY);
0324 0E00      05630         MOVLW   HIGH(_rcvdFromClient_bootp_header_1_1)
0326 6E00      05631         MOVWF   r0x0d
0328 0E00      05632         MOVLW   LOW(_rcvdFromClient_bootp_header_1_1)
032A 6E00      05633         MOVWF   r0x0c
032C 0E80      05634         MOVLW   0x80
032E 6E00      05635         MOVWF   r0x0e
0330 0E00      05636         MOVLW   HIGH(_rcvdFromClient_bootp_header_1_1 + 12)
0332 6E00      05637         MOVWF   r0x10
0334 0E00      05638         MOVLW   LOW(_rcvdFromClient_bootp_header_1_1 + 12)
0336 6E00      05639         MOVWF   r0x0f
0338 0E80      05640         MOVLW   0x80
033A 6E00      05641         MOVWF   r0x11
033C 5000      05642         MOVF    r0x06, W
033E 0F04      05643         ADDLW   0x04
0340 6E00      05644         MOVWF   r0x12
0342 0E00      05645         MOVLW   0x00
0344 2000      05646         ADDWFC  r0x07, W
0346 6E00      05647         MOVWF   r0x13
0348 0E00      05648         MOVLW   0x00
034A 2000      05649         ADDWFC  r0x08, W
034C 6E00      05650         MOVWF   r0x14
034E 0E02      05651         MOVLW   0x02
0350 6EE5      05652         MOVWF   POSTDEC1
0352 5000      05653         MOVF    r0x14, W
0354 6EE5      05654         MOVWF   POSTDEC1
0356 5000      05655         MOVF    r0x13, W
0358 6EE5      05656         MOVWF   POSTDEC1
035A 5000      05657         MOVF    r0x12, W
035C 6EE5      05658         MOVWF   POSTDEC1
035E 5000      05659         MOVF    r0x08, W
0360 6EE5      05660         MOVWF   POSTDEC1
0362 5000      05661         MOVF    r0x07, W
0364 6EE5      05662         MOVWF   POSTDEC1
0366 5000      05663         MOVF    r0x06, W
0368 6EE5      05664         MOVWF   POSTDEC1
036A 5000      05665         MOVF    r0x11, W
036C 6EE5      05666         MOVWF   POSTDEC1
036E 5000      05667         MOVF    r0x10, W
0370 6EE5      05668         MOVWF   POSTDEC1
0372 5000      05669         MOVF    r0x0f, W
0374 6EE5      05670         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0376 0000      05671         BANKSEL (_rcvdFromClient_bootp_header_1_1 + 7)
0378 5100      05672         MOVF    (_rcvdFromClient_bootp_header_1_1 + 7), W, B
037A 6EE5      05673         MOVWF   POSTDEC1
037C 0000      05674         BANKSEL (_rcvdFromClient_bootp_header_1_1 + 6)
037E 5100      05675         MOVF    (_rcvdFromClient_bootp_header_1_1 + 6), W, B
0380 6EE5      05676         MOVWF   POSTDEC1
0382 0000      05677         BANKSEL (_rcvdFromClient_bootp_header_1_1 + 5)
0384 5100      05678         MOVF    (_rcvdFromClient_bootp_header_1_1 + 5), W, B
0386 6EE5      05679         MOVWF   POSTDEC1
0388 0000      05680         BANKSEL (_rcvdFromClient_bootp_header_1_1 + 4)
038A 5100      05681         MOVF    (_rcvdFromClient_bootp_header_1_1 + 4), W, B
038C 6EE5      05682         MOVWF   POSTDEC1
038E 5000      05683         MOVF    r0x0e, W
0390 6EE5      05684         MOVWF   POSTDEC1
0392 5000      05685         MOVF    r0x0d, W
0394 6EE5      05686         MOVWF   POSTDEC1
0396 5000      05687         MOVF    r0x0c, W
0398 6EE5      05688         MOVWF   POSTDEC1
039A EC00 F000 05689         CALL    _configureBootpHeader
039E 0E11      05690         MOVLW   0x11
03A0 26E1      05691         ADDWF   FSR1L, F
               05692 ;       .line   479; MainDemo.c transmitToClient(&bootp_header, send_c_socket, DHCP_ACK_MESSAGE);
03A2 0E00      05693         MOVLW   HIGH(_rcvdFromClient_bootp_header_1_1)
03A4 6E00      05694         MOVWF   r0x07
03A6 0E00      05695         MOVLW   LOW(_rcvdFromClient_bootp_header_1_1)
03A8 6E00      05696         MOVWF   r0x06
03AA 0E80      05697         MOVLW   0x80
03AC 6E00      05698         MOVWF   r0x08
03AE 0E05      05699         MOVLW   0x05
03B0 6EE5      05700         MOVWF   POSTDEC1
03B2 5000      05701         MOVF    r0x05, W
03B4 6EE5      05702         MOVWF   POSTDEC1
03B6 5000      05703         MOVF    r0x04, W
03B8 6EE5      05704         MOVWF   POSTDEC1
03BA 5000      05705         MOVF    r0x03, W
03BC 6EE5      05706         MOVWF   POSTDEC1
03BE 5000      05707         MOVF    r0x08, W
03C0 6EE5      05708         MOVWF   POSTDEC1
03C2 5000      05709         MOVF    r0x07, W
03C4 6EE5      05710         MOVWF   POSTDEC1
03C6 5000      05711         MOVF    r0x06, W
03C8 6EE5      05712         MOVWF   POSTDEC1
03CA EC00 F000 05713         CALL    _transmitToClient
03CE 0E07      05714         MOVLW   0x07
03D0 26E1      05715         ADDWF   FSR1L, F
03D2 D000      05716         BRA     _00294_DS_
03D4 05717 _00286_DS_:
               05718 ;       .line   483; MainDemo.c while(!UDPIsPutReady(*send_s_socket));
03D4 C000 FFE9 05719         MOVFF   r0x00, FSR0L
03D8 C000 FFF3 05720         MOVFF   r0x01, PRODL
03DC 5000      05721         MOVF    r0x02, W
03DE EC00 F000 05722         CALL    __gptrget1
03E2 6E00      05723         MOVWF   r0x03
03E4 5000      05724         MOVF    r0x03, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03E6 6EE5      05725         MOVWF   POSTDEC1
03E8 EC00 F000 05726         CALL    _UDPIsPutReady
03EC 6E00      05727         MOVWF   r0x03
03EE CFF3 F000 05728         MOVFF   PRODL, r0x04
03F2 2AE1      05729         INCF    FSR1L, F
03F4 5000      05730         MOVF    r0x03, W
03F6 1000      05731         IORWF   r0x04, W
03F8 E000      05732         BZ      _00286_DS_
               05733 ;       .line   484; MainDemo.c addMacFromServ();
03FA EC00 F000 05734         CALL    _addMacFromServ
               05735 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x03
               05736 ; ;Unrolled 8 X 8 multiplication
               05737 ; ;FIXME: the function does not support result==WREG
03FE 0000      05738         BANKSEL _activeUDPSocket
               05739 ;       .line   485; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];             
0400 5100      05740         MOVF    _activeUDPSocket, W, B
0402 0D0E      05741         MULLW   0x0e
0404 CFF3 F000 05742         MOVFF   PRODL, r0x03
0408 6A00      05743         CLRF    r0x04
040A 0E00      05744         MOVLW   LOW(_UDPSocketInfo)
040C 2600      05745         ADDWF   r0x03, F
040E 0E00      05746         MOVLW   HIGH(_UDPSocketInfo)
0410 2200      05747         ADDWFC  r0x04, F
0412 5000      05748         MOVF    r0x04, W
0414 6E00      05749         MOVWF   r0x0a
0416 5000      05750         MOVF    r0x03, W
0418 6E00      05751         MOVWF   r0x09
041A 0E80      05752         MOVLW   0x80
041C 6E00      05753         MOVWF   r0x0b
               05754 ;       .line   486; MainDemo.c setDhcpIp(&info->remoteNode.IPAddr);
041E 5000      05755         MOVF    r0x0b, W
0420 6EE5      05756         MOVWF   POSTDEC1
0422 5000      05757         MOVF    r0x0a, W
0424 6EE5      05758         MOVWF   POSTDEC1
0426 5000      05759         MOVF    r0x09, W
0428 6EE5      05760         MOVWF   POSTDEC1
042A EC00 F000 05761         CALL    _setDhcpIp
042E 0E03      05762         MOVLW   0x03
0430 26E1      05763         ADDWF   FSR1L, F
               05764 ;       .line   487; MainDemo.c buildBootpHeader(&bootp_header, send_s_socket);
0432 0E00      05765         MOVLW   HIGH(_rcvdFromClient_bootp_header_1_1)
0434 6E00      05766         MOVWF   r0x04
0436 0E00      05767         MOVLW   LOW(_rcvdFromClient_bootp_header_1_1)
0438 6E00      05768         MOVWF   r0x03
043A 0E80      05769         MOVLW   0x80
043C 6E00      05770         MOVWF   r0x05
043E 5000      05771         MOVF    r0x02, W
0440 6EE5      05772         MOVWF   POSTDEC1
0442 5000      05773         MOVF    r0x01, W
0444 6EE5      05774         MOVWF   POSTDEC1
0446 5000      05775         MOVF    r0x00, W
0448 6EE5      05776         MOVWF   POSTDEC1
044A 5000      05777         MOVF    r0x05, W
044C 6EE5      05778         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
044E 5000      05779         MOVF    r0x04, W
0450 6EE5      05780         MOVWF   POSTDEC1
0452 5000      05781         MOVF    r0x03, W
0454 6EE5      05782         MOVWF   POSTDEC1
0456 EC00 F000 05783         CALL    _buildBootpHeader
045A 0E06      05784         MOVLW   0x06
045C 26E1      05785         ADDWF   FSR1L, F
               05786 ;       .line   488; MainDemo.c sendRequestMsg(dhcp_header, dhcp_header_length);
045E 0E00      05787         MOVLW   HIGH(_rcvdFromClient_dhcp_header_1_1)
0460 6E00      05788         MOVWF   r0x01
0462 0E00      05789         MOVLW   LOW(_rcvdFromClient_dhcp_header_1_1)
0464 6E00      05790         MOVWF   r0x00
0466 0E80      05791         MOVLW   0x80
0468 6E00      05792         MOVWF   r0x02
046A 0000      05793         BANKSEL (_rcvdFromClient_dhcp_header_length_1_1 + 1)
046C 5100      05794         MOVF    (_rcvdFromClient_dhcp_header_length_1_1 + 1), W, B
046E 6EE5      05795         MOVWF   POSTDEC1
0470 0000      05796         BANKSEL _rcvdFromClient_dhcp_header_length_1_1
0472 5100      05797         MOVF    _rcvdFromClient_dhcp_header_length_1_1, W, B
0474 6EE5      05798         MOVWF   POSTDEC1
0476 5000      05799         MOVF    r0x02, W
0478 6EE5      05800         MOVWF   POSTDEC1
047A 5000      05801         MOVF    r0x01, W
047C 6EE5      05802         MOVWF   POSTDEC1
047E 5000      05803         MOVF    r0x00, W
0480 6EE5      05804         MOVWF   POSTDEC1
0482 EC00 F000 05805         CALL    _sendRequestMsg
0486 0E05      05806         MOVLW   0x05
0488 26E1      05807         ADDWF   FSR1L, F
               05808 ;       .line   490; MainDemo.c break;
048A D000      05809         BRA     _00294_DS_
048C 05810 _00292_DS_:
               05811 ;       .line   492; MainDemo.c DisplayString(0, "Wrong DHCP type");
048C 0E00      05812         MOVLW   UPPER(__str_6)
048E 6EE5      05813         MOVWF   POSTDEC1
0490 0E00      05814         MOVLW   HIGH(__str_6)
0492 6EE5      05815         MOVWF   POSTDEC1
0494 0E00      05816         MOVLW   LOW(__str_6)
0496 6EE5      05817         MOVWF   POSTDEC1
0498 0E00      05818         MOVLW   0x00
049A 6EE5      05819         MOVWF   POSTDEC1
049C EC00 F000 05820         CALL    _DisplayString
04A0 0E04      05821         MOVLW   0x04
04A2 26E1      05822         ADDWF   FSR1L, F
04A4 05823 _00294_DS_:
               05824 ;       .line   494; MainDemo.c }
04A4 CFE4 F000 05825         MOVFF   PREINC1, r0x1a
04A8 CFE4 F000 05826         MOVFF   PREINC1, r0x19
04AC CFE4 F000 05827         MOVFF   PREINC1, r0x18
04B0 CFE4 F000 05828         MOVFF   PREINC1, r0x17
04B4 CFE4 F000 05829         MOVFF   PREINC1, r0x16
04B8 CFE4 F000 05830         MOVFF   PREINC1, r0x15
04BC CFE4 F000 05831         MOVFF   PREINC1, r0x14
04C0 CFE4 F000 05832         MOVFF   PREINC1, r0x13
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
04C4 CFE4 F000 05833         MOVFF   PREINC1, r0x12
04C8 CFE4 F000 05834         MOVFF   PREINC1, r0x11
04CC CFE4 F000 05835         MOVFF   PREINC1, r0x10
04D0 CFE4 F000 05836         MOVFF   PREINC1, r0x0f
04D4 CFE4 F000 05837         MOVFF   PREINC1, r0x0e
04D8 CFE4 F000 05838         MOVFF   PREINC1, r0x0d
04DC CFE4 F000 05839         MOVFF   PREINC1, r0x0c
04E0 CFE4 F000 05840         MOVFF   PREINC1, r0x0b
04E4 CFE4 F000 05841         MOVFF   PREINC1, r0x0a
04E8 CFE4 F000 05842         MOVFF   PREINC1, r0x09
04EC CFE4 F000 05843         MOVFF   PREINC1, r0x08
04F0 CFE4 F000 05844         MOVFF   PREINC1, r0x07
04F4 CFE4 F000 05845         MOVFF   PREINC1, r0x06
04F8 CFE4 F000 05846         MOVFF   PREINC1, r0x05
04FC CFE4 F000 05847         MOVFF   PREINC1, r0x04
0500 CFE4 F000 05848         MOVFF   PREINC1, r0x03
0504 CFE4 F000 05849         MOVFF   PREINC1, r0x02
0508 CFE4 F000 05850         MOVFF   PREINC1, r0x01
050C CFE4 F000 05851         MOVFF   PREINC1, r0x00
0510 CFE4 FFD9 05852         MOVFF   PREINC1, FSR2L
0514 0012      05853         RETURN  
               05854 
               05855 ; ; Starting pCode block
               05856 S_MainDemo__transmitToClient    code
0000 05857 _transmitToClient:
               05858 ;       .line   373; MainDemo.c void transmitToClient(BOOTP_HEADER *bootp_header, UDP_SOCKET *send_c_socket, BYTE packet_type) {
0000 CFD9 FFE5 05859         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 05860         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 05861         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 05862         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 05863         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 05864         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 05865         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 05866         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 05867         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 05868         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 05869         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 05870         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 05871         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 05872         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 05873         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 05874         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 05875         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 05876         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 05877         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 05878         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 05879         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 05880         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 05881         MOVFF   r0x14, POSTDEC1
005C 0E02      05882         MOVLW   0x02
005E CFDB F000 05883         MOVFF   PLUSW2, r0x00
0062 0E03      05884         MOVLW   0x03
0064 CFDB F000 05885         MOVFF   PLUSW2, r0x01
0068 0E04      05886         MOVLW   0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006A CFDB F000 05887         MOVFF   PLUSW2, r0x02
006E 0E05      05888         MOVLW   0x05
0070 CFDB F000 05889         MOVFF   PLUSW2, r0x03
0074 0E06      05890         MOVLW   0x06
0076 CFDB F000 05891         MOVFF   PLUSW2, r0x04
007A 0E07      05892         MOVLW   0x07
007C CFDB F000 05893         MOVFF   PLUSW2, r0x05
0080 0E08      05894         MOVLW   0x08
0082 CFDB F000 05895         MOVFF   PLUSW2, r0x06
0086 05896 _00235_DS_:
               05897 ;       .line   379; MainDemo.c while(!UDPIsPutReady(*send_c_socket));
0086 C000 FFE9 05898         MOVFF   r0x03, FSR0L
008A C000 FFF3 05899         MOVFF   r0x04, PRODL
008E 5000      05900         MOVF    r0x05, W
0090 EC00 F000 05901         CALL    __gptrget1
0094 6E00      05902         MOVWF   r0x07
0096 5000      05903         MOVF    r0x07, W
0098 6EE5      05904         MOVWF   POSTDEC1
009A EC00 F000 05905         CALL    _UDPIsPutReady
009E 6E00      05906         MOVWF   r0x07
00A0 CFF3 F000 05907         MOVFF   PRODL, r0x08
00A4 2AE1      05908         INCF    FSR1L, F
00A6 5000      05909         MOVF    r0x07, W
00A8 1000      05910         IORWF   r0x08, W
00AA E000      05911         BZ      _00235_DS_
               05912 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x07
               05913 ; ;Unrolled 8 X 8 multiplication
               05914 ; ;FIXME: the function does not support result==WREG
00AC 0000      05915         BANKSEL _activeUDPSocket
               05916 ;       .line   381; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];
00AE 5100      05917         MOVF    _activeUDPSocket, W, B
00B0 0D0E      05918         MULLW   0x0e
00B2 CFF3 F000 05919         MOVFF   PRODL, r0x07
00B6 6A00      05920         CLRF    r0x08
00B8 0E00      05921         MOVLW   LOW(_UDPSocketInfo)
00BA 2600      05922         ADDWF   r0x07, F
00BC 0E00      05923         MOVLW   HIGH(_UDPSocketInfo)
00BE 2200      05924         ADDWFC  r0x08, F
00C0 5000      05925         MOVF    r0x08, W
00C2 6E00      05926         MOVWF   r0x08
00C4 5000      05927         MOVF    r0x07, W
00C6 6E00      05928         MOVWF   r0x07
00C8 0E80      05929         MOVLW   0x80
00CA 6E00      05930         MOVWF   r0x09
               05931 ;       .line   382; MainDemo.c for(i=0; i<4; i++){
00CC 6A00      05932         CLRF    r0x0a
00CE 6A00      05933         CLRF    r0x0b
00D0 05934 _00241_DS_:
00D0 5000      05935         MOVF    r0x0b, W
00D2 0F80      05936         ADDLW   0x80
00D4 0F80      05937         ADDLW   0x80
00D6 E100      05938         BNZ     _00268_DS_
00D8 0E04      05939         MOVLW   0x04
00DA 5C00      05940         SUBWF   r0x0a, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DC 05941 _00268_DS_:
00DC E200      05942         BC      _00244_DS_
               05943 ;       .line   383; MainDemo.c info->remoteNode.IPAddr.v[i] = 255;
00DE 5000      05944         MOVF    r0x0a, W
00E0 2400      05945         ADDWF   r0x07, W
00E2 6E00      05946         MOVWF   r0x0c
00E4 5000      05947         MOVF    r0x0b, W
00E6 2000      05948         ADDWFC  r0x08, W
00E8 6E00      05949         MOVWF   r0x0d
00EA 6AE8      05950         CLRF    WREG
00EC BE00      05951         BTFSC   r0x0b, 7
00EE 68E8      05952         SETF    WREG
00F0 2000      05953         ADDWFC  r0x09, W
00F2 6E00      05954         MOVWF   r0x0e
00F4 0EFF      05955         MOVLW   0xff
00F6 6EE5      05956         MOVWF   POSTDEC1
00F8 C000 FFE9 05957         MOVFF   r0x0c, FSR0L
00FC C000 FFF3 05958         MOVFF   r0x0d, PRODL
0100 5000      05959         MOVF    r0x0e, W
0102 EC00 F000 05960         CALL    __gptrput1
               05961 ;       .line   382; MainDemo.c for(i=0; i<4; i++){
0106 2A00      05962         INCF    r0x0a, F
0108 B0D8      05963         BTFSC   STATUS, 0
010A 2A00      05964         INCF    r0x0b, F
010C D000      05965         BRA     _00241_DS_
010E 05966 _00244_DS_:
               05967 ;       .line   386; MainDemo.c info->remotePort = DHCP_CLIENT_PORT;
010E 5000      05968         MOVF    r0x07, W
0110 0F0A      05969         ADDLW   0x0a
0112 6E00      05970         MOVWF   r0x0a
0114 0E00      05971         MOVLW   0x00
0116 2000      05972         ADDWFC  r0x08, W
0118 6E00      05973         MOVWF   r0x0b
011A 0E00      05974         MOVLW   0x00
011C 2000      05975         ADDWFC  r0x09, W
011E 6E00      05976         MOVWF   r0x0c
0120 0E44      05977         MOVLW   0x44
0122 6EE5      05978         MOVWF   POSTDEC1
0124 0E00      05979         MOVLW   0x00
0126 6EF4      05980         MOVWF   PRODH
0128 C000 FFE9 05981         MOVFF   r0x0a, FSR0L
012C C000 FFF3 05982         MOVFF   r0x0b, PRODL
0130 5000      05983         MOVF    r0x0c, W
0132 EC00 F000 05984         CALL    __gptrput2
               05985 ;       .line   389; MainDemo.c for (i=0; i<sizeof(IP_ADDR); i++) {
0136 0E04      05986         MOVLW   0x04
0138 2600      05987         ADDWF   r0x07, F
013A 0E00      05988         MOVLW   0x00
013C 2200      05989         ADDWFC  r0x08, F
013E 0E00      05990         MOVLW   0x00
0140 2200      05991         ADDWFC  r0x09, F
0142 5000      05992         MOVF    r0x00, W
0144 0F1C      05993         ADDLW   0x1c
0146 6E00      05994         MOVWF   r0x0a
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0148 0E00      05995         MOVLW   0x00
014A 2000      05996         ADDWFC  r0x01, W
014C 6E00      05997         MOVWF   r0x0b
014E 0E00      05998         MOVLW   0x00
0150 2000      05999         ADDWFC  r0x02, W
0152 6E00      06000         MOVWF   r0x0c
0154 6A00      06001         CLRF    r0x0d
0156 6A00      06002         CLRF    r0x0e
0158 06003 _00245_DS_:
0158 5000      06004         MOVF    r0x0e, W
015A 0F80      06005         ADDLW   0x80
015C 0F80      06006         ADDLW   0x80
015E E100      06007         BNZ     _00269_DS_
0160 0E04      06008         MOVLW   0x04
0162 5C00      06009         SUBWF   r0x0d, W
0164 06010 _00269_DS_:
0164 E200      06011         BC      _00248_DS_
               06012 ;       .line   390; MainDemo.c info->remoteNode.MACAddr.v[i] = bootp_header->ClientMAC.v[i];
0166 5000      06013         MOVF    r0x0d, W
0168 2400      06014         ADDWF   r0x07, W
016A 6E00      06015         MOVWF   r0x0f
016C 5000      06016         MOVF    r0x0e, W
016E 2000      06017         ADDWFC  r0x08, W
0170 6E00      06018         MOVWF   r0x10
0172 6AE8      06019         CLRF    WREG
0174 BE00      06020         BTFSC   r0x0e, 7
0176 68E8      06021         SETF    WREG
0178 2000      06022         ADDWFC  r0x09, W
017A 6E00      06023         MOVWF   r0x11
017C 5000      06024         MOVF    r0x0d, W
017E 2400      06025         ADDWF   r0x0a, W
0180 6E00      06026         MOVWF   r0x12
0182 5000      06027         MOVF    r0x0e, W
0184 2000      06028         ADDWFC  r0x0b, W
0186 6E00      06029         MOVWF   r0x13
0188 6AE8      06030         CLRF    WREG
018A BE00      06031         BTFSC   r0x0e, 7
018C 68E8      06032         SETF    WREG
018E 2000      06033         ADDWFC  r0x0c, W
0190 6E00      06034         MOVWF   r0x14
0192 C000 FFE9 06035         MOVFF   r0x12, FSR0L
0196 C000 FFF3 06036         MOVFF   r0x13, PRODL
019A 5000      06037         MOVF    r0x14, W
019C EC00 F000 06038         CALL    __gptrget1
01A0 6E00      06039         MOVWF   r0x12
01A2 C000 FFE5 06040         MOVFF   r0x12, POSTDEC1
01A6 C000 FFE9 06041         MOVFF   r0x0f, FSR0L
01AA C000 FFF3 06042         MOVFF   r0x10, PRODL
01AE 5000      06043         MOVF    r0x11, W
01B0 EC00 F000 06044         CALL    __gptrput1
               06045 ;       .line   389; MainDemo.c for (i=0; i<sizeof(IP_ADDR); i++) {
01B4 2A00      06046         INCF    r0x0d, F
01B6 B0D8      06047         BTFSC   STATUS, 0
01B8 2A00      06048         INCF    r0x0e, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01BA D000      06049         BRA     _00245_DS_
01BC 06050 _00248_DS_:
               06051 ;       .line   393; MainDemo.c buildBootpHeader(bootp_header, send_c_socket);
01BC 5000      06052         MOVF    r0x05, W
01BE 6EE5      06053         MOVWF   POSTDEC1
01C0 5000      06054         MOVF    r0x04, W
01C2 6EE5      06055         MOVWF   POSTDEC1
01C4 5000      06056         MOVF    r0x03, W
01C6 6EE5      06057         MOVWF   POSTDEC1
01C8 5000      06058         MOVF    r0x02, W
01CA 6EE5      06059         MOVWF   POSTDEC1
01CC 5000      06060         MOVF    r0x01, W
01CE 6EE5      06061         MOVWF   POSTDEC1
01D0 5000      06062         MOVF    r0x00, W
01D2 6EE5      06063         MOVWF   POSTDEC1
01D4 EC00 F000 06064         CALL    _buildBootpHeader
01D8 0E06      06065         MOVLW   0x06
01DA 26E1      06066         ADDWF   FSR1L, F
               06067 ;       .line   394; MainDemo.c UDPPut(packet_type);    
01DC 5000      06068         MOVF    r0x06, W
01DE 6EE5      06069         MOVWF   POSTDEC1
01E0 EC00 F000 06070         CALL    _UDPPut
01E4 2AE1      06071         INCF    FSR1L, F
               06072 ;       .line   397; MainDemo.c UDPPut(DHCP_SUBNET_MASK);
01E6 0E01      06073         MOVLW   0x01
01E8 6EE5      06074         MOVWF   POSTDEC1
01EA EC00 F000 06075         CALL    _UDPPut
01EE 2AE1      06076         INCF    FSR1L, F
               06077 ;       .line   398; MainDemo.c UDPPut(sizeof(IP_ADDR));
01F0 0E04      06078         MOVLW   0x04
01F2 6EE5      06079         MOVWF   POSTDEC1
01F4 EC00 F000 06080         CALL    _UDPPut
01F8 2AE1      06081         INCF    FSR1L, F
               06082 ;       .line   399; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyMask, sizeof(IP_ADDR));
01FA 0E00      06083         MOVLW   HIGH(_AppConfig + 4)
01FC 6E00      06084         MOVWF   r0x01
01FE 0E00      06085         MOVLW   LOW(_AppConfig + 4)
0200 6E00      06086         MOVWF   r0x00
0202 0E80      06087         MOVLW   0x80
0204 6E00      06088         MOVWF   r0x02
0206 0E00      06089         MOVLW   0x00
0208 6EE5      06090         MOVWF   POSTDEC1
020A 0E04      06091         MOVLW   0x04
020C 6EE5      06092         MOVWF   POSTDEC1
020E 5000      06093         MOVF    r0x02, W
0210 6EE5      06094         MOVWF   POSTDEC1
0212 5000      06095         MOVF    r0x01, W
0214 6EE5      06096         MOVWF   POSTDEC1
0216 5000      06097         MOVF    r0x00, W
0218 6EE5      06098         MOVWF   POSTDEC1
021A EC00 F000 06099         CALL    _UDPPutArray
021E 0E05      06100         MOVLW   0x05
0220 26E1      06101         ADDWF   FSR1L, F
               06102 ;       .line   402; MainDemo.c UDPPut(DHCP_BROADCAST);
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0222 0E1C      06103         MOVLW   0x1c
0224 6EE5      06104         MOVWF   POSTDEC1
0226 EC00 F000 06105         CALL    _UDPPut
022A 2AE1      06106         INCF    FSR1L, F
               06107 ;       .line   403; MainDemo.c UDPPut(sizeof(IP_ADDR));
022C 0E04      06108         MOVLW   0x04
022E 6EE5      06109         MOVWF   POSTDEC1
0230 EC00 F000 06110         CALL    _UDPPut
0234 2AE1      06111         INCF    FSR1L, F
               06112 ;       .line   404; MainDemo.c for(i=0; i<sizeof(IP_ADDR); i++){
0236 6A00      06113         CLRF    r0x00
0238 6A00      06114         CLRF    r0x01
023A 06115 _00249_DS_:
023A 5000      06116         MOVF    r0x01, W
023C 0F80      06117         ADDLW   0x80
023E 0F80      06118         ADDLW   0x80
0240 E100      06119         BNZ     _00270_DS_
0242 0E04      06120         MOVLW   0x04
0244 5C00      06121         SUBWF   r0x00, W
0246 06122 _00270_DS_:
0246 E200      06123         BC      _00252_DS_
               06124 ;       .line   405; MainDemo.c broadcast.v[i] = (AppConfig.MyIPAddr.v[i] & AppConfig.MyMask.v[i]) | ~AppConfig.MyMask.v[i];
0248 0E00      06125         MOVLW   LOW(_transmitToClient_broadcast_1_1)
024A 2400      06126         ADDWF   r0x00, W
024C 6E00      06127         MOVWF   r0x02
024E 0E00      06128         MOVLW   HIGH(_transmitToClient_broadcast_1_1)
0250 2000      06129         ADDWFC  r0x01, W
0252 6E00      06130         MOVWF   r0x03
0254 0E00      06131         MOVLW   LOW(_AppConfig)
0256 2400      06132         ADDWF   r0x00, W
0258 6E00      06133         MOVWF   r0x04
025A 0E00      06134         MOVLW   HIGH(_AppConfig)
025C 2000      06135         ADDWFC  r0x01, W
025E 6E00      06136         MOVWF   r0x05
0260 0E00      06137         MOVLW   LOW(_AppConfig + 4)
0262 2400      06138         ADDWF   r0x00, W
0264 6E00      06139         MOVWF   r0x06
0266 0E00      06140         MOVLW   HIGH(_AppConfig + 4)
0268 2000      06141         ADDWFC  r0x01, W
026A 6E00      06142         MOVWF   r0x07
026C C000 FFE9 06143         MOVFF   r0x04, FSR0L
0270 C000 FFEA 06144         MOVFF   r0x05, FSR0H
0274 CFEF F000 06145         MOVFF   INDF0, r0x04
0278 C000 FFE9 06146         MOVFF   r0x06, FSR0L
027C C000 FFEA 06147         MOVFF   r0x07, FSR0H
0280 CFEF F000 06148         MOVFF   INDF0, r0x06
0284 5000      06149         MOVF    r0x06, W
0286 1600      06150         ANDWF   r0x04, F
0288 1E00      06151         COMF    r0x06, F
028A 5000      06152         MOVF    r0x06, W
028C 1200      06153         IORWF   r0x04, F
028E C000 FFE9 06154         MOVFF   r0x02, FSR0L
0292 C000 FFEA 06155         MOVFF   r0x03, FSR0H
0296 C000 FFEF 06156         MOVFF   r0x04, INDF0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               06157 ;       .line   404; MainDemo.c for(i=0; i<sizeof(IP_ADDR); i++){
029A 2A00      06158         INCF    r0x00, F
029C B0D8      06159         BTFSC   STATUS, 0
029E 2A00      06160         INCF    r0x01, F
02A0 D000      06161         BRA     _00249_DS_
02A2 06162 _00252_DS_:
               06163 ;       .line   407; MainDemo.c UDPPutArray((BYTE*)&broadcast, sizeof(IP_ADDR));
02A2 0E00      06164         MOVLW   HIGH(_transmitToClient_broadcast_1_1)
02A4 6E00      06165         MOVWF   r0x01
02A6 0E00      06166         MOVLW   LOW(_transmitToClient_broadcast_1_1)
02A8 6E00      06167         MOVWF   r0x00
02AA 0E80      06168         MOVLW   0x80
02AC 6E00      06169         MOVWF   r0x02
02AE 0E00      06170         MOVLW   0x00
02B0 6EE5      06171         MOVWF   POSTDEC1
02B2 0E04      06172         MOVLW   0x04
02B4 6EE5      06173         MOVWF   POSTDEC1
02B6 5000      06174         MOVF    r0x02, W
02B8 6EE5      06175         MOVWF   POSTDEC1
02BA 5000      06176         MOVF    r0x01, W
02BC 6EE5      06177         MOVWF   POSTDEC1
02BE 5000      06178         MOVF    r0x00, W
02C0 6EE5      06179         MOVWF   POSTDEC1
02C2 EC00 F000 06180         CALL    _UDPPutArray
02C6 0E05      06181         MOVLW   0x05
02C8 26E1      06182         ADDWF   FSR1L, F
               06183 ;       .line   410; MainDemo.c UDPPut(DHCP_ROUTER);
02CA 0E03      06184         MOVLW   0x03
02CC 6EE5      06185         MOVWF   POSTDEC1
02CE EC00 F000 06186         CALL    _UDPPut
02D2 2AE1      06187         INCF    FSR1L, F
               06188 ;       .line   411; MainDemo.c UDPPut(sizeof(IP_ADDR));
02D4 0E04      06189         MOVLW   0x04
02D6 6EE5      06190         MOVWF   POSTDEC1
02D8 EC00 F000 06191         CALL    _UDPPut
02DC 2AE1      06192         INCF    FSR1L, F
               06193 ;       .line   412; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyGateway, sizeof(IP_ADDR));
02DE 0E00      06194         MOVLW   HIGH(_AppConfig + 8)
02E0 6E00      06195         MOVWF   r0x01
02E2 0E00      06196         MOVLW   LOW(_AppConfig + 8)
02E4 6E00      06197         MOVWF   r0x00
02E6 0E80      06198         MOVLW   0x80
02E8 6E00      06199         MOVWF   r0x02
02EA 0E00      06200         MOVLW   0x00
02EC 6EE5      06201         MOVWF   POSTDEC1
02EE 0E04      06202         MOVLW   0x04
02F0 6EE5      06203         MOVWF   POSTDEC1
02F2 5000      06204         MOVF    r0x02, W
02F4 6EE5      06205         MOVWF   POSTDEC1
02F6 5000      06206         MOVF    r0x01, W
02F8 6EE5      06207         MOVWF   POSTDEC1
02FA 5000      06208         MOVF    r0x00, W
02FC 6EE5      06209         MOVWF   POSTDEC1
02FE EC00 F000 06210         CALL    _UDPPutArray
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0302 0E05      06211         MOVLW   0x05
0304 26E1      06212         ADDWF   FSR1L, F
               06213 ;       .line   414; MainDemo.c lease_time = CLIENT_LEASE_TIME; // Corresponds to AdaptLeaseTime action in ASG
0306 0E2C      06214         MOVLW   0x2c
0308 0000      06215         BANKSEL _transmitToClient_lease_time_1_1
030A 6F00      06216         MOVWF   _transmitToClient_lease_time_1_1, B
030C 0E01      06217         MOVLW   0x01
030E 0000      06218         BANKSEL (_transmitToClient_lease_time_1_1 + 1)
0310 6F00      06219         MOVWF   (_transmitToClient_lease_time_1_1 + 1), B
               06220 ;       .line   415; MainDemo.c UDPPut(DHCP_IP_LEASE_TIME);
0312 0E33      06221         MOVLW   0x33
0314 6EE5      06222         MOVWF   POSTDEC1
0316 EC00 F000 06223         CALL    _UDPPut
031A 2AE1      06224         INCF    FSR1L, F
               06225 ;       .line   416; MainDemo.c UDPPut(4);
031C 0E04      06226         MOVLW   0x04
031E 6EE5      06227         MOVWF   POSTDEC1
0320 EC00 F000 06228         CALL    _UDPPut
0324 2AE1      06229         INCF    FSR1L, F
               06230 ;       .line   417; MainDemo.c UDPPut(0);
0326 0E00      06231         MOVLW   0x00
0328 6EE5      06232         MOVWF   POSTDEC1
032A EC00 F000 06233         CALL    _UDPPut
032E 2AE1      06234         INCF    FSR1L, F
               06235 ;       .line   418; MainDemo.c UDPPut(0);
0330 0E00      06236         MOVLW   0x00
0332 6EE5      06237         MOVWF   POSTDEC1
0334 EC00 F000 06238         CALL    _UDPPut
0338 2AE1      06239         INCF    FSR1L, F
               06240 ;       .line   419; MainDemo.c UDPPutArrayInvert((BYTE*)&lease_time, 2);
033A 0E00      06241         MOVLW   HIGH(_transmitToClient_lease_time_1_1)
033C 6E00      06242         MOVWF   r0x01
033E 0E00      06243         MOVLW   LOW(_transmitToClient_lease_time_1_1)
0340 6E00      06244         MOVWF   r0x00
0342 0E80      06245         MOVLW   0x80
0344 6E00      06246         MOVWF   r0x02
0346 0E00      06247         MOVLW   0x00
0348 6EE5      06248         MOVWF   POSTDEC1
034A 0E02      06249         MOVLW   0x02
034C 6EE5      06250         MOVWF   POSTDEC1
034E 5000      06251         MOVF    r0x02, W
0350 6EE5      06252         MOVWF   POSTDEC1
0352 5000      06253         MOVF    r0x01, W
0354 6EE5      06254         MOVWF   POSTDEC1
0356 5000      06255         MOVF    r0x00, W
0358 6EE5      06256         MOVWF   POSTDEC1
035A EC00 F000 06257         CALL    _UDPPutArrayInvert
035E 0E05      06258         MOVLW   0x05
0360 26E1      06259         ADDWF   FSR1L, F
               06260 ;       .line   422; MainDemo.c UDPPut(DHCP_SERVER_IDENTIFIER);
0362 0E36      06261         MOVLW   0x36
0364 6EE5      06262         MOVWF   POSTDEC1
0366 EC00 F000 06263         CALL    _UDPPut
036A 2AE1      06264         INCF    FSR1L, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               06265 ;       .line   423; MainDemo.c UDPPut(sizeof(IP_ADDR));
036C 0E04      06266         MOVLW   0x04
036E 6EE5      06267         MOVWF   POSTDEC1
0370 EC00 F000 06268         CALL    _UDPPut
0374 2AE1      06269         INCF    FSR1L, F
               06270 ;       .line   426; MainDemo.c UDPPutArray((BYTE*)&AppConfig.MyIPAddr, sizeof(IP_ADDR));
0376 0E00      06271         MOVLW   HIGH(_AppConfig)
0378 6E00      06272         MOVWF   r0x01
037A 0E00      06273         MOVLW   LOW(_AppConfig)
037C 6E00      06274         MOVWF   r0x00
037E 0E80      06275         MOVLW   0x80
0380 6E00      06276         MOVWF   r0x02
0382 0E00      06277         MOVLW   0x00
0384 6EE5      06278         MOVWF   POSTDEC1
0386 0E04      06279         MOVLW   0x04
0388 6EE5      06280         MOVWF   POSTDEC1
038A 5000      06281         MOVF    r0x02, W
038C 6EE5      06282         MOVWF   POSTDEC1
038E 5000      06283         MOVF    r0x01, W
0390 6EE5      06284         MOVWF   POSTDEC1
0392 5000      06285         MOVF    r0x00, W
0394 6EE5      06286         MOVWF   POSTDEC1
0396 EC00 F000 06287         CALL    _UDPPutArray
039A 0E05      06288         MOVLW   0x05
039C 26E1      06289         ADDWF   FSR1L, F
               06290 ;       .line   427; MainDemo.c UDPPut(DHCP_END_OPTION);
039E 0EFF      06291         MOVLW   0xff
03A0 6EE5      06292         MOVWF   POSTDEC1
03A2 EC00 F000 06293         CALL    _UDPPut
03A6 2AE1      06294         INCF    FSR1L, F
03A8 06295 _00238_DS_:
               06296 ;       .line   428; MainDemo.c while(UDPTxCount < 300){
03A8 0E01      06297         MOVLW   0x01
03AA 0000      06298         BANKSEL (_UDPTxCount + 1)
03AC 5D00      06299         SUBWF   (_UDPTxCount + 1), W, B
03AE E100      06300         BNZ     _00273_DS_
03B0 0E2C      06301         MOVLW   0x2c
03B2 0000      06302         BANKSEL _UDPTxCount
03B4 5D00      06303         SUBWF   _UDPTxCount, W, B
03B6 06304 _00273_DS_:
03B6 E200      06305         BC      _00240_DS_
               06306 ;       .line   429; MainDemo.c UDPPut(0);
03B8 0E00      06307         MOVLW   0x00
03BA 6EE5      06308         MOVWF   POSTDEC1
03BC EC00 F000 06309         CALL    _UDPPut
03C0 2AE1      06310         INCF    FSR1L, F
03C2 D000      06311         BRA     _00238_DS_
03C4 06312 _00240_DS_:
               06313 ;       .line   433; MainDemo.c UDPFlush();
03C4 EC00 F000 06314         CALL    _UDPFlush
03C8 CFE4 F000 06315         MOVFF   PREINC1, r0x14
03CC CFE4 F000 06316         MOVFF   PREINC1, r0x13
03D0 CFE4 F000 06317         MOVFF   PREINC1, r0x12
03D4 CFE4 F000 06318         MOVFF   PREINC1, r0x11
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03D8 CFE4 F000 06319         MOVFF   PREINC1, r0x10
03DC CFE4 F000 06320         MOVFF   PREINC1, r0x0f
03E0 CFE4 F000 06321         MOVFF   PREINC1, r0x0e
03E4 CFE4 F000 06322         MOVFF   PREINC1, r0x0d
03E8 CFE4 F000 06323         MOVFF   PREINC1, r0x0c
03EC CFE4 F000 06324         MOVFF   PREINC1, r0x0b
03F0 CFE4 F000 06325         MOVFF   PREINC1, r0x0a
03F4 CFE4 F000 06326         MOVFF   PREINC1, r0x09
03F8 CFE4 F000 06327         MOVFF   PREINC1, r0x08
03FC CFE4 F000 06328         MOVFF   PREINC1, r0x07
0400 CFE4 F000 06329         MOVFF   PREINC1, r0x06
0404 CFE4 F000 06330         MOVFF   PREINC1, r0x05
0408 CFE4 F000 06331         MOVFF   PREINC1, r0x04
040C CFE4 F000 06332         MOVFF   PREINC1, r0x03
0410 CFE4 F000 06333         MOVFF   PREINC1, r0x02
0414 CFE4 F000 06334         MOVFF   PREINC1, r0x01
0418 CFE4 F000 06335         MOVFF   PREINC1, r0x00
041C CFE4 FFD9 06336         MOVFF   PREINC1, FSR2L
0420 0012      06337         RETURN  
               06338 
               06339 ; ; Starting pCode block
               06340 S_MainDemo__rcvdFromServer      code
0000 06341 _rcvdFromServer:
               06342 ;       .line   338; MainDemo.c void rcvdFromServer(UDP_SOCKET *send_c_socket, UDP_SOCKET *receiver_socket){
0000 CFD9 FFE5 06343         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06344         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06345         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06346         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06347         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06348         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06349         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06350         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06351         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06352         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06353         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 06354         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 06355         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 06356         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 06357         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 06358         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 06359         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 06360         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 06361         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 06362         MOVFF   r0x11, POSTDEC1
0050 0E02      06363         MOVLW   0x02
0052 CFDB F000 06364         MOVFF   PLUSW2, r0x00
0056 0E03      06365         MOVLW   0x03
0058 CFDB F000 06366         MOVFF   PLUSW2, r0x01
005C 0E04      06367         MOVLW   0x04
005E CFDB F000 06368         MOVFF   PLUSW2, r0x02
0062 0E05      06369         MOVLW   0x05
0064 CFDB F000 06370         MOVFF   PLUSW2, r0x03
0068 0E06      06371         MOVLW   0x06
006A CFDB F000 06372         MOVFF   PLUSW2, r0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006E 0E07      06373         MOVLW   0x07
0070 CFDB F000 06374         MOVFF   PLUSW2, r0x05
               06375 ;       .line   346; MainDemo.c extractBootProtHeader(&dhcp_type, &bootp_header, dhcp_header, &dhcp_header_length, receiver_socket);
0074 0E00      06376         MOVLW   HIGH(_rcvdFromServer_dhcp_type_1_1)
0076 6E00      06377         MOVWF   r0x07
0078 0E00      06378         MOVLW   LOW(_rcvdFromServer_dhcp_type_1_1)
007A 6E00      06379         MOVWF   r0x06
007C 0E80      06380         MOVLW   0x80
007E 6E00      06381         MOVWF   r0x08
0080 0E00      06382         MOVLW   HIGH(_rcvdFromServer_bootp_header_1_1)
0082 6E00      06383         MOVWF   r0x0a
0084 0E00      06384         MOVLW   LOW(_rcvdFromServer_bootp_header_1_1)
0086 6E00      06385         MOVWF   r0x09
0088 0E80      06386         MOVLW   0x80
008A 6E00      06387         MOVWF   r0x0b
008C 0E00      06388         MOVLW   HIGH(_rcvdFromServer_dhcp_header_1_1)
008E 6E00      06389         MOVWF   r0x0d
0090 0E00      06390         MOVLW   LOW(_rcvdFromServer_dhcp_header_1_1)
0092 6E00      06391         MOVWF   r0x0c
0094 0E80      06392         MOVLW   0x80
0096 6E00      06393         MOVWF   r0x0e
0098 0E00      06394         MOVLW   HIGH(_rcvdFromServer_dhcp_header_length_1_1)
009A 6E00      06395         MOVWF   r0x10
009C 0E00      06396         MOVLW   LOW(_rcvdFromServer_dhcp_header_length_1_1)
009E 6E00      06397         MOVWF   r0x0f
00A0 0E80      06398         MOVLW   0x80
00A2 6E00      06399         MOVWF   r0x11
00A4 5000      06400         MOVF    r0x05, W
00A6 6EE5      06401         MOVWF   POSTDEC1
00A8 5000      06402         MOVF    r0x04, W
00AA 6EE5      06403         MOVWF   POSTDEC1
00AC 5000      06404         MOVF    r0x03, W
00AE 6EE5      06405         MOVWF   POSTDEC1
00B0 5000      06406         MOVF    r0x11, W
00B2 6EE5      06407         MOVWF   POSTDEC1
00B4 5000      06408         MOVF    r0x10, W
00B6 6EE5      06409         MOVWF   POSTDEC1
00B8 5000      06410         MOVF    r0x0f, W
00BA 6EE5      06411         MOVWF   POSTDEC1
00BC 5000      06412         MOVF    r0x0e, W
00BE 6EE5      06413         MOVWF   POSTDEC1
00C0 5000      06414         MOVF    r0x0d, W
00C2 6EE5      06415         MOVWF   POSTDEC1
00C4 5000      06416         MOVF    r0x0c, W
00C6 6EE5      06417         MOVWF   POSTDEC1
00C8 5000      06418         MOVF    r0x0b, W
00CA 6EE5      06419         MOVWF   POSTDEC1
00CC 5000      06420         MOVF    r0x0a, W
00CE 6EE5      06421         MOVWF   POSTDEC1
00D0 5000      06422         MOVF    r0x09, W
00D2 6EE5      06423         MOVWF   POSTDEC1
00D4 5000      06424         MOVF    r0x08, W
00D6 6EE5      06425         MOVWF   POSTDEC1
00D8 5000      06426         MOVF    r0x07, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DA 6EE5      06427         MOVWF   POSTDEC1
00DC 5000      06428         MOVF    r0x06, W
00DE 6EE5      06429         MOVWF   POSTDEC1
00E0 EC00 F000 06430         CALL    _extractBootProtHeader
00E4 0E0F      06431         MOVLW   0x0f
00E6 26E1      06432         ADDWF   FSR1L, F
               06433 ;       .line   347; MainDemo.c UDPDiscard();
00E8 EC00 F000 06434         CALL    _UDPDiscard
               06435 ;       .line   349; MainDemo.c switch(dhcp_type){
00EC C000 F000 06436         MOVFF   _rcvdFromServer_dhcp_type_1_1, r0x03
00F0 6A00      06437         CLRF    r0x04
00F2 5000      06438         MOVF    r0x03, W
00F4 0A02      06439         XORLW   0x02
00F6 E100      06440         BNZ     _00228_DS_
00F8 5000      06441         MOVF    r0x04, W
00FA E000      06442         BZ      _00215_DS_
00FC 06443 _00228_DS_:
00FC 5000      06444         MOVF    r0x03, W
00FE 0A05      06445         XORLW   0x05
0100 E100      06446         BNZ     _00230_DS_
0102 5000      06447         MOVF    r0x04, W
0104 E000      06448         BZ      _00216_DS_
0106 06449 _00230_DS_:
0106 D000      06450         BRA     _00220_DS_
0108 06451 _00215_DS_:
               06452 ;       .line   351; MainDemo.c DisplayString(0, "DHCP OFFER");
0108 0E00      06453         MOVLW   UPPER(__str_1)
010A 6EE5      06454         MOVWF   POSTDEC1
010C 0E00      06455         MOVLW   HIGH(__str_1)
010E 6EE5      06456         MOVWF   POSTDEC1
0110 0E00      06457         MOVLW   LOW(__str_1)
0112 6EE5      06458         MOVWF   POSTDEC1
0114 0E00      06459         MOVLW   0x00
0116 6EE5      06460         MOVWF   POSTDEC1
0118 EC00 F000 06461         CALL    _DisplayString
011C 0E04      06462         MOVLW   0x04
011E 26E1      06463         ADDWF   FSR1L, F
               06464 ;       .line   352; MainDemo.c transmitToClient(&bootp_header, send_c_socket, dhcp_type);
0120 0E00      06465         MOVLW   HIGH(_rcvdFromServer_bootp_header_1_1)
0122 6E00      06466         MOVWF   r0x04
0124 0E00      06467         MOVLW   LOW(_rcvdFromServer_bootp_header_1_1)
0126 6E00      06468         MOVWF   r0x03
0128 0E80      06469         MOVLW   0x80
012A 6E00      06470         MOVWF   r0x05
012C 0000      06471         BANKSEL _rcvdFromServer_dhcp_type_1_1
012E 5100      06472         MOVF    _rcvdFromServer_dhcp_type_1_1, W, B
0130 6EE5      06473         MOVWF   POSTDEC1
0132 5000      06474         MOVF    r0x02, W
0134 6EE5      06475         MOVWF   POSTDEC1
0136 5000      06476         MOVF    r0x01, W
0138 6EE5      06477         MOVWF   POSTDEC1
013A 5000      06478         MOVF    r0x00, W
013C 6EE5      06479         MOVWF   POSTDEC1
013E 5000      06480         MOVF    r0x05, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0140 6EE5      06481         MOVWF   POSTDEC1
0142 5000      06482         MOVF    r0x04, W
0144 6EE5      06483         MOVWF   POSTDEC1
0146 5000      06484         MOVF    r0x03, W
0148 6EE5      06485         MOVWF   POSTDEC1
014A EC00 F000 06486         CALL    _transmitToClient
014E 0E07      06487         MOVLW   0x07
0150 26E1      06488         ADDWF   FSR1L, F
               06489 ;       .line   353; MainDemo.c break;
0152 D000      06490         BRA     _00222_DS_
0154 06491 _00216_DS_:
               06492 ;       .line   356; MainDemo.c DisplayString(0, "DHCP ACK");
0154 0E00      06493         MOVLW   UPPER(__str_2)
0156 6EE5      06494         MOVWF   POSTDEC1
0158 0E00      06495         MOVLW   HIGH(__str_2)
015A 6EE5      06496         MOVWF   POSTDEC1
015C 0E00      06497         MOVLW   LOW(__str_2)
015E 6EE5      06498         MOVWF   POSTDEC1
0160 0E00      06499         MOVLW   0x00
0162 6EE5      06500         MOVWF   POSTDEC1
0164 EC00 F000 06501         CALL    _DisplayString
0168 0E04      06502         MOVLW   0x04
016A 26E1      06503         ADDWF   FSR1L, F
               06504 ;       .line   357; MainDemo.c getLeaseFromAck(&lease_time, dhcp_header, dhcp_header_length);        
016C 0E00      06505         MOVLW   HIGH(_rcvdFromServer_lease_time_1_1)
016E 6E00      06506         MOVWF   r0x04
0170 0E00      06507         MOVLW   LOW(_rcvdFromServer_lease_time_1_1)
0172 6E00      06508         MOVWF   r0x03
0174 0E80      06509         MOVLW   0x80
0176 6E00      06510         MOVWF   r0x05
0178 0E00      06511         MOVLW   HIGH(_rcvdFromServer_dhcp_header_1_1)
017A 6E00      06512         MOVWF   r0x07
017C 0E00      06513         MOVLW   LOW(_rcvdFromServer_dhcp_header_1_1)
017E 6E00      06514         MOVWF   r0x06
0180 0E80      06515         MOVLW   0x80
0182 6E00      06516         MOVWF   r0x08
0184 0000      06517         BANKSEL (_rcvdFromServer_dhcp_header_length_1_1 + 1)
0186 5100      06518         MOVF    (_rcvdFromServer_dhcp_header_length_1_1 + 1), W, B
0188 6EE5      06519         MOVWF   POSTDEC1
018A 0000      06520         BANKSEL _rcvdFromServer_dhcp_header_length_1_1
018C 5100      06521         MOVF    _rcvdFromServer_dhcp_header_length_1_1, W, B
018E 6EE5      06522         MOVWF   POSTDEC1
0190 5000      06523         MOVF    r0x08, W
0192 6EE5      06524         MOVWF   POSTDEC1
0194 5000      06525         MOVF    r0x07, W
0196 6EE5      06526         MOVWF   POSTDEC1
0198 5000      06527         MOVF    r0x06, W
019A 6EE5      06528         MOVWF   POSTDEC1
019C 5000      06529         MOVF    r0x05, W
019E 6EE5      06530         MOVWF   POSTDEC1
01A0 5000      06531         MOVF    r0x04, W
01A2 6EE5      06532         MOVWF   POSTDEC1
01A4 5000      06533         MOVF    r0x03, W
01A6 6EE5      06534         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01A8 EC00 F000 06535         CALL    _getLeaseFromAck
01AC 0E08      06536         MOVLW   0x08
01AE 26E1      06537         ADDWF   FSR1L, F
               06538 ;       .line   358; MainDemo.c if(findInPool(&pool_it, &bootp_header.ClientMAC)){
01B0 0E00      06539         MOVLW   HIGH(_rcvdFromServer_pool_it_1_1)
01B2 6E00      06540         MOVWF   r0x04
01B4 0E00      06541         MOVLW   LOW(_rcvdFromServer_pool_it_1_1)
01B6 6E00      06542         MOVWF   r0x03
01B8 0E80      06543         MOVLW   0x80
01BA 6E00      06544         MOVWF   r0x05
01BC 0E00      06545         MOVLW   HIGH(_rcvdFromServer_bootp_header_1_1 + 28)
01BE 6E00      06546         MOVWF   r0x07
01C0 0E00      06547         MOVLW   LOW(_rcvdFromServer_bootp_header_1_1 + 28)
01C2 6E00      06548         MOVWF   r0x06
01C4 0E80      06549         MOVLW   0x80
01C6 6E00      06550         MOVWF   r0x08
01C8 5000      06551         MOVF    r0x08, W
01CA 6EE5      06552         MOVWF   POSTDEC1
01CC 5000      06553         MOVF    r0x07, W
01CE 6EE5      06554         MOVWF   POSTDEC1
01D0 5000      06555         MOVF    r0x06, W
01D2 6EE5      06556         MOVWF   POSTDEC1
01D4 5000      06557         MOVF    r0x05, W
01D6 6EE5      06558         MOVWF   POSTDEC1
01D8 5000      06559         MOVF    r0x04, W
01DA 6EE5      06560         MOVWF   POSTDEC1
01DC 5000      06561         MOVF    r0x03, W
01DE 6EE5      06562         MOVWF   POSTDEC1
01E0 EC00 F000 06563         CALL    _findInPool
01E4 6E00      06564         MOVWF   r0x03
01E6 0E06      06565         MOVLW   0x06
01E8 26E1      06566         ADDWF   FSR1L, F
01EA 5000      06567         MOVF    r0x03, W
01EC B4D8      06568         BTFSC   STATUS, 2
01EE D000      06569         BRA     _00218_DS_
               06570 ;       .line   359; MainDemo.c memcpy(pool_it->ip.v, &bootp_header.YourIP, sizeof(IP_ADDR));
01F0 C000 F000 06571         MOVFF   _rcvdFromServer_pool_it_1_1, r0x03
01F4 C000 F000 06572         MOVFF   (_rcvdFromServer_pool_it_1_1 + 1), r0x04
01F8 C000 F000 06573         MOVFF   (_rcvdFromServer_pool_it_1_1 + 2), r0x05
01FC 0E00      06574         MOVLW   HIGH(_rcvdFromServer_bootp_header_1_1 + 16)
01FE 6E00      06575         MOVWF   r0x07
0200 0E00      06576         MOVLW   LOW(_rcvdFromServer_bootp_header_1_1 + 16)
0202 6E00      06577         MOVWF   r0x06
0204 0E80      06578         MOVLW   0x80
0206 6E00      06579         MOVWF   r0x08
0208 0E00      06580         MOVLW   0x00
020A 6EE5      06581         MOVWF   POSTDEC1
020C 0E04      06582         MOVLW   0x04
020E 6EE5      06583         MOVWF   POSTDEC1
0210 5000      06584         MOVF    r0x08, W
0212 6EE5      06585         MOVWF   POSTDEC1
0214 5000      06586         MOVF    r0x07, W
0216 6EE5      06587         MOVWF   POSTDEC1
0218 5000      06588         MOVF    r0x06, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
021A 6EE5      06589         MOVWF   POSTDEC1
021C 5000      06590         MOVF    r0x05, W
021E 6EE5      06591         MOVWF   POSTDEC1
0220 5000      06592         MOVF    r0x04, W
0222 6EE5      06593         MOVWF   POSTDEC1
0224 5000      06594         MOVF    r0x03, W
0226 6EE5      06595         MOVWF   POSTDEC1
0228 EC00 F000 06596         CALL    _memcpy
022C 0E08      06597         MOVLW   0x08
022E 26E1      06598         ADDWF   FSR1L, F
               06599 ;       .line   360; MainDemo.c pool_it->server_leasetime = lease_time;
0230 C000 F000 06600         MOVFF   _rcvdFromServer_pool_it_1_1, r0x03
0234 C000 F000 06601         MOVFF   (_rcvdFromServer_pool_it_1_1 + 1), r0x04
0238 C000 F000 06602         MOVFF   (_rcvdFromServer_pool_it_1_1 + 2), r0x05
023C 0E10      06603         MOVLW   0x10
023E 2600      06604         ADDWF   r0x03, F
0240 0E00      06605         MOVLW   0x00
0242 2200      06606         ADDWFC  r0x04, F
0244 0E00      06607         MOVLW   0x00
0246 2200      06608         ADDWFC  r0x05, F
0248 C000 FFE5 06609         MOVFF   _rcvdFromServer_lease_time_1_1, POSTDEC1
024C C000 FFF4 06610         MOVFF   (_rcvdFromServer_lease_time_1_1 + 1), PRODH
0250 C000 FFF6 06611         MOVFF   (_rcvdFromServer_lease_time_1_1 + 2), TBLPTRL
0254 C000 FFF7 06612         MOVFF   (_rcvdFromServer_lease_time_1_1 + 3), TBLPTRH
0258 C000 FFE9 06613         MOVFF   r0x03, FSR0L
025C C000 FFF3 06614         MOVFF   r0x04, PRODL
0260 5000      06615         MOVF    r0x05, W
0262 EC00 F000 06616         CALL    __gptrput4
0266 D000      06617         BRA     _00219_DS_
0268 06618 _00218_DS_:
               06619 ;       .line   362; MainDemo.c addItem((IP_ADDR*)&bootp_header.YourIP, &bootp_header.ClientMAC, lease_time, 0);    
0268 0E00      06620         MOVLW   HIGH(_rcvdFromServer_bootp_header_1_1 + 16)
026A 6E00      06621         MOVWF   r0x04
026C 0E00      06622         MOVLW   LOW(_rcvdFromServer_bootp_header_1_1 + 16)
026E 6E00      06623         MOVWF   r0x03
0270 0E80      06624         MOVLW   0x80
0272 6E00      06625         MOVWF   r0x05
0274 0E00      06626         MOVLW   HIGH(_rcvdFromServer_bootp_header_1_1 + 28)
0276 6E00      06627         MOVWF   r0x07
0278 0E00      06628         MOVLW   LOW(_rcvdFromServer_bootp_header_1_1 + 28)
027A 6E00      06629         MOVWF   r0x06
027C 0E80      06630         MOVLW   0x80
027E 6E00      06631         MOVWF   r0x08
0280 0E00      06632         MOVLW   0x00
0282 6EE5      06633         MOVWF   POSTDEC1
0284 0E00      06634         MOVLW   0x00
0286 6EE5      06635         MOVWF   POSTDEC1
0288 0000      06636         BANKSEL (_rcvdFromServer_lease_time_1_1 + 3)
028A 5100      06637         MOVF    (_rcvdFromServer_lease_time_1_1 + 3), W, B
028C 6EE5      06638         MOVWF   POSTDEC1
028E 0000      06639         BANKSEL (_rcvdFromServer_lease_time_1_1 + 2)
0290 5100      06640         MOVF    (_rcvdFromServer_lease_time_1_1 + 2), W, B
0292 6EE5      06641         MOVWF   POSTDEC1
0294 0000      06642         BANKSEL (_rcvdFromServer_lease_time_1_1 + 1)
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0296 5100      06643         MOVF    (_rcvdFromServer_lease_time_1_1 + 1), W, B
0298 6EE5      06644         MOVWF   POSTDEC1
029A 0000      06645         BANKSEL _rcvdFromServer_lease_time_1_1
029C 5100      06646         MOVF    _rcvdFromServer_lease_time_1_1, W, B
029E 6EE5      06647         MOVWF   POSTDEC1
02A0 5000      06648         MOVF    r0x08, W
02A2 6EE5      06649         MOVWF   POSTDEC1
02A4 5000      06650         MOVF    r0x07, W
02A6 6EE5      06651         MOVWF   POSTDEC1
02A8 5000      06652         MOVF    r0x06, W
02AA 6EE5      06653         MOVWF   POSTDEC1
02AC 5000      06654         MOVF    r0x05, W
02AE 6EE5      06655         MOVWF   POSTDEC1
02B0 5000      06656         MOVF    r0x04, W
02B2 6EE5      06657         MOVWF   POSTDEC1
02B4 5000      06658         MOVF    r0x03, W
02B6 6EE5      06659         MOVWF   POSTDEC1
02B8 EC00 F000 06660         CALL    _addItem
02BC 0E0C      06661         MOVLW   0x0c
02BE 26E1      06662         ADDWF   FSR1L, F
02C0 06663 _00219_DS_:
               06664 ;       .line   364; MainDemo.c transmitToClient(&bootp_header, send_c_socket, dhcp_type);
02C0 0E00      06665         MOVLW   HIGH(_rcvdFromServer_bootp_header_1_1)
02C2 6E00      06666         MOVWF   r0x04
02C4 0E00      06667         MOVLW   LOW(_rcvdFromServer_bootp_header_1_1)
02C6 6E00      06668         MOVWF   r0x03
02C8 0E80      06669         MOVLW   0x80
02CA 6E00      06670         MOVWF   r0x05
02CC 0000      06671         BANKSEL _rcvdFromServer_dhcp_type_1_1
02CE 5100      06672         MOVF    _rcvdFromServer_dhcp_type_1_1, W, B
02D0 6EE5      06673         MOVWF   POSTDEC1
02D2 5000      06674         MOVF    r0x02, W
02D4 6EE5      06675         MOVWF   POSTDEC1
02D6 5000      06676         MOVF    r0x01, W
02D8 6EE5      06677         MOVWF   POSTDEC1
02DA 5000      06678         MOVF    r0x00, W
02DC 6EE5      06679         MOVWF   POSTDEC1
02DE 5000      06680         MOVF    r0x05, W
02E0 6EE5      06681         MOVWF   POSTDEC1
02E2 5000      06682         MOVF    r0x04, W
02E4 6EE5      06683         MOVWF   POSTDEC1
02E6 5000      06684         MOVF    r0x03, W
02E8 6EE5      06685         MOVWF   POSTDEC1
02EA EC00 F000 06686         CALL    _transmitToClient
02EE 0E07      06687         MOVLW   0x07
02F0 26E1      06688         ADDWF   FSR1L, F
               06689 ;       .line   365; MainDemo.c break;
02F2 D000      06690         BRA     _00222_DS_
02F4 06691 _00220_DS_:
               06692 ;       .line   368; MainDemo.c DisplayString(0, "DISCARDED packet from server");
02F4 0E00      06693         MOVLW   UPPER(__str_3)
02F6 6EE5      06694         MOVWF   POSTDEC1
02F8 0E00      06695         MOVLW   HIGH(__str_3)
02FA 6EE5      06696         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02FC 0E00      06697         MOVLW   LOW(__str_3)
02FE 6EE5      06698         MOVWF   POSTDEC1
0300 0E00      06699         MOVLW   0x00
0302 6EE5      06700         MOVWF   POSTDEC1
0304 EC00 F000 06701         CALL    _DisplayString
0308 0E04      06702         MOVLW   0x04
030A 26E1      06703         ADDWF   FSR1L, F
030C 06704 _00222_DS_:
               06705 ;       .line   370; MainDemo.c }
030C CFE4 F000 06706         MOVFF   PREINC1, r0x11
0310 CFE4 F000 06707         MOVFF   PREINC1, r0x10
0314 CFE4 F000 06708         MOVFF   PREINC1, r0x0f
0318 CFE4 F000 06709         MOVFF   PREINC1, r0x0e
031C CFE4 F000 06710         MOVFF   PREINC1, r0x0d
0320 CFE4 F000 06711         MOVFF   PREINC1, r0x0c
0324 CFE4 F000 06712         MOVFF   PREINC1, r0x0b
0328 CFE4 F000 06713         MOVFF   PREINC1, r0x0a
032C CFE4 F000 06714         MOVFF   PREINC1, r0x09
0330 CFE4 F000 06715         MOVFF   PREINC1, r0x08
0334 CFE4 F000 06716         MOVFF   PREINC1, r0x07
0338 CFE4 F000 06717         MOVFF   PREINC1, r0x06
033C CFE4 F000 06718         MOVFF   PREINC1, r0x05
0340 CFE4 F000 06719         MOVFF   PREINC1, r0x04
0344 CFE4 F000 06720         MOVFF   PREINC1, r0x03
0348 CFE4 F000 06721         MOVFF   PREINC1, r0x02
034C CFE4 F000 06722         MOVFF   PREINC1, r0x01
0350 CFE4 F000 06723         MOVFF   PREINC1, r0x00
0354 CFE4 FFD9 06724         MOVFF   PREINC1, FSR2L
0358 0012      06725         RETURN  
               06726 
               06727 ; ; Starting pCode block
               06728 S_MainDemo__sendRequest code
0000 06729 _sendRequest:
               06730 ;       .line   325; MainDemo.c void sendRequest(UDP_SOCKET *send_s_socket, POOL_ITEM *it){
0000 CFD9 FFE5 06731         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06732         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06733         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06734         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06735         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06736         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06737         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06738         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 06739         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 06740         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 06741         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 06742         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 06743         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 06744         MOVFF   r0x0b, POSTDEC1
0038 0E02      06745         MOVLW   0x02
003A CFDB F000 06746         MOVFF   PLUSW2, r0x00
003E 0E03      06747         MOVLW   0x03
0040 CFDB F000 06748         MOVFF   PLUSW2, r0x01
0044 0E04      06749         MOVLW   0x04
0046 CFDB F000 06750         MOVFF   PLUSW2, r0x02
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A 0E05      06751         MOVLW   0x05
004C CFDB F000 06752         MOVFF   PLUSW2, r0x03
0050 0E06      06753         MOVLW   0x06
0052 CFDB F000 06754         MOVFF   PLUSW2, r0x04
0056 0E07      06755         MOVLW   0x07
0058 CFDB F000 06756         MOVFF   PLUSW2, r0x05
005C 06757 _00207_DS_:
               06758 ;       .line   330; MainDemo.c while(!UDPIsPutReady(*send_s_socket));
005C C000 FFE9 06759         MOVFF   r0x00, FSR0L
0060 C000 FFF3 06760         MOVFF   r0x01, PRODL
0064 5000      06761         MOVF    r0x02, W
0066 EC00 F000 06762         CALL    __gptrget1
006A 6E00      06763         MOVWF   r0x06
006C 5000      06764         MOVF    r0x06, W
006E 6EE5      06765         MOVWF   POSTDEC1
0070 EC00 F000 06766         CALL    _UDPIsPutReady
0074 6E00      06767         MOVWF   r0x06
0076 CFF3 F000 06768         MOVFF   PRODL, r0x07
007A 2AE1      06769         INCF    FSR1L, F
007C 5000      06770         MOVF    r0x06, W
007E 1000      06771         IORWF   r0x07, W
0080 E000      06772         BZ      _00207_DS_
               06773 ;       .line   331; MainDemo.c addMacFromServ();
0082 EC00 F000 06774         CALL    _addMacFromServ
               06775 ;       .line   332; MainDemo.c configureBootpHeader(&bootp_header, 0, &it->ip, &it->ip, &it->mac, DHCP_REQUEST_MESSAGE);
0086 0E00      06776         MOVLW   HIGH(_sendRequest_bootp_header_1_1)
0088 6E00      06777         MOVWF   r0x07
008A 0E00      06778         MOVLW   LOW(_sendRequest_bootp_header_1_1)
008C 6E00      06779         MOVWF   r0x06
008E 0E80      06780         MOVLW   0x80
0090 6E00      06781         MOVWF   r0x08
0092 5000      06782         MOVF    r0x03, W
0094 0F04      06783         ADDLW   0x04
0096 6E00      06784         MOVWF   r0x09
0098 0E00      06785         MOVLW   0x00
009A 2000      06786         ADDWFC  r0x04, W
009C 6E00      06787         MOVWF   r0x0a
009E 0E00      06788         MOVLW   0x00
00A0 2000      06789         ADDWFC  r0x05, W
00A2 6E00      06790         MOVWF   r0x0b
00A4 0E03      06791         MOVLW   0x03
00A6 6EE5      06792         MOVWF   POSTDEC1
00A8 5000      06793         MOVF    r0x0b, W
00AA 6EE5      06794         MOVWF   POSTDEC1
00AC 5000      06795         MOVF    r0x0a, W
00AE 6EE5      06796         MOVWF   POSTDEC1
00B0 5000      06797         MOVF    r0x09, W
00B2 6EE5      06798         MOVWF   POSTDEC1
00B4 5000      06799         MOVF    r0x05, W
00B6 6EE5      06800         MOVWF   POSTDEC1
00B8 5000      06801         MOVF    r0x04, W
00BA 6EE5      06802         MOVWF   POSTDEC1
00BC 5000      06803         MOVF    r0x03, W
00BE 6EE5      06804         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C0 5000      06805         MOVF    r0x05, W
00C2 6EE5      06806         MOVWF   POSTDEC1
00C4 5000      06807         MOVF    r0x04, W
00C6 6EE5      06808         MOVWF   POSTDEC1
00C8 5000      06809         MOVF    r0x03, W
00CA 6EE5      06810         MOVWF   POSTDEC1
00CC 0E00      06811         MOVLW   0x00
00CE 6EE5      06812         MOVWF   POSTDEC1
00D0 0E00      06813         MOVLW   0x00
00D2 6EE5      06814         MOVWF   POSTDEC1
00D4 0E00      06815         MOVLW   0x00
00D6 6EE5      06816         MOVWF   POSTDEC1
00D8 0E00      06817         MOVLW   0x00
00DA 6EE5      06818         MOVWF   POSTDEC1
00DC 5000      06819         MOVF    r0x08, W
00DE 6EE5      06820         MOVWF   POSTDEC1
00E0 5000      06821         MOVF    r0x07, W
00E2 6EE5      06822         MOVWF   POSTDEC1
00E4 5000      06823         MOVF    r0x06, W
00E6 6EE5      06824         MOVWF   POSTDEC1
00E8 EC00 F000 06825         CALL    _configureBootpHeader
00EC 0E11      06826         MOVLW   0x11
00EE 26E1      06827         ADDWF   FSR1L, F
               06828 ;       .line   333; MainDemo.c buildHeader(dhcp_header, &dhcp_header_length, it);
00F0 0E00      06829         MOVLW   HIGH(_sendRequest_dhcp_header_1_1)
00F2 6E00      06830         MOVWF   r0x07
00F4 0E00      06831         MOVLW   LOW(_sendRequest_dhcp_header_1_1)
00F6 6E00      06832         MOVWF   r0x06
00F8 0E80      06833         MOVLW   0x80
00FA 6E00      06834         MOVWF   r0x08
00FC 0E00      06835         MOVLW   HIGH(_sendRequest_dhcp_header_length_1_1)
00FE 6E00      06836         MOVWF   r0x0a
0100 0E00      06837         MOVLW   LOW(_sendRequest_dhcp_header_length_1_1)
0102 6E00      06838         MOVWF   r0x09
0104 0E80      06839         MOVLW   0x80
0106 6E00      06840         MOVWF   r0x0b
0108 5000      06841         MOVF    r0x05, W
010A 6EE5      06842         MOVWF   POSTDEC1
010C 5000      06843         MOVF    r0x04, W
010E 6EE5      06844         MOVWF   POSTDEC1
0110 5000      06845         MOVF    r0x03, W
0112 6EE5      06846         MOVWF   POSTDEC1
0114 5000      06847         MOVF    r0x0b, W
0116 6EE5      06848         MOVWF   POSTDEC1
0118 5000      06849         MOVF    r0x0a, W
011A 6EE5      06850         MOVWF   POSTDEC1
011C 5000      06851         MOVF    r0x09, W
011E 6EE5      06852         MOVWF   POSTDEC1
0120 5000      06853         MOVF    r0x08, W
0122 6EE5      06854         MOVWF   POSTDEC1
0124 5000      06855         MOVF    r0x07, W
0126 6EE5      06856         MOVWF   POSTDEC1
0128 5000      06857         MOVF    r0x06, W
012A 6EE5      06858         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012C EC00 F000 06859         CALL    _buildHeader
0130 0E09      06860         MOVLW   0x09
0132 26E1      06861         ADDWF   FSR1L, F
               06862 ;       .line   334; MainDemo.c buildBootpHeader(&bootp_header, send_s_socket);
0134 0E00      06863         MOVLW   HIGH(_sendRequest_bootp_header_1_1)
0136 6E00      06864         MOVWF   r0x04
0138 0E00      06865         MOVLW   LOW(_sendRequest_bootp_header_1_1)
013A 6E00      06866         MOVWF   r0x03
013C 0E80      06867         MOVLW   0x80
013E 6E00      06868         MOVWF   r0x05
0140 5000      06869         MOVF    r0x02, W
0142 6EE5      06870         MOVWF   POSTDEC1
0144 5000      06871         MOVF    r0x01, W
0146 6EE5      06872         MOVWF   POSTDEC1
0148 5000      06873         MOVF    r0x00, W
014A 6EE5      06874         MOVWF   POSTDEC1
014C 5000      06875         MOVF    r0x05, W
014E 6EE5      06876         MOVWF   POSTDEC1
0150 5000      06877         MOVF    r0x04, W
0152 6EE5      06878         MOVWF   POSTDEC1
0154 5000      06879         MOVF    r0x03, W
0156 6EE5      06880         MOVWF   POSTDEC1
0158 EC00 F000 06881         CALL    _buildBootpHeader
015C 0E06      06882         MOVLW   0x06
015E 26E1      06883         ADDWF   FSR1L, F
               06884 ;       .line   335; MainDemo.c sendRequestMsg(dhcp_header, dhcp_header_length);
0160 0E00      06885         MOVLW   HIGH(_sendRequest_dhcp_header_1_1)
0162 6E00      06886         MOVWF   r0x01
0164 0E00      06887         MOVLW   LOW(_sendRequest_dhcp_header_1_1)
0166 6E00      06888         MOVWF   r0x00
0168 0E80      06889         MOVLW   0x80
016A 6E00      06890         MOVWF   r0x02
016C C000 F000 06891         MOVFF   _sendRequest_dhcp_header_length_1_1, r0x03
0170 C000 F000 06892         MOVFF   (_sendRequest_dhcp_header_length_1_1 + 1), r0x04
0174 5000      06893         MOVF    r0x04, W
0176 6EE5      06894         MOVWF   POSTDEC1
0178 5000      06895         MOVF    r0x03, W
017A 6EE5      06896         MOVWF   POSTDEC1
017C 5000      06897         MOVF    r0x02, W
017E 6EE5      06898         MOVWF   POSTDEC1
0180 5000      06899         MOVF    r0x01, W
0182 6EE5      06900         MOVWF   POSTDEC1
0184 5000      06901         MOVF    r0x00, W
0186 6EE5      06902         MOVWF   POSTDEC1
0188 EC00 F000 06903         CALL    _sendRequestMsg
018C 0E05      06904         MOVLW   0x05
018E 26E1      06905         ADDWF   FSR1L, F
0190 CFE4 F000 06906         MOVFF   PREINC1, r0x0b
0194 CFE4 F000 06907         MOVFF   PREINC1, r0x0a
0198 CFE4 F000 06908         MOVFF   PREINC1, r0x09
019C CFE4 F000 06909         MOVFF   PREINC1, r0x08
01A0 CFE4 F000 06910         MOVFF   PREINC1, r0x07
01A4 CFE4 F000 06911         MOVFF   PREINC1, r0x06
01A8 CFE4 F000 06912         MOVFF   PREINC1, r0x05
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01AC CFE4 F000 06913         MOVFF   PREINC1, r0x04
01B0 CFE4 F000 06914         MOVFF   PREINC1, r0x03
01B4 CFE4 F000 06915         MOVFF   PREINC1, r0x02
01B8 CFE4 F000 06916         MOVFF   PREINC1, r0x01
01BC CFE4 F000 06917         MOVFF   PREINC1, r0x00
01C0 CFE4 FFD9 06918         MOVFF   PREINC1, FSR2L
01C4 0012      06919         RETURN  
               06920 
               06921 ; ; Starting pCode block
               06922 S_MainDemo__setDhcpIp   code
0000 06923 _setDhcpIp:
               06924 ;       .line   317; MainDemo.c void setDhcpIp(IP_ADDR *ip){
0000 CFD9 FFE5 06925         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 06926         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 06927         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 06928         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 06929         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 06930         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 06931         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 06932         MOVFF   r0x05, POSTDEC1
0020 0E02      06933         MOVLW   0x02
0022 CFDB F000 06934         MOVFF   PLUSW2, r0x00
0026 0E03      06935         MOVLW   0x03
0028 CFDB F000 06936         MOVFF   PLUSW2, r0x01
002C 0E04      06937         MOVLW   0x04
002E CFDB F000 06938         MOVFF   PLUSW2, r0x02
               06939 ;       .line   318; MainDemo.c ip->v[0] = DHCP_IP8;
0032 0EC0      06940         MOVLW   0xc0
0034 6EE5      06941         MOVWF   POSTDEC1
0036 C000 FFE9 06942         MOVFF   r0x00, FSR0L
003A C000 FFF3 06943         MOVFF   r0x01, PRODL
003E 5000      06944         MOVF    r0x02, W
0040 EC00 F000 06945         CALL    __gptrput1
               06946 ;       .line   319; MainDemo.c ip->v[1] = DHCP_IP16;
0044 5000      06947         MOVF    r0x00, W
0046 0F01      06948         ADDLW   0x01
0048 6E00      06949         MOVWF   r0x03
004A 0E00      06950         MOVLW   0x00
004C 2000      06951         ADDWFC  r0x01, W
004E 6E00      06952         MOVWF   r0x04
0050 0E00      06953         MOVLW   0x00
0052 2000      06954         ADDWFC  r0x02, W
0054 6E00      06955         MOVWF   r0x05
0056 0EA8      06956         MOVLW   0xa8
0058 6EE5      06957         MOVWF   POSTDEC1
005A C000 FFE9 06958         MOVFF   r0x03, FSR0L
005E C000 FFF3 06959         MOVFF   r0x04, PRODL
0062 5000      06960         MOVF    r0x05, W
0064 EC00 F000 06961         CALL    __gptrput1
               06962 ;       .line   320; MainDemo.c ip->v[2] = DHCP_IP24;
0068 5000      06963         MOVF    r0x00, W
006A 0F02      06964         ADDLW   0x02
006C 6E00      06965         MOVWF   r0x03
006E 0E00      06966         MOVLW   0x00
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0070 2000      06967         ADDWFC  r0x01, W
0072 6E00      06968         MOVWF   r0x04
0074 0E00      06969         MOVLW   0x00
0076 2000      06970         ADDWFC  r0x02, W
0078 6E00      06971         MOVWF   r0x05
007A 0E58      06972         MOVLW   0x58
007C 6EE5      06973         MOVWF   POSTDEC1
007E C000 FFE9 06974         MOVFF   r0x03, FSR0L
0082 C000 FFF3 06975         MOVFF   r0x04, PRODL
0086 5000      06976         MOVF    r0x05, W
0088 EC00 F000 06977         CALL    __gptrput1
               06978 ;       .line   321; MainDemo.c ip->v[3] = DHCP_IP32;
008C 0E03      06979         MOVLW   0x03
008E 2600      06980         ADDWF   r0x00, F
0090 0E00      06981         MOVLW   0x00
0092 2200      06982         ADDWFC  r0x01, F
0094 0E00      06983         MOVLW   0x00
0096 2200      06984         ADDWFC  r0x02, F
0098 0E02      06985         MOVLW   0x02
009A 6EE5      06986         MOVWF   POSTDEC1
009C C000 FFE9 06987         MOVFF   r0x00, FSR0L
00A0 C000 FFF3 06988         MOVFF   r0x01, PRODL
00A4 5000      06989         MOVF    r0x02, W
00A6 EC00 F000 06990         CALL    __gptrput1
00AA CFE4 F000 06991         MOVFF   PREINC1, r0x05
00AE CFE4 F000 06992         MOVFF   PREINC1, r0x04
00B2 CFE4 F000 06993         MOVFF   PREINC1, r0x03
00B6 CFE4 F000 06994         MOVFF   PREINC1, r0x02
00BA CFE4 F000 06995         MOVFF   PREINC1, r0x01
00BE CFE4 F000 06996         MOVFF   PREINC1, r0x00
00C2 CFE4 FFD9 06997         MOVFF   PREINC1, FSR2L
00C6 0012      06998         RETURN  
               06999 
               07000 ; ; Starting pCode block
               07001 S_MainDemo__getMacFromServ      code
0000 07002 _getMacFromServ:
               07003 ;       .line   299; MainDemo.c void getMacFromServ(){
0000 CFD9 FFE5 07004         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07005         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07006         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07007         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07008         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07009         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07010         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07011         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07012         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07013         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07014         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07015         MOVFF   r0x09, POSTDEC1
               07016 ;       .line   303; MainDemo.c for (i=0; i<100; i++) {
0030 6A00      07017         CLRF    r0x00
0032 6A00      07018         CLRF    r0x01
0034 07019 _00185_DS_:
0034 5000      07020         MOVF    r0x01, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0036 0F80      07021         ADDLW   0x80
0038 0F80      07022         ADDLW   0x80
003A E100      07023         BNZ     _00196_DS_
003C 0E64      07024         MOVLW   0x64
003E 5C00      07025         SUBWF   r0x00, W
0040 07026 _00196_DS_:
0040 B0D8      07027         BTFSC   STATUS, 0
0042 D000      07028         BRA     _00188_DS_
               07029 ;       .line   304; MainDemo.c StackTask();
0044 EC00 F000 07030         CALL    _StackTask
               07031 ;       .line   305; MainDemo.c ARPResolve(&AppConfig.MyGateway);
0048 0E00      07032         MOVLW   HIGH(_AppConfig + 8)
004A 6E00      07033         MOVWF   r0x03
004C 0E00      07034         MOVLW   LOW(_AppConfig + 8)
004E 6E00      07035         MOVWF   r0x02
0050 0E80      07036         MOVLW   0x80
0052 6E00      07037         MOVWF   r0x04
0054 5000      07038         MOVF    r0x04, W
0056 6EE5      07039         MOVWF   POSTDEC1
0058 5000      07040         MOVF    r0x03, W
005A 6EE5      07041         MOVWF   POSTDEC1
005C 5000      07042         MOVF    r0x02, W
005E 6EE5      07043         MOVWF   POSTDEC1
0060 EC00 F000 07044         CALL    _ARPResolve
0064 0E03      07045         MOVLW   0x03
0066 26E1      07046         ADDWF   FSR1L, F
               07047 ;       .line   306; MainDemo.c for(j=0;j<5000; j++) {
0068 6A00      07048         CLRF    r0x02
006A 6A00      07049         CLRF    r0x03
006C 07050 _00181_DS_:
006C 5000      07051         MOVF    r0x03, W
006E 0F80      07052         ADDLW   0x80
0070 0F6D      07053         ADDLW   0x6d
0072 E100      07054         BNZ     _00197_DS_
0074 0E88      07055         MOVLW   0x88
0076 5C00      07056         SUBWF   r0x02, W
0078 07057 _00197_DS_:
0078 B0D8      07058         BTFSC   STATUS, 0
007A D000      07059         BRA     _00187_DS_
               07060 ;       .line   307; MainDemo.c if(ARPIsResolved(&AppConfig.MyGateway, &gw_mac)) {
007C 0E00      07061         MOVLW   HIGH(_AppConfig + 8)
007E 6E00      07062         MOVWF   r0x05
0080 0E00      07063         MOVLW   LOW(_AppConfig + 8)
0082 6E00      07064         MOVWF   r0x04
0084 0E80      07065         MOVLW   0x80
0086 6E00      07066         MOVWF   r0x06
0088 0E00      07067         MOVLW   HIGH(_getMacFromServ_gw_mac_1_1)
008A 6E00      07068         MOVWF   r0x08
008C 0E00      07069         MOVLW   LOW(_getMacFromServ_gw_mac_1_1)
008E 6E00      07070         MOVWF   r0x07
0090 0E80      07071         MOVLW   0x80
0092 6E00      07072         MOVWF   r0x09
0094 5000      07073         MOVF    r0x09, W
0096 6EE5      07074         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0098 5000      07075         MOVF    r0x08, W
009A 6EE5      07076         MOVWF   POSTDEC1
009C 5000      07077         MOVF    r0x07, W
009E 6EE5      07078         MOVWF   POSTDEC1
00A0 5000      07079         MOVF    r0x06, W
00A2 6EE5      07080         MOVWF   POSTDEC1
00A4 5000      07081         MOVF    r0x05, W
00A6 6EE5      07082         MOVWF   POSTDEC1
00A8 5000      07083         MOVF    r0x04, W
00AA 6EE5      07084         MOVWF   POSTDEC1
00AC EC00 F000 07085         CALL    _ARPIsResolved
00B0 6E00      07086         MOVWF   r0x04
00B2 0E06      07087         MOVLW   0x06
00B4 26E1      07088         ADDWF   FSR1L, F
00B6 5000      07089         MOVF    r0x04, W
00B8 E000      07090         BZ      _00183_DS_
               07091 ;       .line   308; MainDemo.c memcpy(MAC_ADDR_GATEWAY, &gw_mac, 6);
00BA 0E00      07092         MOVLW   HIGH(_MAC_ADDR_GATEWAY)
00BC 6E00      07093         MOVWF   r0x05
00BE 0E00      07094         MOVLW   LOW(_MAC_ADDR_GATEWAY)
00C0 6E00      07095         MOVWF   r0x04
00C2 0E80      07096         MOVLW   0x80
00C4 6E00      07097         MOVWF   r0x06
00C6 0E00      07098         MOVLW   HIGH(_getMacFromServ_gw_mac_1_1)
00C8 6E00      07099         MOVWF   r0x08
00CA 0E00      07100         MOVLW   LOW(_getMacFromServ_gw_mac_1_1)
00CC 6E00      07101         MOVWF   r0x07
00CE 0E80      07102         MOVLW   0x80
00D0 6E00      07103         MOVWF   r0x09
00D2 0E00      07104         MOVLW   0x00
00D4 6EE5      07105         MOVWF   POSTDEC1
00D6 0E06      07106         MOVLW   0x06
00D8 6EE5      07107         MOVWF   POSTDEC1
00DA 5000      07108         MOVF    r0x09, W
00DC 6EE5      07109         MOVWF   POSTDEC1
00DE 5000      07110         MOVF    r0x08, W
00E0 6EE5      07111         MOVWF   POSTDEC1
00E2 5000      07112         MOVF    r0x07, W
00E4 6EE5      07113         MOVWF   POSTDEC1
00E6 5000      07114         MOVF    r0x06, W
00E8 6EE5      07115         MOVWF   POSTDEC1
00EA 5000      07116         MOVF    r0x05, W
00EC 6EE5      07117         MOVWF   POSTDEC1
00EE 5000      07118         MOVF    r0x04, W
00F0 6EE5      07119         MOVWF   POSTDEC1
00F2 EC00 F000 07120         CALL    _memcpy
00F6 0E08      07121         MOVLW   0x08
00F8 26E1      07122         ADDWF   FSR1L, F
               07123 ;       .line   309; MainDemo.c return;     
00FA D000      07124         BRA     _00189_DS_
00FC 07125 _00183_DS_:
               07126 ;       .line   306; MainDemo.c for(j=0;j<5000; j++) {
00FC 2A00      07127         INCF    r0x02, F
00FE B0D8      07128         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0100 2A00      07129         INCF    r0x03, F
0102 D000      07130         BRA     _00181_DS_
0104 07131 _00187_DS_:
               07132 ;       .line   303; MainDemo.c for (i=0; i<100; i++) {
0104 2A00      07133         INCF    r0x00, F
0106 B0D8      07134         BTFSC   STATUS, 0
0108 2A00      07135         INCF    r0x01, F
010A D000      07136         BRA     _00185_DS_
010C 07137 _00188_DS_:
               07138 ;       .line   313; MainDemo.c DisplayString(0, "No MAC : ARP    Request Failed");
010C 0E00      07139         MOVLW   UPPER(__str_0)
010E 6EE5      07140         MOVWF   POSTDEC1
0110 0E00      07141         MOVLW   HIGH(__str_0)
0112 6EE5      07142         MOVWF   POSTDEC1
0114 0E00      07143         MOVLW   LOW(__str_0)
0116 6EE5      07144         MOVWF   POSTDEC1
0118 0E00      07145         MOVLW   0x00
011A 6EE5      07146         MOVWF   POSTDEC1
011C EC00 F000 07147         CALL    _DisplayString
0120 0E04      07148         MOVLW   0x04
0122 26E1      07149         ADDWF   FSR1L, F
0124 07150 _00189_DS_:
0124 CFE4 F000 07151         MOVFF   PREINC1, r0x09
0128 CFE4 F000 07152         MOVFF   PREINC1, r0x08
012C CFE4 F000 07153         MOVFF   PREINC1, r0x07
0130 CFE4 F000 07154         MOVFF   PREINC1, r0x06
0134 CFE4 F000 07155         MOVFF   PREINC1, r0x05
0138 CFE4 F000 07156         MOVFF   PREINC1, r0x04
013C CFE4 F000 07157         MOVFF   PREINC1, r0x03
0140 CFE4 F000 07158         MOVFF   PREINC1, r0x02
0144 CFE4 F000 07159         MOVFF   PREINC1, r0x01
0148 CFE4 F000 07160         MOVFF   PREINC1, r0x00
014C CFE4 FFD9 07161         MOVFF   PREINC1, FSR2L
0150 0012      07162         RETURN  
               07163 
               07164 ; ; Starting pCode block
               07165 S_MainDemo__UDPPutArrayInvert   code
0000 07166 _UDPPutArrayInvert:
               07167 ;       .line   288; MainDemo.c void UDPPutArrayInvert(BYTE *val, int len)
0000 CFD9 FFE5 07168         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07169         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07170         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07171         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07172         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07173         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07174         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07175         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07176         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07177         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07178         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07179         MOVFF   r0x09, POSTDEC1
0030 0E02      07180         MOVLW   0x02
0032 CFDB F000 07181         MOVFF   PLUSW2, r0x00
0036 0E03      07182         MOVLW   0x03
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 CFDB F000 07183         MOVFF   PLUSW2, r0x01
003C 0E04      07184         MOVLW   0x04
003E CFDB F000 07185         MOVFF   PLUSW2, r0x02
0042 0E05      07186         MOVLW   0x05
0044 CFDB F000 07187         MOVFF   PLUSW2, r0x03
0048 0E06      07188         MOVLW   0x06
004A CFDB F000 07189         MOVFF   PLUSW2, r0x04
               07190 ;       .line   291; MainDemo.c for(i = 0; i < len; i++)
004E 6A00      07191         CLRF    r0x05
0050 6A00      07192         CLRF    r0x06
0052 07193 _00165_DS_:
0052 5000      07194         MOVF    r0x06, W
0054 0F80      07195         ADDLW   0x80
0056 6EF3      07196         MOVWF   PRODL
0058 5000      07197         MOVF    r0x04, W
005A 0F80      07198         ADDLW   0x80
005C 5CF3      07199         SUBWF   PRODL, W
005E E100      07200         BNZ     _00174_DS_
0060 5000      07201         MOVF    r0x03, W
0062 5C00      07202         SUBWF   r0x05, W
0064 07203 _00174_DS_:
0064 E200      07204         BC      _00169_DS_
               07205 ;       .line   292; MainDemo.c UDPPut(val[len-i-1]);
0066 5000      07206         MOVF    r0x05, W
0068 5C00      07207         SUBWF   r0x03, W
006A 6E00      07208         MOVWF   r0x07
006C 5000      07209         MOVF    r0x06, W
006E 5800      07210         SUBWFB  r0x04, W
0070 6E00      07211         MOVWF   r0x08
0072 0EFF      07212         MOVLW   0xff
0074 2600      07213         ADDWF   r0x07, F
0076 A0D8      07214         BTFSS   STATUS, 0
0078 0600      07215         DECF    r0x08, F
007A 6A00      07216         CLRF    r0x09
007C BE00      07217         BTFSC   r0x08, 7
007E 6800      07218         SETF    r0x09
0080 5000      07219         MOVF    r0x00, W
0082 2600      07220         ADDWF   r0x07, F
0084 5000      07221         MOVF    r0x01, W
0086 2200      07222         ADDWFC  r0x08, F
0088 5000      07223         MOVF    r0x02, W
008A 2200      07224         ADDWFC  r0x09, F
008C C000 FFE9 07225         MOVFF   r0x07, FSR0L
0090 C000 FFF3 07226         MOVFF   r0x08, PRODL
0094 5000      07227         MOVF    r0x09, W
0096 EC00 F000 07228         CALL    __gptrget1
009A 6E00      07229         MOVWF   r0x07
009C 5000      07230         MOVF    r0x07, W
009E 6EE5      07231         MOVWF   POSTDEC1
00A0 EC00 F000 07232         CALL    _UDPPut
00A4 2AE1      07233         INCF    FSR1L, F
               07234 ;       .line   291; MainDemo.c for(i = 0; i < len; i++)
00A6 2A00      07235         INCF    r0x05, F
00A8 B0D8      07236         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AA 2A00      07237         INCF    r0x06, F
00AC D000      07238         BRA     _00165_DS_
00AE 07239 _00169_DS_:
00AE CFE4 F000 07240         MOVFF   PREINC1, r0x09
00B2 CFE4 F000 07241         MOVFF   PREINC1, r0x08
00B6 CFE4 F000 07242         MOVFF   PREINC1, r0x07
00BA CFE4 F000 07243         MOVFF   PREINC1, r0x06
00BE CFE4 F000 07244         MOVFF   PREINC1, r0x05
00C2 CFE4 F000 07245         MOVFF   PREINC1, r0x04
00C6 CFE4 F000 07246         MOVFF   PREINC1, r0x03
00CA CFE4 F000 07247         MOVFF   PREINC1, r0x02
00CE CFE4 F000 07248         MOVFF   PREINC1, r0x01
00D2 CFE4 F000 07249         MOVFF   PREINC1, r0x00
00D6 CFE4 FFD9 07250         MOVFF   PREINC1, FSR2L
00DA 0012      07251         RETURN  
               07252 
               07253 ; ; Starting pCode block
               07254 S_MainDemo__addMacFromServ      code
0000 07255 _addMacFromServ:
               07256 ;       .line   275; MainDemo.c void addMacFromServ(){
0000 CFD9 FFE5 07257         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07258         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07259         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07260         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07261         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07262         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07263         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07264         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07265         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07266         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07267         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07268         MOVFF   r0x09, POSTDEC1
               07269 ; ;multiply lit val:0x0e by variable _activeUDPSocket and store in r0x00
               07270 ; ;Unrolled 8 X 8 multiplication
               07271 ; ;FIXME: the function does not support result==WREG
0030 0000      07272         BANKSEL _activeUDPSocket
               07273 ;       .line   280; MainDemo.c info = &UDPSocketInfo[activeUDPSocket];
0032 5100      07274         MOVF    _activeUDPSocket, W, B
0034 0D0E      07275         MULLW   0x0e
0036 CFF3 F000 07276         MOVFF   PRODL, r0x00
003A 6A00      07277         CLRF    r0x01
003C 0E00      07278         MOVLW   LOW(_UDPSocketInfo)
003E 2600      07279         ADDWF   r0x00, F
0040 0E00      07280         MOVLW   HIGH(_UDPSocketInfo)
0042 2200      07281         ADDWFC  r0x01, F
0044 5000      07282         MOVF    r0x01, W
0046 6E00      07283         MOVWF   r0x01
0048 5000      07284         MOVF    r0x00, W
004A 6E00      07285         MOVWF   r0x00
004C 0E80      07286         MOVLW   0x80
004E 6E00      07287         MOVWF   r0x02
               07288 ;       .line   281; MainDemo.c remote_node_MAC = &info->remoteNode.MACAddr;
0050 0E04      07289         MOVLW   0x04
0052 2600      07290         ADDWF   r0x00, F
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0054 0E00      07291         MOVLW   0x00
0056 2200      07292         ADDWFC  r0x01, F
0058 0E00      07293         MOVLW   0x00
005A 2200      07294         ADDWFC  r0x02, F
               07295 ;       .line   283; MainDemo.c for (i=0; i<sizeof(MAC_ADDR); i++)
005C 6A00      07296         CLRF    r0x03
005E 6A00      07297         CLRF    r0x04
0060 07298 _00151_DS_:
0060 5000      07299         MOVF    r0x04, W
0062 0F80      07300         ADDLW   0x80
0064 0F80      07301         ADDLW   0x80
0066 E100      07302         BNZ     _00160_DS_
0068 0E06      07303         MOVLW   0x06
006A 5C00      07304         SUBWF   r0x03, W
006C 07305 _00160_DS_:
006C E200      07306         BC      _00155_DS_
               07307 ;       .line   284; MainDemo.c remote_node_MAC->v[i] = MAC_ADDR_GATEWAY[i];
006E 5000      07308         MOVF    r0x03, W
0070 2400      07309         ADDWF   r0x00, W
0072 6E00      07310         MOVWF   r0x05
0074 5000      07311         MOVF    r0x04, W
0076 2000      07312         ADDWFC  r0x01, W
0078 6E00      07313         MOVWF   r0x06
007A 6AE8      07314         CLRF    WREG
007C BE00      07315         BTFSC   r0x04, 7
007E 68E8      07316         SETF    WREG
0080 2000      07317         ADDWFC  r0x02, W
0082 6E00      07318         MOVWF   r0x07
0084 0E00      07319         MOVLW   LOW(_MAC_ADDR_GATEWAY)
0086 2400      07320         ADDWF   r0x03, W
0088 6E00      07321         MOVWF   r0x08
008A 0E00      07322         MOVLW   HIGH(_MAC_ADDR_GATEWAY)
008C 2000      07323         ADDWFC  r0x04, W
008E 6E00      07324         MOVWF   r0x09
0090 C000 FFE9 07325         MOVFF   r0x08, FSR0L
0094 C000 FFEA 07326         MOVFF   r0x09, FSR0H
0098 CFEF F000 07327         MOVFF   INDF0, r0x08
009C C000 FFE5 07328         MOVFF   r0x08, POSTDEC1
00A0 C000 FFE9 07329         MOVFF   r0x05, FSR0L
00A4 C000 FFF3 07330         MOVFF   r0x06, PRODL
00A8 5000      07331         MOVF    r0x07, W
00AA EC00 F000 07332         CALL    __gptrput1
               07333 ;       .line   283; MainDemo.c for (i=0; i<sizeof(MAC_ADDR); i++)
00AE 2A00      07334         INCF    r0x03, F
00B0 B0D8      07335         BTFSC   STATUS, 0
00B2 2A00      07336         INCF    r0x04, F
00B4 D000      07337         BRA     _00151_DS_
00B6 07338 _00155_DS_:
00B6 CFE4 F000 07339         MOVFF   PREINC1, r0x09
00BA CFE4 F000 07340         MOVFF   PREINC1, r0x08
00BE CFE4 F000 07341         MOVFF   PREINC1, r0x07
00C2 CFE4 F000 07342         MOVFF   PREINC1, r0x06
00C6 CFE4 F000 07343         MOVFF   PREINC1, r0x05
00CA CFE4 F000 07344         MOVFF   PREINC1, r0x04
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CE CFE4 F000 07345         MOVFF   PREINC1, r0x03
00D2 CFE4 F000 07346         MOVFF   PREINC1, r0x02
00D6 CFE4 F000 07347         MOVFF   PREINC1, r0x01
00DA CFE4 F000 07348         MOVFF   PREINC1, r0x00
00DE CFE4 FFD9 07349         MOVFF   PREINC1, FSR2L
00E2 0012      07350         RETURN  
               07351 
               07352 ; ; Starting pCode block
               07353 S_MainDemo__ip_cmp      code
0000 07354 _ip_cmp:
               07355 ;       .line   265; MainDemo.c BOOL ip_cmp(IP_ADDR *ip1, IP_ADDR *ip2){
0000 CFD9 FFE5 07356         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07357         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07358         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07359         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07360         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07361         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07362         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07363         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07364         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07365         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07366         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07367         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 07368         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 07369         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 07370         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 07371         MOVFF   r0x0d, POSTDEC1
0040 0E02      07372         MOVLW   0x02
0042 CFDB F000 07373         MOVFF   PLUSW2, r0x00
0046 0E03      07374         MOVLW   0x03
0048 CFDB F000 07375         MOVFF   PLUSW2, r0x01
004C 0E04      07376         MOVLW   0x04
004E CFDB F000 07377         MOVFF   PLUSW2, r0x02
0052 0E05      07378         MOVLW   0x05
0054 CFDB F000 07379         MOVFF   PLUSW2, r0x03
0058 0E06      07380         MOVLW   0x06
005A CFDB F000 07381         MOVFF   PLUSW2, r0x04
005E 0E07      07382         MOVLW   0x07
0060 CFDB F000 07383         MOVFF   PLUSW2, r0x05
               07384 ;       .line   267; MainDemo.c for(i=0; i<4; i++){
0064 6A00      07385         CLRF    r0x06
0066 6A00      07386         CLRF    r0x07
0068 07387 _00135_DS_:
0068 5000      07388         MOVF    r0x07, W
006A 0F80      07389         ADDLW   0x80
006C 0F80      07390         ADDLW   0x80
006E E100      07391         BNZ     _00144_DS_
0070 0E04      07392         MOVLW   0x04
0072 5C00      07393         SUBWF   r0x06, W
0074 07394 _00144_DS_:
0074 E200      07395         BC      _00138_DS_
               07396 ;       .line   268; MainDemo.c if(ip1->v[i] != ip2->v[i]){
0076 5000      07397         MOVF    r0x06, W
0078 2400      07398         ADDWF   r0x00, W
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007A 6E00      07399         MOVWF   r0x08
007C 5000      07400         MOVF    r0x07, W
007E 2000      07401         ADDWFC  r0x01, W
0080 6E00      07402         MOVWF   r0x09
0082 6AE8      07403         CLRF    WREG
0084 BE00      07404         BTFSC   r0x07, 7
0086 68E8      07405         SETF    WREG
0088 2000      07406         ADDWFC  r0x02, W
008A 6E00      07407         MOVWF   r0x0a
008C 5000      07408         MOVF    r0x06, W
008E 2400      07409         ADDWF   r0x03, W
0090 6E00      07410         MOVWF   r0x0b
0092 5000      07411         MOVF    r0x07, W
0094 2000      07412         ADDWFC  r0x04, W
0096 6E00      07413         MOVWF   r0x0c
0098 6AE8      07414         CLRF    WREG
009A BE00      07415         BTFSC   r0x07, 7
009C 68E8      07416         SETF    WREG
009E 2000      07417         ADDWFC  r0x05, W
00A0 6E00      07418         MOVWF   r0x0d
00A2 C000 FFE9 07419         MOVFF   r0x08, FSR0L
00A6 C000 FFF3 07420         MOVFF   r0x09, PRODL
00AA 5000      07421         MOVF    r0x0a, W
00AC EC00 F000 07422         CALL    __gptrget1
00B0 6E00      07423         MOVWF   r0x08
00B2 C000 FFE9 07424         MOVFF   r0x0b, FSR0L
00B6 C000 FFF3 07425         MOVFF   r0x0c, PRODL
00BA 5000      07426         MOVF    r0x0d, W
00BC EC00 F000 07427         CALL    __gptrget1
00C0 6E00      07428         MOVWF   r0x0b
00C2 5000      07429         MOVF    r0x08, W
00C4 1800      07430         XORWF   r0x0b, W
00C6 E000      07431         BZ      _00137_DS_
               07432 ;       .line   269; MainDemo.c return FALSE;
00C8 6AE8      07433         CLRF    WREG
00CA D000      07434         BRA     _00139_DS_
00CC 07435 _00137_DS_:
               07436 ;       .line   267; MainDemo.c for(i=0; i<4; i++){
00CC 2A00      07437         INCF    r0x06, F
00CE B0D8      07438         BTFSC   STATUS, 0
00D0 2A00      07439         INCF    r0x07, F
00D2 D000      07440         BRA     _00135_DS_
00D4 07441 _00138_DS_:
               07442 ;       .line   272; MainDemo.c return TRUE;
00D4 0E01      07443         MOVLW   0x01
00D6 07444 _00139_DS_:
00D6 CFE4 F000 07445         MOVFF   PREINC1, r0x0d
00DA CFE4 F000 07446         MOVFF   PREINC1, r0x0c
00DE CFE4 F000 07447         MOVFF   PREINC1, r0x0b
00E2 CFE4 F000 07448         MOVFF   PREINC1, r0x0a
00E6 CFE4 F000 07449         MOVFF   PREINC1, r0x09
00EA CFE4 F000 07450         MOVFF   PREINC1, r0x08
00EE CFE4 F000 07451         MOVFF   PREINC1, r0x07
00F2 CFE4 F000 07452         MOVFF   PREINC1, r0x06
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00F6 CFE4 F000 07453         MOVFF   PREINC1, r0x05
00FA CFE4 F000 07454         MOVFF   PREINC1, r0x04
00FE CFE4 F000 07455         MOVFF   PREINC1, r0x03
0102 CFE4 F000 07456         MOVFF   PREINC1, r0x02
0106 CFE4 F000 07457         MOVFF   PREINC1, r0x01
010A CFE4 F000 07458         MOVFF   PREINC1, r0x00
010E CFE4 FFD9 07459         MOVFF   PREINC1, FSR2L
0112 0012      07460         RETURN  
               07461 
               07462 ; ; Starting pCode block
               07463 S_MainDemo__mac_cmp     code
0000 07464 _mac_cmp:
               07465 ;       .line   254; MainDemo.c BOOL mac_cmp(MAC_ADDR *m1, MAC_ADDR *m2){
0000 CFD9 FFE5 07466         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 07467         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 07468         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 07469         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 07470         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 07471         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 07472         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 07473         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 07474         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 07475         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 07476         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 07477         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 07478         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 07479         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 07480         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 07481         MOVFF   r0x0d, POSTDEC1
0040 0E02      07482         MOVLW   0x02
0042 CFDB F000 07483         MOVFF   PLUSW2, r0x00
0046 0E03      07484         MOVLW   0x03
0048 CFDB F000 07485         MOVFF   PLUSW2, r0x01
004C 0E04      07486         MOVLW   0x04
004E CFDB F000 07487         MOVFF   PLUSW2, r0x02
0052 0E05      07488         MOVLW   0x05
0054 CFDB F000 07489         MOVFF   PLUSW2, r0x03
0058 0E06      07490         MOVLW   0x06
005A CFDB F000 07491         MOVFF   PLUSW2, r0x04
005E 0E07      07492         MOVLW   0x07
0060 CFDB F000 07493         MOVFF   PLUSW2, r0x05
               07494 ;       .line   256; MainDemo.c for(i=0; i<6; i++){
0064 6A00      07495         CLRF    r0x06
0066 6A00      07496         CLRF    r0x07
0068 07497 _00117_DS_:
0068 5000      07498         MOVF    r0x07, W
006A 0F80      07499         ADDLW   0x80
006C 0F80      07500         ADDLW   0x80
006E E100      07501         BNZ     _00126_DS_
0070 0E06      07502         MOVLW   0x06
0072 5C00      07503         SUBWF   r0x06, W
0074 07504 _00126_DS_:
0074 E200      07505         BC      _00120_DS_
               07506 ;       .line   257; MainDemo.c if(m1->v[i] != m2->v[i]){
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0076 5000      07507         MOVF    r0x06, W
0078 2400      07508         ADDWF   r0x00, W
007A 6E00      07509         MOVWF   r0x08
007C 5000      07510         MOVF    r0x07, W
007E 2000      07511         ADDWFC  r0x01, W
0080 6E00      07512         MOVWF   r0x09
0082 6AE8      07513         CLRF    WREG
0084 BE00      07514         BTFSC   r0x07, 7
0086 68E8      07515         SETF    WREG
0088 2000      07516         ADDWFC  r0x02, W
008A 6E00      07517         MOVWF   r0x0a
008C 5000      07518         MOVF    r0x06, W
008E 2400      07519         ADDWF   r0x03, W
0090 6E00      07520         MOVWF   r0x0b
0092 5000      07521         MOVF    r0x07, W
0094 2000      07522         ADDWFC  r0x04, W
0096 6E00      07523         MOVWF   r0x0c
0098 6AE8      07524         CLRF    WREG
009A BE00      07525         BTFSC   r0x07, 7
009C 68E8      07526         SETF    WREG
009E 2000      07527         ADDWFC  r0x05, W
00A0 6E00      07528         MOVWF   r0x0d
00A2 C000 FFE9 07529         MOVFF   r0x08, FSR0L
00A6 C000 FFF3 07530         MOVFF   r0x09, PRODL
00AA 5000      07531         MOVF    r0x0a, W
00AC EC00 F000 07532         CALL    __gptrget1
00B0 6E00      07533         MOVWF   r0x08
00B2 C000 FFE9 07534         MOVFF   r0x0b, FSR0L
00B6 C000 FFF3 07535         MOVFF   r0x0c, PRODL
00BA 5000      07536         MOVF    r0x0d, W
00BC EC00 F000 07537         CALL    __gptrget1
00C0 6E00      07538         MOVWF   r0x0b
00C2 5000      07539         MOVF    r0x08, W
00C4 1800      07540         XORWF   r0x0b, W
00C6 E000      07541         BZ      _00119_DS_
               07542 ;       .line   258; MainDemo.c return FALSE;
00C8 6AE8      07543         CLRF    WREG
00CA D000      07544         BRA     _00121_DS_
00CC 07545 _00119_DS_:
               07546 ;       .line   256; MainDemo.c for(i=0; i<6; i++){
00CC 2A00      07547         INCF    r0x06, F
00CE B0D8      07548         BTFSC   STATUS, 0
00D0 2A00      07549         INCF    r0x07, F
00D2 D000      07550         BRA     _00117_DS_
00D4 07551 _00120_DS_:
               07552 ;       .line   261; MainDemo.c return TRUE;
00D4 0E01      07553         MOVLW   0x01
00D6 07554 _00121_DS_:
00D6 CFE4 F000 07555         MOVFF   PREINC1, r0x0d
00DA CFE4 F000 07556         MOVFF   PREINC1, r0x0c
00DE CFE4 F000 07557         MOVFF   PREINC1, r0x0b
00E2 CFE4 F000 07558         MOVFF   PREINC1, r0x0a
00E6 CFE4 F000 07559         MOVFF   PREINC1, r0x09
00EA CFE4 F000 07560         MOVFF   PREINC1, r0x08
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00EE CFE4 F000 07561         MOVFF   PREINC1, r0x07
00F2 CFE4 F000 07562         MOVFF   PREINC1, r0x06
00F6 CFE4 F000 07563         MOVFF   PREINC1, r0x05
00FA CFE4 F000 07564         MOVFF   PREINC1, r0x04
00FE CFE4 F000 07565         MOVFF   PREINC1, r0x03
0102 CFE4 F000 07566         MOVFF   PREINC1, r0x02
0106 CFE4 F000 07567         MOVFF   PREINC1, r0x01
010A CFE4 F000 07568         MOVFF   PREINC1, r0x00
010E CFE4 FFD9 07569         MOVFF   PREINC1, FSR2L
0112 0012      07570         RETURN  
               07571 
               07572 ; ; Starting pCode block
               07573 S_MainDemo__HighISR     code
0000 07574 _HighISR:
               07575 ;       .line   232; MainDemo.c void HighISR(void) __interrupt(1) //ML for sdcc        
0000 CFE8 FFE5 07576         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 07577         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 07578         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 07579         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 07580         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 07581         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 07582         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 07583         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 07584         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 07585         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 07586         MOVFF   FSR1L, FSR2L
               07587 ;       .line   239; MainDemo.c }
002C CFE4 FFD9 07588         MOVFF   PREINC1, FSR2L
0030 CFE4 FFFB 07589         MOVFF   PREINC1, PCLATU
0034 CFE4 FFFA 07590         MOVFF   PREINC1, PCLATH
0038 CFE4 FFEA 07591         MOVFF   PREINC1, FSR0H
003C CFE4 FFE9 07592         MOVFF   PREINC1, FSR0L
0040 CFE4 FFF4 07593         MOVFF   PREINC1, PRODH
0044 CFE4 FFF3 07594         MOVFF   PREINC1, PRODL
0048 CFE4 FFE0 07595         MOVFF   PREINC1, BSR
004C CFE4 FFD8 07596         MOVFF   PREINC1, STATUS
0050 CFE4 FFE8 07597         MOVFF   PREINC1, WREG
0054 0010      07598         RETFIE  
               07599 
               07600 ; ; Starting pCode block
               07601 S_MainDemo__LowISR      code
0000 07602 _LowISR:
               07603 ;       .line   211; MainDemo.c void LowISR(void) __interrupt (2) //ML for sdcc
0000 CFE8 FFE5 07604         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 07605         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 07606         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 07607         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 07608         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 07609         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 07610         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 07611         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 07612         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 07613         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 07614         MOVFF   FSR1L, FSR2L
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               07615 ;       .line   217; MainDemo.c TickUpdate();
002C EC00 F000 07616         CALL    _TickUpdate
0030 CFE4 FFD9 07617         MOVFF   PREINC1, FSR2L
0034 CFE4 FFFB 07618         MOVFF   PREINC1, PCLATU
0038 CFE4 FFFA 07619         MOVFF   PREINC1, PCLATH
003C CFE4 FFEA 07620         MOVFF   PREINC1, FSR0H
0040 CFE4 FFE9 07621         MOVFF   PREINC1, FSR0L
0044 CFE4 FFF4 07622         MOVFF   PREINC1, PRODH
0048 CFE4 FFF3 07623         MOVFF   PREINC1, PRODL
004C CFE4 FFE0 07624         MOVFF   PREINC1, BSR
0050 CFE4 FFD8 07625         MOVFF   PREINC1, STATUS
0054 CFE4 FFE8 07626         MOVFF   PREINC1, WREG
0058 0010      07627         RETFIE  
               07628 
               07629 ; ; Starting pCode block
005A 07630 __str_0:
005A 6F4E 4D20 07631         DB      0x4e, 0x6f, 0x20, 0x4d, 0x41, 0x43, 0x20, 0x3a, 0x20, 0x41, 0x52, 0x50
     4341 3A20 
     4120 5052 
0066 2020 2020 07632         DB      0x20, 0x20, 0x20, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20
     6552 7571 
     7365 2074 
0072 6146 6C69 07633         DB      0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x00
     6465 0000 
               07634 ; ; Starting pCode block
007A 07635 __str_1:
007A 4844 5043 07636         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x00
     4F20 4646 
     5245 0000 
               07637 ; ; Starting pCode block
0086 07638 __str_2:
0086 4844 5043 07639         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x41, 0x43, 0x4b, 0x00
     4120 4B43 
     0000      
               07640 ; ; Starting pCode block
0090 07641 __str_3:
0090 4944 4353 07642         DB      0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x45, 0x44, 0x20, 0x70, 0x61
     5241 4544 
     2044 6170 
009C 6B63 7465 07643         DB      0x63, 0x6b, 0x65, 0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x73, 0x65
     6620 6F72 
     206D 6573 
00A8 7672 7265 07644         DB      0x72, 0x76, 0x65, 0x72, 0x00
     0000      
               07645 ; ; Starting pCode block
00AE 07646 __str_4:
00AE 4844 5043 07647         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45
     4420 5349 
     4F43 4556 
00BA 5952 0000 07648         DB      0x52, 0x59, 0x00
               07649 ; ; Starting pCode block
00BE 07650 __str_5:
00BE 4844 5043 07651         DB      0x44, 0x48, 0x43, 0x50, 0x20, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54
     5220 5145 
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
     4555 5453 
00CA 0000      07652         DB      0x00
               07653 ; ; Starting pCode block
00CC 07654 __str_6:
00CC 7257 6E6F 07655         DB      0x57, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x44, 0x48, 0x43, 0x50, 0x20, 0x74
     2067 4844 
     5043 7420 
00D8 7079 0065 07656         DB      0x79, 0x70, 0x65, 0x00
               07657 ; ; Starting pCode block
00DC 07658 __str_7:
00DC 6146 6C69 07659         DB      0x46, 0x61, 0x69, 0x6c, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x72, 0x65, 0x61
     7420 206F 
     7263 6165 
00E8 6574 2020 07660         DB      0x74, 0x65, 0x20, 0x20, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x00
     6F73 6B63 
     7465 0000 
               07661 ; ; Starting pCode block
00F4 07662 __str_8:
00F4 6E45 6574 07663         DB      0x45, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x54, 0x61, 0x73
     6972 676E 
     5420 7361 
0100 206B 7943 07664         DB      0x6b, 0x20, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x00
     6C63 0065 
               07665 ; ; Starting pCode block
0108 07666 __str_9:
0108 4E49 4947 07667         DB      0x49, 0x4e, 0x47, 0x49, 0x32, 0x33, 0x31, 0x35, 0x20, 0x49, 0x6e, 0x69
     3332 3531 
     4920 696E 
0114 0074      07668         DB      0x74, 0x00
               07669 
               07670 
               07671 ; Statistics:
               07672 ; code size:    15802 (0x3dba) bytes (12.06%)
               07673 ;                7901 (0x1edd) words
               07674 ; udata size:    1061 (0x0425) bytes (27.63%)
               07675 ; access size:     27 (0x001b) bytes
               07676 
               07677 
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 144


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC0                          00000FEE
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
WREG                              00000FE8
_00117_DS_                        00000068
_00119_DS_                        000000CC
_00120_DS_                        000000D4
_00121_DS_                        000000D6
_00126_DS_                        00000074
_00135_DS_                        00000068
_00137_DS_                        000000CC
_00138_DS_                        000000D4
_00139_DS_                        000000D6
_00144_DS_                        00000074
_00151_DS_                        00000060
_00155_DS_                        000000B6
_00160_DS_                        0000006C
_00165_DS_                        00000052
_00169_DS_                        000000AE
_00174_DS_                        00000064
_00181_DS_                        0000006C
_00183_DS_                        000000FC
_00185_DS_                        00000034
_00187_DS_                        00000104
_00188_DS_                        0000010C
_00189_DS_                        00000124
_00196_DS_                        00000040
_00197_DS_                        00000078
_00207_DS_                        0000005C
_00215_DS_                        00000108
_00216_DS_                        00000154
_00218_DS_                        00000268
_00219_DS_                        000002C0
_00220_DS_                        000002F4
_00222_DS_                        0000030C
_00228_DS_                        000000FC
_00230_DS_                        00000106
_00235_DS_                        00000086
_00238_DS_                        000003A8
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00240_DS_                        000003C4
_00241_DS_                        000000D0
_00244_DS_                        0000010E
_00245_DS_                        00000158
_00248_DS_                        000001BC
_00249_DS_                        0000023A
_00252_DS_                        000002A2
_00268_DS_                        000000DC
_00269_DS_                        00000164
_00270_DS_                        00000246
_00273_DS_                        000003B6
_00279_DS_                        00000172
_00282_DS_                        0000021A
_00283_DS_                        00000266
_00286_DS_                        000003D4
_00292_DS_                        0000048C
_00294_DS_                        000004A4
_00305_DS_                        00000164
_00307_DS_                        00000170
_00312_DS_                        0000012A
_00315_DS_                        00000196
_00321_DS_                        00000136
_00326_DS_                        0000004C
_00331_DS_                        00000282
_00342_DS_                        000000C8
_00344_DS_                        000000E4
_00349_DS_                        000000D6
_00354_DS_                        0000005C
_00357_DS_                        00000194
_00359_DS_                        000001B0
_00366_DS_                        000001A2
_00372_DS_                        0000013C
_00373_DS_                        00000174
_00374_DS_                        00000068
_00376_DS_                        00000180
_00377_DS_                        000001B2
_00379_DS_                        000001CE
_00387_DS_                        0000007A
_00388_DS_                        000000F6
_00389_DS_                        000000F8
_00390_DS_                        000001C0
_00395_DS_                        000000A6
_00398_DS_                        00000132
_00402_DS_                        000001C2
_00406_DS_                        00000260
_00409_DS_                        000001DC
_00411_DS_                        00000354
_00412_DS_                        0000013A
_00415_DS_                        0000016E
_00416_DS_                        00000362
_00422_DS_                        00000136
_00434_DS_                        00000144
_00436_DS_                        000001BE
_00438_DS_                        00000216
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00439_DS_                        00000246
_00440_DS_                        00000248
_00446_DS_                        00000196
_00447_DS_                        00000080
_00449_DS_                        000001A2
_00450_DS_                        000001A4
_00455_DS_                        00000092
_00456_DS_                        000000FA
_00457_DS_                        000000FC
_00462_DS_                        0000002C
_00466_DS_                        00000076
_00471_DS_                        00000038
_00476_DS_                        0000004A
_00479_DS_                        00000088
_00480_DS_                        0000009E
_00483_DS_                        000000DC
_00492_DS_                        00000056
_00493_DS_                        000000AA
_00500_DS_                        000000A8
_00502_DS_                        000001E4
_00503_DS_                        000001F4
_00504_DS_                        000001F6
_00509_DS_                        000000B4
_00516_DS_                        0000004A
_00518_DS_                        00000086
_00519_DS_                        0000008E
_00520_DS_                        00000090
_00525_DS_                        00000056
_00532_DS_                        00000068
_00534_DS_                        000000F4
_00535_DS_                        00000104
_00536_DS_                        00000106
_00541_DS_                        00000074
_00547_DS_                        0000010C
_00548_DS_                        0000014C
_00552_DS_                        0000021A
_00553_DS_                        0000025A
_00558_DS_                        0000006A
_00560_DS_                        000002CE
_00562_DS_                        000002E6
_00572_DS_                        00000076
_00573_DS_                        000000F0
_00574_DS_                        00000192
_00575_DS_                        000001EA
_00576_DS_                        000002A0
_00583_DS_                        000000D8
_00586_DS_                        00000172
_00590_DS_                        000000B4
_00591_DS_                        000000D4
_00596_DS_                        00000116
_00602_DS_                        000000F0
_00603_DS_                        00000142
_00606_DS_                        00000168
_00613_DS_                        00000262
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00618_DS_                        00000192
_00620_DS_                        000002B4
_00633_DS_                        000000D6
_00635_DS_                        000000E2
_00636_DS_                        000000EE
_00642_DS_                        00000016
_00654_DS_                        000000FC
_00655_DS_                        0000005C
_00658_DS_                        000000D4
_00665_DS_                        0000009A
_00666_DS_                        000000E4
_00674_DS_                        00000082
_00683_DS_                        00000062
_00686_DS_                        0000016C
_00688_DS_                        00000194
_00689_DS_                        000000C4
_00701_DS_                        0000013C
_00704_DS_                        000000A0
_00705_DS_                        00000084
_00706_DS_                        00000094
_00707_DS_                        00000092
_00709_DS_                        00000102
_00712_DS_                        0000017C
_00718_DS_                        0000002C
_00719_DS_                        00000030
_00732_DS_                        000000CC
_00736_DS_                        00000134
_00739_DS_                        0000015E
_00743_DS_                        00000188
_00750_DS_                        00000152
_00751_DS_                        00000114
_10730_DS_                        000000FA
_20731_DS_                        00000100
_30732_DS_                        00000106
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_AN0String                        00000000
_ARPIsResolved                    00000000
_ARPResolve                       00000000
_AppConfig                        00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_DisplayIPValue                   00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DisplayIPValue_IPDigit_1_1       00000000
_DisplayString                    00000000
_DisplayWORD                      00000000
_DisplayWORD_WDigit_1_1           00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_HighISR                          00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_InitAppConfig                    00000000
_InitializeBoard                  00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_LowISR                           00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAC_ADDR_GATEWAY                 00000000
_MAGIC_COOKIE                     00000002
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_StackInit                        00000000
_StackTask                        00000000
_StackTaskModified                00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_TickConvertToMilliseconds        00000000
_TickGet                          00000000
_TickInit                         00000000
_TickUpdate                       00000000
_UDPDiscard                       00000000
_UDPFlush                         00000000
_UDPGet                           00000000
_UDPGetArray                      00000000
_UDPIsGetReady                    00000000
_UDPIsPutReady                    00000000
_UDPOpen                          00000000
_UDPPut                           00000000
_UDPPutArray                      00000000
_UDPPutArrayInvert                00000000
_UDPRxCount                       00000000
_UDPSocketInfo                    00000000
_UDPTxCount                       00000000
_WDTCON                           00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
__gptrput3                        00000000
__gptrput4                        00000000
__modulong                        00000000
__str_0                           0000005A
__str_1                           0000007A
__str_2                           00000086
__str_3                           00000090
__str_4                           000000AE
__str_5                           000000BE
__str_6                           000000CC
__str_7                           000000DC
__str_8                           000000F4
__str_9                           00000108
_activeUDPSocket                  00000000
_addItem                          00000000
_addMacFromServ                   00000000
_buildBootpHeader                 00000000
_buildDiscoverMsg                 00000000
_buildHeader                      00000000
_configureBootpHeader             00000000
_doDhcpOperations                 00000000
_doDhcpOperations_ip_last_pckt_1_1  00000000
_doDhcpOperations_receiver_socket_1_1  00000000
_doDhcpOperations_send_c_socket_1_1  00000000
_doDhcpOperations_send_s_socket_1_1  00000000
_doDhcpOperations_server_ip_1_1   00000000
_extractBootProtHeader            00000000
_extractBootProtHeader_cookie_checker_1_1  00000000
_extractBootProtHeader_length_1_1  00000000
_extractBootProtHeader_opt_1_1    00000000
_findInPool                       00000000
_getLeaseFromAck                  00000000
_getMacFromServ                   00000000
_getMacFromServ_gw_mac_1_1        00000000
_initializeClientDB               00000000
_initializeItem                   00000000
_ip_cmp                           00000000
_isPoolItemUsed                   00000000
_leaseTimeCheck                   00000000
_mac_cmp                          00000000
_main                             00000000
_memcpy                           00000000
_memset                           00000000
_message                          00000000
_pool                             00000000
_rcvdFromClient                   00000000
_rcvdFromClient_bootp_header_1_1  00000000
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_rcvdFromClient_dhcp_header_1_1   00000000
_rcvdFromClient_dhcp_header_length_1_1  00000000
_rcvdFromClient_dhcp_type_1_1     00000000
_rcvdFromClient_pool_it_1_1       00000000
_rcvdFromServer                   00000000
_rcvdFromServer_bootp_header_1_1  00000000
_rcvdFromServer_dhcp_header_1_1   00000000
_rcvdFromServer_dhcp_header_length_1_1  00000000
_rcvdFromServer_dhcp_type_1_1     00000000
_rcvdFromServer_lease_time_1_1    00000000
_rcvdFromServer_pool_it_1_1       00000000
_seconds                          00000000
_sendRelease                      00000000
_sendRelease_bootp_header_1_1     00000000
_sendRequest                      00000000
_sendRequestMsg                   00000000
_sendRequest_bootp_header_1_1     00000000
_sendRequest_dhcp_header_1_1      00000000
_sendRequest_dhcp_header_length_1_1  00000000
_setDhcpIp                        00000000
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_timeCheck                        00000000
_timeCheck_counter_1_1            0000000A
_timeCheck_previous_1_1           00000006
_transmitToClient                 00000000
_transmitToClient_broadcast_1_1   00000000
_transmitToClient_lease_time_1_1  00000000
_uitoa                            00000000
_ultoa                            00000000
ivec_0x1_HighISR                  00000008
ivec_0x2_LowISR                   00000018
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
gpasm-0.13.7 beta               Objects/MainDemo.asm5-9-2014  05:30:11           PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
r0x14                             00000014
r0x15                             00000015
r0x16                             00000016
r0x17                             00000017
r0x18                             00000018
r0x19                             00000019
r0x1a                             0000001A


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

